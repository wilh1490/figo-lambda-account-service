import { SENSITIVE_STRING } from "@smithy/smithy-client";
import { AgentVersionFilterSensitiveLog, ConditionFlowNodeConfigurationFilterSensitiveLog, FlowNodeInputFilterSensitiveLog, FlowValidationFilterSensitiveLog, InlineCodeFlowNodeConfigurationFilterSensitiveLog, KnowledgeBaseFlowNodeConfigurationFilterSensitiveLog, LoopControllerFlowNodeConfigurationFilterSensitiveLog, PromptFlowNodeConfigurationFilterSensitiveLog, PromptTemplateConfigurationFilterSensitiveLog, } from "./models_0";
export const IngestionJobStatus = {
    COMPLETE: "COMPLETE",
    FAILED: "FAILED",
    IN_PROGRESS: "IN_PROGRESS",
    STARTING: "STARTING",
    STOPPED: "STOPPED",
    STOPPING: "STOPPING",
};
export const IngestionJobFilterAttribute = {
    STATUS: "STATUS",
};
export const IngestionJobFilterOperator = {
    EQ: "EQ",
};
export const IngestionJobSortByAttribute = {
    STARTED_AT: "STARTED_AT",
    STATUS: "STATUS",
};
export const SortOrder = {
    ASCENDING: "ASCENDING",
    DESCENDING: "DESCENDING",
};
export const ContentDataSourceType = {
    CUSTOM: "CUSTOM",
    S3: "S3",
};
export const DocumentStatus = {
    DELETE_IN_PROGRESS: "DELETE_IN_PROGRESS",
    DELETING: "DELETING",
    FAILED: "FAILED",
    IGNORED: "IGNORED",
    INDEXED: "INDEXED",
    IN_PROGRESS: "IN_PROGRESS",
    METADATA_PARTIALLY_INDEXED: "METADATA_PARTIALLY_INDEXED",
    METADATA_UPDATE_FAILED: "METADATA_UPDATE_FAILED",
    NOT_FOUND: "NOT_FOUND",
    PARTIALLY_INDEXED: "PARTIALLY_INDEXED",
    PENDING: "PENDING",
    STARTING: "STARTING",
};
export const InlineContentType = {
    BYTE: "BYTE",
    TEXT: "TEXT",
};
export const CustomSourceType = {
    IN_LINE: "IN_LINE",
    S3_LOCATION: "S3_LOCATION",
};
export const MetadataValueType = {
    BOOLEAN: "BOOLEAN",
    NUMBER: "NUMBER",
    STRING: "STRING",
    STRING_LIST: "STRING_LIST",
};
export const MetadataSourceType = {
    IN_LINE_ATTRIBUTE: "IN_LINE_ATTRIBUTE",
    S3_LOCATION: "S3_LOCATION",
};
export const RedshiftProvisionedAuthType = {
    IAM: "IAM",
    USERNAME: "USERNAME",
    USERNAME_PASSWORD: "USERNAME_PASSWORD",
};
export const RedshiftServerlessAuthType = {
    IAM: "IAM",
    USERNAME_PASSWORD: "USERNAME_PASSWORD",
};
export const RedshiftQueryEngineType = {
    PROVISIONED: "PROVISIONED",
    SERVERLESS: "SERVERLESS",
};
export const IncludeExclude = {
    EXCLUDE: "EXCLUDE",
    INCLUDE: "INCLUDE",
};
export const RedshiftQueryEngineStorageType = {
    AWS_DATA_CATALOG: "AWS_DATA_CATALOG",
    REDSHIFT: "REDSHIFT",
};
export const QueryEngineType = {
    REDSHIFT: "REDSHIFT",
};
export const KnowledgeBaseType = {
    KENDRA: "KENDRA",
    SQL: "SQL",
    VECTOR: "VECTOR",
};
export const EmbeddingDataType = {
    BINARY: "BINARY",
    FLOAT32: "FLOAT32",
};
export const SupplementalDataStorageLocationType = {
    S3: "S3",
};
export const KnowledgeBaseStorageType = {
    MONGO_DB_ATLAS: "MONGO_DB_ATLAS",
    NEPTUNE_ANALYTICS: "NEPTUNE_ANALYTICS",
    OPENSEARCH_MANAGED_CLUSTER: "OPENSEARCH_MANAGED_CLUSTER",
    OPENSEARCH_SERVERLESS: "OPENSEARCH_SERVERLESS",
    PINECONE: "PINECONE",
    RDS: "RDS",
    REDIS_ENTERPRISE_CLOUD: "REDIS_ENTERPRISE_CLOUD",
    S3_VECTORS: "S3_VECTORS",
};
export const KnowledgeBaseStatus = {
    ACTIVE: "ACTIVE",
    CREATING: "CREATING",
    DELETE_UNSUCCESSFUL: "DELETE_UNSUCCESSFUL",
    DELETING: "DELETING",
    FAILED: "FAILED",
    UPDATING: "UPDATING",
};
export var PromptGenAiResource;
(function (PromptGenAiResource) {
    PromptGenAiResource.visit = (value, visitor) => {
        if (value.agent !== undefined)
            return visitor.agent(value.agent);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(PromptGenAiResource || (PromptGenAiResource = {}));
export var FlowNodeConfiguration;
(function (FlowNodeConfiguration) {
    FlowNodeConfiguration.visit = (value, visitor) => {
        if (value.input !== undefined)
            return visitor.input(value.input);
        if (value.output !== undefined)
            return visitor.output(value.output);
        if (value.knowledgeBase !== undefined)
            return visitor.knowledgeBase(value.knowledgeBase);
        if (value.condition !== undefined)
            return visitor.condition(value.condition);
        if (value.lex !== undefined)
            return visitor.lex(value.lex);
        if (value.prompt !== undefined)
            return visitor.prompt(value.prompt);
        if (value.lambdaFunction !== undefined)
            return visitor.lambdaFunction(value.lambdaFunction);
        if (value.storage !== undefined)
            return visitor.storage(value.storage);
        if (value.agent !== undefined)
            return visitor.agent(value.agent);
        if (value.retrieval !== undefined)
            return visitor.retrieval(value.retrieval);
        if (value.iterator !== undefined)
            return visitor.iterator(value.iterator);
        if (value.collector !== undefined)
            return visitor.collector(value.collector);
        if (value.inlineCode !== undefined)
            return visitor.inlineCode(value.inlineCode);
        if (value.loop !== undefined)
            return visitor.loop(value.loop);
        if (value.loopInput !== undefined)
            return visitor.loopInput(value.loopInput);
        if (value.loopController !== undefined)
            return visitor.loopController(value.loopController);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(FlowNodeConfiguration || (FlowNodeConfiguration = {}));
export const ByteContentDocFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.data && { data: SENSITIVE_STRING }),
});
export const TextContentDocFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.data && { data: SENSITIVE_STRING }),
});
export const InlineContentFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.byteContent && { byteContent: ByteContentDocFilterSensitiveLog(obj.byteContent) }),
    ...(obj.textContent && { textContent: TextContentDocFilterSensitiveLog(obj.textContent) }),
});
export const CustomContentFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.inlineContent && { inlineContent: InlineContentFilterSensitiveLog(obj.inlineContent) }),
});
export const DocumentContentFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.custom && { custom: CustomContentFilterSensitiveLog(obj.custom) }),
});
export const MetadataAttributeValueFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.numberValue && { numberValue: SENSITIVE_STRING }),
    ...(obj.stringValue && { stringValue: SENSITIVE_STRING }),
    ...(obj.stringListValue && { stringListValue: SENSITIVE_STRING }),
});
export const MetadataAttributeFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.key && { key: SENSITIVE_STRING }),
    ...(obj.value && { value: MetadataAttributeValueFilterSensitiveLog(obj.value) }),
});
export const DocumentMetadataFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.inlineAttributes && {
        inlineAttributes: obj.inlineAttributes.map((item) => MetadataAttributeFilterSensitiveLog(item)),
    }),
});
export const KnowledgeBaseDocumentFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.metadata && { metadata: DocumentMetadataFilterSensitiveLog(obj.metadata) }),
    ...(obj.content && { content: DocumentContentFilterSensitiveLog(obj.content) }),
});
export const IngestKnowledgeBaseDocumentsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.documents && { documents: obj.documents.map((item) => KnowledgeBaseDocumentFilterSensitiveLog(item)) }),
});
export const QueryGenerationContextFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const QueryGenerationConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.generationContext && { generationContext: SENSITIVE_STRING }),
});
export const RedshiftConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.queryGenerationConfiguration && {
        queryGenerationConfiguration: QueryGenerationConfigurationFilterSensitiveLog(obj.queryGenerationConfiguration),
    }),
});
export const SqlKnowledgeBaseConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.redshiftConfiguration && {
        redshiftConfiguration: RedshiftConfigurationFilterSensitiveLog(obj.redshiftConfiguration),
    }),
});
export const KnowledgeBaseConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.sqlKnowledgeBaseConfiguration && {
        sqlKnowledgeBaseConfiguration: SqlKnowledgeBaseConfigurationFilterSensitiveLog(obj.sqlKnowledgeBaseConfiguration),
    }),
});
export const NeptuneAnalyticsConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.graphArn && { graphArn: SENSITIVE_STRING }),
});
export const OpenSearchManagedClusterConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.vectorIndexName && { vectorIndexName: SENSITIVE_STRING }),
});
export const S3VectorsConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.vectorBucketArn && { vectorBucketArn: SENSITIVE_STRING }),
    ...(obj.indexArn && { indexArn: SENSITIVE_STRING }),
    ...(obj.indexName && { indexName: SENSITIVE_STRING }),
});
export const StorageConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.opensearchManagedClusterConfiguration && {
        opensearchManagedClusterConfiguration: OpenSearchManagedClusterConfigurationFilterSensitiveLog(obj.opensearchManagedClusterConfiguration),
    }),
    ...(obj.neptuneAnalyticsConfiguration && {
        neptuneAnalyticsConfiguration: NeptuneAnalyticsConfigurationFilterSensitiveLog(obj.neptuneAnalyticsConfiguration),
    }),
    ...(obj.s3VectorsConfiguration && {
        s3VectorsConfiguration: S3VectorsConfigurationFilterSensitiveLog(obj.s3VectorsConfiguration),
    }),
});
export const CreateKnowledgeBaseRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.knowledgeBaseConfiguration && {
        knowledgeBaseConfiguration: KnowledgeBaseConfigurationFilterSensitiveLog(obj.knowledgeBaseConfiguration),
    }),
    ...(obj.storageConfiguration && {
        storageConfiguration: StorageConfigurationFilterSensitiveLog(obj.storageConfiguration),
    }),
});
export const KnowledgeBaseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.knowledgeBaseConfiguration && {
        knowledgeBaseConfiguration: KnowledgeBaseConfigurationFilterSensitiveLog(obj.knowledgeBaseConfiguration),
    }),
    ...(obj.storageConfiguration && {
        storageConfiguration: StorageConfigurationFilterSensitiveLog(obj.storageConfiguration),
    }),
});
export const CreateKnowledgeBaseResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.knowledgeBase && { knowledgeBase: KnowledgeBaseFilterSensitiveLog(obj.knowledgeBase) }),
});
export const GetKnowledgeBaseResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.knowledgeBase && { knowledgeBase: KnowledgeBaseFilterSensitiveLog(obj.knowledgeBase) }),
});
export const UpdateKnowledgeBaseRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.knowledgeBaseConfiguration && {
        knowledgeBaseConfiguration: KnowledgeBaseConfigurationFilterSensitiveLog(obj.knowledgeBaseConfiguration),
    }),
    ...(obj.storageConfiguration && {
        storageConfiguration: StorageConfigurationFilterSensitiveLog(obj.storageConfiguration),
    }),
});
export const UpdateKnowledgeBaseResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.knowledgeBase && { knowledgeBase: KnowledgeBaseFilterSensitiveLog(obj.knowledgeBase) }),
});
export const PromptAgentResourceFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PromptGenAiResourceFilterSensitiveLog = (obj) => {
    if (obj.agent !== undefined)
        return { agent: SENSITIVE_STRING };
    if (obj.$unknown !== undefined)
        return { [obj.$unknown[0]]: "UNKNOWN" };
};
export const PromptMetadataEntryFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.key && { key: SENSITIVE_STRING }),
    ...(obj.value && { value: SENSITIVE_STRING }),
});
export const PromptVariantFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.templateConfiguration && {
        templateConfiguration: PromptTemplateConfigurationFilterSensitiveLog(obj.templateConfiguration),
    }),
    ...(obj.inferenceConfiguration && { inferenceConfiguration: obj.inferenceConfiguration }),
    ...(obj.metadata && { metadata: SENSITIVE_STRING }),
    ...(obj.genAiResource && { genAiResource: SENSITIVE_STRING }),
});
export const CreatePromptRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.variants && { variants: SENSITIVE_STRING }),
});
export const CreatePromptResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.variants && { variants: SENSITIVE_STRING }),
});
export const CreatePromptVersionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.variants && { variants: SENSITIVE_STRING }),
});
export const GetPromptResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.variants && { variants: SENSITIVE_STRING }),
});
export const UpdatePromptRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.variants && { variants: SENSITIVE_STRING }),
});
export const UpdatePromptResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.variants && { variants: SENSITIVE_STRING }),
});
export const ValidateFlowDefinitionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.validations && { validations: obj.validations.map((item) => FlowValidationFilterSensitiveLog(item)) }),
});
export const GetAgentVersionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.agentVersion && { agentVersion: AgentVersionFilterSensitiveLog(obj.agentVersion) }),
});
export const FlowDefinitionFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.nodes && { nodes: obj.nodes.map((item) => FlowNodeFilterSensitiveLog(item)) }),
    ...(obj.connections && { connections: obj.connections.map((item) => item) }),
});
export const FlowNodeFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.configuration && { configuration: FlowNodeConfigurationFilterSensitiveLog(obj.configuration) }),
    ...(obj.inputs && { inputs: obj.inputs.map((item) => FlowNodeInputFilterSensitiveLog(item)) }),
});
export const FlowNodeConfigurationFilterSensitiveLog = (obj) => {
    if (obj.input !== undefined)
        return { input: obj.input };
    if (obj.output !== undefined)
        return { output: obj.output };
    if (obj.knowledgeBase !== undefined)
        return { knowledgeBase: KnowledgeBaseFlowNodeConfigurationFilterSensitiveLog(obj.knowledgeBase) };
    if (obj.condition !== undefined)
        return { condition: ConditionFlowNodeConfigurationFilterSensitiveLog(obj.condition) };
    if (obj.lex !== undefined)
        return { lex: obj.lex };
    if (obj.prompt !== undefined)
        return { prompt: PromptFlowNodeConfigurationFilterSensitiveLog(obj.prompt) };
    if (obj.lambdaFunction !== undefined)
        return { lambdaFunction: obj.lambdaFunction };
    if (obj.storage !== undefined)
        return { storage: obj.storage };
    if (obj.agent !== undefined)
        return { agent: obj.agent };
    if (obj.retrieval !== undefined)
        return { retrieval: obj.retrieval };
    if (obj.iterator !== undefined)
        return { iterator: obj.iterator };
    if (obj.collector !== undefined)
        return { collector: obj.collector };
    if (obj.inlineCode !== undefined)
        return { inlineCode: InlineCodeFlowNodeConfigurationFilterSensitiveLog(obj.inlineCode) };
    if (obj.loop !== undefined)
        return { loop: LoopFlowNodeConfigurationFilterSensitiveLog(obj.loop) };
    if (obj.loopInput !== undefined)
        return { loopInput: obj.loopInput };
    if (obj.loopController !== undefined)
        return { loopController: LoopControllerFlowNodeConfigurationFilterSensitiveLog(obj.loopController) };
    if (obj.$unknown !== undefined)
        return { [obj.$unknown[0]]: "UNKNOWN" };
};
export const LoopFlowNodeConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.definition && { definition: SENSITIVE_STRING }),
});
export const CreateFlowRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.definition && { definition: SENSITIVE_STRING }),
});
export const CreateFlowResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.definition && { definition: SENSITIVE_STRING }),
});
export const CreateFlowVersionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.definition && { definition: SENSITIVE_STRING }),
});
export const GetFlowResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.definition && { definition: SENSITIVE_STRING }),
    ...(obj.validations && { validations: obj.validations.map((item) => FlowValidationFilterSensitiveLog(item)) }),
});
export const GetFlowVersionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.definition && { definition: SENSITIVE_STRING }),
});
export const UpdateFlowRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.definition && { definition: SENSITIVE_STRING }),
});
export const UpdateFlowResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.definition && { definition: SENSITIVE_STRING }),
});
export const ValidateFlowDefinitionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.definition && { definition: SENSITIVE_STRING }),
});
