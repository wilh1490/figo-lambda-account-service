"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var index_exports = {};
__export(index_exports, {
  APISchema: () => APISchema,
  APISchemaFilterSensitiveLog: () => APISchemaFilterSensitiveLog,
  AccessDeniedException: () => AccessDeniedException,
  ActionGroupExecutor: () => ActionGroupExecutor,
  ActionGroupSignature: () => ActionGroupSignature,
  ActionGroupState: () => ActionGroupState,
  AgentActionGroupFilterSensitiveLog: () => AgentActionGroupFilterSensitiveLog,
  AgentAliasStatus: () => AgentAliasStatus,
  AgentCollaboration: () => AgentCollaboration,
  AgentCollaboratorFilterSensitiveLog: () => AgentCollaboratorFilterSensitiveLog,
  AgentCollaboratorSummaryFilterSensitiveLog: () => AgentCollaboratorSummaryFilterSensitiveLog,
  AgentFilterSensitiveLog: () => AgentFilterSensitiveLog,
  AgentStatus: () => AgentStatus,
  AgentVersionFilterSensitiveLog: () => AgentVersionFilterSensitiveLog,
  AliasInvocationState: () => AliasInvocationState,
  AssociateAgentCollaboratorCommand: () => AssociateAgentCollaboratorCommand,
  AssociateAgentCollaboratorRequestFilterSensitiveLog: () => AssociateAgentCollaboratorRequestFilterSensitiveLog,
  AssociateAgentCollaboratorResponseFilterSensitiveLog: () => AssociateAgentCollaboratorResponseFilterSensitiveLog,
  AssociateAgentKnowledgeBaseCommand: () => AssociateAgentKnowledgeBaseCommand,
  BedrockAgent: () => BedrockAgent,
  BedrockAgentClient: () => BedrockAgentClient,
  BedrockAgentServiceException: () => BedrockAgentServiceException,
  ByteContentDocFilterSensitiveLog: () => ByteContentDocFilterSensitiveLog,
  CachePointType: () => CachePointType,
  ChatPromptTemplateConfigurationFilterSensitiveLog: () => ChatPromptTemplateConfigurationFilterSensitiveLog,
  ChunkingStrategy: () => ChunkingStrategy,
  ConcurrencyType: () => ConcurrencyType,
  ConditionFlowNodeConfigurationFilterSensitiveLog: () => ConditionFlowNodeConfigurationFilterSensitiveLog,
  ConflictException: () => ConflictException,
  ConfluenceAuthType: () => ConfluenceAuthType,
  ConfluenceCrawlerConfigurationFilterSensitiveLog: () => ConfluenceCrawlerConfigurationFilterSensitiveLog,
  ConfluenceDataSourceConfigurationFilterSensitiveLog: () => ConfluenceDataSourceConfigurationFilterSensitiveLog,
  ConfluenceHostType: () => ConfluenceHostType,
  ContentBlock: () => ContentBlock,
  ContentBlockFilterSensitiveLog: () => ContentBlockFilterSensitiveLog,
  ContentDataSourceType: () => ContentDataSourceType,
  ContextEnrichmentType: () => ContextEnrichmentType,
  ConversationRole: () => ConversationRole,
  CrawlFilterConfigurationFilterSensitiveLog: () => CrawlFilterConfigurationFilterSensitiveLog,
  CrawlFilterConfigurationType: () => CrawlFilterConfigurationType,
  CreateAgentActionGroupCommand: () => CreateAgentActionGroupCommand,
  CreateAgentActionGroupRequestFilterSensitiveLog: () => CreateAgentActionGroupRequestFilterSensitiveLog,
  CreateAgentActionGroupResponseFilterSensitiveLog: () => CreateAgentActionGroupResponseFilterSensitiveLog,
  CreateAgentAliasCommand: () => CreateAgentAliasCommand,
  CreateAgentCommand: () => CreateAgentCommand,
  CreateAgentRequestFilterSensitiveLog: () => CreateAgentRequestFilterSensitiveLog,
  CreateAgentResponseFilterSensitiveLog: () => CreateAgentResponseFilterSensitiveLog,
  CreateDataSourceCommand: () => CreateDataSourceCommand,
  CreateDataSourceRequestFilterSensitiveLog: () => CreateDataSourceRequestFilterSensitiveLog,
  CreateDataSourceResponseFilterSensitiveLog: () => CreateDataSourceResponseFilterSensitiveLog,
  CreateFlowAliasCommand: () => CreateFlowAliasCommand,
  CreateFlowCommand: () => CreateFlowCommand,
  CreateFlowRequestFilterSensitiveLog: () => CreateFlowRequestFilterSensitiveLog,
  CreateFlowResponseFilterSensitiveLog: () => CreateFlowResponseFilterSensitiveLog,
  CreateFlowVersionCommand: () => CreateFlowVersionCommand,
  CreateFlowVersionResponseFilterSensitiveLog: () => CreateFlowVersionResponseFilterSensitiveLog,
  CreateKnowledgeBaseCommand: () => CreateKnowledgeBaseCommand,
  CreateKnowledgeBaseRequestFilterSensitiveLog: () => CreateKnowledgeBaseRequestFilterSensitiveLog,
  CreateKnowledgeBaseResponseFilterSensitiveLog: () => CreateKnowledgeBaseResponseFilterSensitiveLog,
  CreatePromptCommand: () => CreatePromptCommand,
  CreatePromptRequestFilterSensitiveLog: () => CreatePromptRequestFilterSensitiveLog,
  CreatePromptResponseFilterSensitiveLog: () => CreatePromptResponseFilterSensitiveLog,
  CreatePromptVersionCommand: () => CreatePromptVersionCommand,
  CreatePromptVersionResponseFilterSensitiveLog: () => CreatePromptVersionResponseFilterSensitiveLog,
  CreationMode: () => CreationMode,
  CustomContentFilterSensitiveLog: () => CustomContentFilterSensitiveLog,
  CustomControlMethod: () => CustomControlMethod,
  CustomSourceType: () => CustomSourceType,
  DataDeletionPolicy: () => DataDeletionPolicy,
  DataSourceConfigurationFilterSensitiveLog: () => DataSourceConfigurationFilterSensitiveLog,
  DataSourceFilterSensitiveLog: () => DataSourceFilterSensitiveLog,
  DataSourceStatus: () => DataSourceStatus,
  DataSourceType: () => DataSourceType,
  DeleteAgentActionGroupCommand: () => DeleteAgentActionGroupCommand,
  DeleteAgentAliasCommand: () => DeleteAgentAliasCommand,
  DeleteAgentCommand: () => DeleteAgentCommand,
  DeleteAgentVersionCommand: () => DeleteAgentVersionCommand,
  DeleteDataSourceCommand: () => DeleteDataSourceCommand,
  DeleteFlowAliasCommand: () => DeleteFlowAliasCommand,
  DeleteFlowCommand: () => DeleteFlowCommand,
  DeleteFlowVersionCommand: () => DeleteFlowVersionCommand,
  DeleteKnowledgeBaseCommand: () => DeleteKnowledgeBaseCommand,
  DeleteKnowledgeBaseDocumentsCommand: () => DeleteKnowledgeBaseDocumentsCommand,
  DeletePromptCommand: () => DeletePromptCommand,
  DisassociateAgentCollaboratorCommand: () => DisassociateAgentCollaboratorCommand,
  DisassociateAgentKnowledgeBaseCommand: () => DisassociateAgentKnowledgeBaseCommand,
  DocumentContentFilterSensitiveLog: () => DocumentContentFilterSensitiveLog,
  DocumentMetadataFilterSensitiveLog: () => DocumentMetadataFilterSensitiveLog,
  DocumentStatus: () => DocumentStatus,
  DuplicateConditionExpressionFlowValidationDetailsFilterSensitiveLog: () => DuplicateConditionExpressionFlowValidationDetailsFilterSensitiveLog,
  EmbeddingDataType: () => EmbeddingDataType,
  EnrichmentStrategyMethod: () => EnrichmentStrategyMethod,
  FlowConditionFilterSensitiveLog: () => FlowConditionFilterSensitiveLog,
  FlowConnectionConfiguration: () => FlowConnectionConfiguration,
  FlowConnectionType: () => FlowConnectionType,
  FlowDefinitionFilterSensitiveLog: () => FlowDefinitionFilterSensitiveLog,
  FlowNodeConfiguration: () => FlowNodeConfiguration,
  FlowNodeConfigurationFilterSensitiveLog: () => FlowNodeConfigurationFilterSensitiveLog,
  FlowNodeFilterSensitiveLog: () => FlowNodeFilterSensitiveLog,
  FlowNodeIODataType: () => FlowNodeIODataType,
  FlowNodeInputCategory: () => FlowNodeInputCategory,
  FlowNodeInputFilterSensitiveLog: () => FlowNodeInputFilterSensitiveLog,
  FlowNodeType: () => FlowNodeType,
  FlowStatus: () => FlowStatus,
  FlowValidationDetails: () => FlowValidationDetails,
  FlowValidationDetailsFilterSensitiveLog: () => FlowValidationDetailsFilterSensitiveLog,
  FlowValidationFilterSensitiveLog: () => FlowValidationFilterSensitiveLog,
  FlowValidationSeverity: () => FlowValidationSeverity,
  FlowValidationType: () => FlowValidationType,
  FunctionSchema: () => FunctionSchema,
  GetAgentActionGroupCommand: () => GetAgentActionGroupCommand,
  GetAgentActionGroupResponseFilterSensitiveLog: () => GetAgentActionGroupResponseFilterSensitiveLog,
  GetAgentAliasCommand: () => GetAgentAliasCommand,
  GetAgentCollaboratorCommand: () => GetAgentCollaboratorCommand,
  GetAgentCollaboratorResponseFilterSensitiveLog: () => GetAgentCollaboratorResponseFilterSensitiveLog,
  GetAgentCommand: () => GetAgentCommand,
  GetAgentKnowledgeBaseCommand: () => GetAgentKnowledgeBaseCommand,
  GetAgentResponseFilterSensitiveLog: () => GetAgentResponseFilterSensitiveLog,
  GetAgentVersionCommand: () => GetAgentVersionCommand,
  GetAgentVersionResponseFilterSensitiveLog: () => GetAgentVersionResponseFilterSensitiveLog,
  GetDataSourceCommand: () => GetDataSourceCommand,
  GetDataSourceResponseFilterSensitiveLog: () => GetDataSourceResponseFilterSensitiveLog,
  GetFlowAliasCommand: () => GetFlowAliasCommand,
  GetFlowCommand: () => GetFlowCommand,
  GetFlowResponseFilterSensitiveLog: () => GetFlowResponseFilterSensitiveLog,
  GetFlowVersionCommand: () => GetFlowVersionCommand,
  GetFlowVersionResponseFilterSensitiveLog: () => GetFlowVersionResponseFilterSensitiveLog,
  GetIngestionJobCommand: () => GetIngestionJobCommand,
  GetKnowledgeBaseCommand: () => GetKnowledgeBaseCommand,
  GetKnowledgeBaseDocumentsCommand: () => GetKnowledgeBaseDocumentsCommand,
  GetKnowledgeBaseResponseFilterSensitiveLog: () => GetKnowledgeBaseResponseFilterSensitiveLog,
  GetPromptCommand: () => GetPromptCommand,
  GetPromptResponseFilterSensitiveLog: () => GetPromptResponseFilterSensitiveLog,
  IncludeExclude: () => IncludeExclude,
  IncompatibleLoopNodeType: () => IncompatibleLoopNodeType,
  IngestKnowledgeBaseDocumentsCommand: () => IngestKnowledgeBaseDocumentsCommand,
  IngestKnowledgeBaseDocumentsRequestFilterSensitiveLog: () => IngestKnowledgeBaseDocumentsRequestFilterSensitiveLog,
  IngestionJobFilterAttribute: () => IngestionJobFilterAttribute,
  IngestionJobFilterOperator: () => IngestionJobFilterOperator,
  IngestionJobSortByAttribute: () => IngestionJobSortByAttribute,
  IngestionJobStatus: () => IngestionJobStatus,
  InlineCodeFlowNodeConfigurationFilterSensitiveLog: () => InlineCodeFlowNodeConfigurationFilterSensitiveLog,
  InlineContentFilterSensitiveLog: () => InlineContentFilterSensitiveLog,
  InlineContentType: () => InlineContentType,
  InternalServerException: () => InternalServerException,
  KnowledgeBaseConfigurationFilterSensitiveLog: () => KnowledgeBaseConfigurationFilterSensitiveLog,
  KnowledgeBaseDocumentFilterSensitiveLog: () => KnowledgeBaseDocumentFilterSensitiveLog,
  KnowledgeBaseFilterSensitiveLog: () => KnowledgeBaseFilterSensitiveLog,
  KnowledgeBaseFlowNodeConfigurationFilterSensitiveLog: () => KnowledgeBaseFlowNodeConfigurationFilterSensitiveLog,
  KnowledgeBaseOrchestrationConfigurationFilterSensitiveLog: () => KnowledgeBaseOrchestrationConfigurationFilterSensitiveLog,
  KnowledgeBasePromptTemplateFilterSensitiveLog: () => KnowledgeBasePromptTemplateFilterSensitiveLog,
  KnowledgeBaseState: () => KnowledgeBaseState,
  KnowledgeBaseStatus: () => KnowledgeBaseStatus,
  KnowledgeBaseStorageType: () => KnowledgeBaseStorageType,
  KnowledgeBaseType: () => KnowledgeBaseType,
  ListAgentActionGroupsCommand: () => ListAgentActionGroupsCommand,
  ListAgentAliasesCommand: () => ListAgentAliasesCommand,
  ListAgentCollaboratorsCommand: () => ListAgentCollaboratorsCommand,
  ListAgentCollaboratorsResponseFilterSensitiveLog: () => ListAgentCollaboratorsResponseFilterSensitiveLog,
  ListAgentKnowledgeBasesCommand: () => ListAgentKnowledgeBasesCommand,
  ListAgentVersionsCommand: () => ListAgentVersionsCommand,
  ListAgentsCommand: () => ListAgentsCommand,
  ListDataSourcesCommand: () => ListDataSourcesCommand,
  ListFlowAliasesCommand: () => ListFlowAliasesCommand,
  ListFlowVersionsCommand: () => ListFlowVersionsCommand,
  ListFlowsCommand: () => ListFlowsCommand,
  ListIngestionJobsCommand: () => ListIngestionJobsCommand,
  ListKnowledgeBaseDocumentsCommand: () => ListKnowledgeBaseDocumentsCommand,
  ListKnowledgeBasesCommand: () => ListKnowledgeBasesCommand,
  ListPromptsCommand: () => ListPromptsCommand,
  ListTagsForResourceCommand: () => ListTagsForResourceCommand,
  LoopControllerFlowNodeConfigurationFilterSensitiveLog: () => LoopControllerFlowNodeConfigurationFilterSensitiveLog,
  LoopFlowNodeConfigurationFilterSensitiveLog: () => LoopFlowNodeConfigurationFilterSensitiveLog,
  MemoryType: () => MemoryType,
  MessageFilterSensitiveLog: () => MessageFilterSensitiveLog,
  MetadataAttributeFilterSensitiveLog: () => MetadataAttributeFilterSensitiveLog,
  MetadataAttributeValueFilterSensitiveLog: () => MetadataAttributeValueFilterSensitiveLog,
  MetadataConfigurationForRerankingFilterSensitiveLog: () => MetadataConfigurationForRerankingFilterSensitiveLog,
  MetadataSourceType: () => MetadataSourceType,
  MetadataValueType: () => MetadataValueType,
  NeptuneAnalyticsConfigurationFilterSensitiveLog: () => NeptuneAnalyticsConfigurationFilterSensitiveLog,
  OpenSearchManagedClusterConfigurationFilterSensitiveLog: () => OpenSearchManagedClusterConfigurationFilterSensitiveLog,
  OrchestrationExecutor: () => OrchestrationExecutor,
  OrchestrationType: () => OrchestrationType,
  ParsingModality: () => ParsingModality,
  ParsingStrategy: () => ParsingStrategy,
  PatternObjectFilterConfigurationFilterSensitiveLog: () => PatternObjectFilterConfigurationFilterSensitiveLog,
  PatternObjectFilterFilterSensitiveLog: () => PatternObjectFilterFilterSensitiveLog,
  PerformanceConfigLatency: () => PerformanceConfigLatency,
  PrepareAgentCommand: () => PrepareAgentCommand,
  PrepareFlowCommand: () => PrepareFlowCommand,
  PromptAgentResourceFilterSensitiveLog: () => PromptAgentResourceFilterSensitiveLog,
  PromptConfigurationFilterSensitiveLog: () => PromptConfigurationFilterSensitiveLog,
  PromptFlowNodeConfigurationFilterSensitiveLog: () => PromptFlowNodeConfigurationFilterSensitiveLog,
  PromptFlowNodeInlineConfigurationFilterSensitiveLog: () => PromptFlowNodeInlineConfigurationFilterSensitiveLog,
  PromptFlowNodeSourceConfiguration: () => PromptFlowNodeSourceConfiguration,
  PromptFlowNodeSourceConfigurationFilterSensitiveLog: () => PromptFlowNodeSourceConfigurationFilterSensitiveLog,
  PromptGenAiResource: () => PromptGenAiResource,
  PromptGenAiResourceFilterSensitiveLog: () => PromptGenAiResourceFilterSensitiveLog,
  PromptInferenceConfiguration: () => PromptInferenceConfiguration,
  PromptMetadataEntryFilterSensitiveLog: () => PromptMetadataEntryFilterSensitiveLog,
  PromptOverrideConfigurationFilterSensitiveLog: () => PromptOverrideConfigurationFilterSensitiveLog,
  PromptState: () => PromptState,
  PromptTemplateConfiguration: () => PromptTemplateConfiguration,
  PromptTemplateConfigurationFilterSensitiveLog: () => PromptTemplateConfigurationFilterSensitiveLog,
  PromptTemplateType: () => PromptTemplateType,
  PromptType: () => PromptType,
  PromptVariantFilterSensitiveLog: () => PromptVariantFilterSensitiveLog,
  QueryEngineType: () => QueryEngineType,
  QueryGenerationConfigurationFilterSensitiveLog: () => QueryGenerationConfigurationFilterSensitiveLog,
  QueryGenerationContextFilterSensitiveLog: () => QueryGenerationContextFilterSensitiveLog,
  RedshiftConfigurationFilterSensitiveLog: () => RedshiftConfigurationFilterSensitiveLog,
  RedshiftProvisionedAuthType: () => RedshiftProvisionedAuthType,
  RedshiftQueryEngineStorageType: () => RedshiftQueryEngineStorageType,
  RedshiftQueryEngineType: () => RedshiftQueryEngineType,
  RedshiftServerlessAuthType: () => RedshiftServerlessAuthType,
  RelayConversationHistory: () => RelayConversationHistory,
  RequireConfirmation: () => RequireConfirmation,
  RerankingMetadataSelectionMode: () => RerankingMetadataSelectionMode,
  RerankingMetadataSelectiveModeConfiguration: () => RerankingMetadataSelectiveModeConfiguration,
  RerankingMetadataSelectiveModeConfigurationFilterSensitiveLog: () => RerankingMetadataSelectiveModeConfigurationFilterSensitiveLog,
  ResourceNotFoundException: () => ResourceNotFoundException,
  RetrievalFlowNodeServiceConfiguration: () => RetrievalFlowNodeServiceConfiguration,
  S3DataSourceConfigurationFilterSensitiveLog: () => S3DataSourceConfigurationFilterSensitiveLog,
  S3VectorsConfigurationFilterSensitiveLog: () => S3VectorsConfigurationFilterSensitiveLog,
  SalesforceAuthType: () => SalesforceAuthType,
  SalesforceCrawlerConfigurationFilterSensitiveLog: () => SalesforceCrawlerConfigurationFilterSensitiveLog,
  SalesforceDataSourceConfigurationFilterSensitiveLog: () => SalesforceDataSourceConfigurationFilterSensitiveLog,
  ServiceQuotaExceededException: () => ServiceQuotaExceededException,
  SharePointAuthType: () => SharePointAuthType,
  SharePointCrawlerConfigurationFilterSensitiveLog: () => SharePointCrawlerConfigurationFilterSensitiveLog,
  SharePointDataSourceConfigurationFilterSensitiveLog: () => SharePointDataSourceConfigurationFilterSensitiveLog,
  SharePointHostType: () => SharePointHostType,
  SortOrder: () => SortOrder,
  SqlKnowledgeBaseConfigurationFilterSensitiveLog: () => SqlKnowledgeBaseConfigurationFilterSensitiveLog,
  StartIngestionJobCommand: () => StartIngestionJobCommand,
  StepType: () => StepType,
  StopIngestionJobCommand: () => StopIngestionJobCommand,
  StorageConfigurationFilterSensitiveLog: () => StorageConfigurationFilterSensitiveLog,
  StorageFlowNodeServiceConfiguration: () => StorageFlowNodeServiceConfiguration,
  SupplementalDataStorageLocationType: () => SupplementalDataStorageLocationType,
  SupportedLanguages: () => SupportedLanguages,
  SystemContentBlock: () => SystemContentBlock,
  SystemContentBlockFilterSensitiveLog: () => SystemContentBlockFilterSensitiveLog,
  TagResourceCommand: () => TagResourceCommand,
  TextContentDocFilterSensitiveLog: () => TextContentDocFilterSensitiveLog,
  TextPromptTemplateConfigurationFilterSensitiveLog: () => TextPromptTemplateConfigurationFilterSensitiveLog,
  ThrottlingException: () => ThrottlingException,
  Tool: () => Tool,
  ToolChoice: () => ToolChoice,
  ToolChoiceFilterSensitiveLog: () => ToolChoiceFilterSensitiveLog,
  ToolConfigurationFilterSensitiveLog: () => ToolConfigurationFilterSensitiveLog,
  ToolInputSchema: () => ToolInputSchema,
  Type: () => Type,
  UntagResourceCommand: () => UntagResourceCommand,
  UpdateAgentActionGroupCommand: () => UpdateAgentActionGroupCommand,
  UpdateAgentActionGroupRequestFilterSensitiveLog: () => UpdateAgentActionGroupRequestFilterSensitiveLog,
  UpdateAgentActionGroupResponseFilterSensitiveLog: () => UpdateAgentActionGroupResponseFilterSensitiveLog,
  UpdateAgentAliasCommand: () => UpdateAgentAliasCommand,
  UpdateAgentCollaboratorCommand: () => UpdateAgentCollaboratorCommand,
  UpdateAgentCollaboratorRequestFilterSensitiveLog: () => UpdateAgentCollaboratorRequestFilterSensitiveLog,
  UpdateAgentCollaboratorResponseFilterSensitiveLog: () => UpdateAgentCollaboratorResponseFilterSensitiveLog,
  UpdateAgentCommand: () => UpdateAgentCommand,
  UpdateAgentKnowledgeBaseCommand: () => UpdateAgentKnowledgeBaseCommand,
  UpdateAgentRequestFilterSensitiveLog: () => UpdateAgentRequestFilterSensitiveLog,
  UpdateAgentResponseFilterSensitiveLog: () => UpdateAgentResponseFilterSensitiveLog,
  UpdateDataSourceCommand: () => UpdateDataSourceCommand,
  UpdateDataSourceRequestFilterSensitiveLog: () => UpdateDataSourceRequestFilterSensitiveLog,
  UpdateDataSourceResponseFilterSensitiveLog: () => UpdateDataSourceResponseFilterSensitiveLog,
  UpdateFlowAliasCommand: () => UpdateFlowAliasCommand,
  UpdateFlowCommand: () => UpdateFlowCommand,
  UpdateFlowRequestFilterSensitiveLog: () => UpdateFlowRequestFilterSensitiveLog,
  UpdateFlowResponseFilterSensitiveLog: () => UpdateFlowResponseFilterSensitiveLog,
  UpdateKnowledgeBaseCommand: () => UpdateKnowledgeBaseCommand,
  UpdateKnowledgeBaseRequestFilterSensitiveLog: () => UpdateKnowledgeBaseRequestFilterSensitiveLog,
  UpdateKnowledgeBaseResponseFilterSensitiveLog: () => UpdateKnowledgeBaseResponseFilterSensitiveLog,
  UpdatePromptCommand: () => UpdatePromptCommand,
  UpdatePromptRequestFilterSensitiveLog: () => UpdatePromptRequestFilterSensitiveLog,
  UpdatePromptResponseFilterSensitiveLog: () => UpdatePromptResponseFilterSensitiveLog,
  ValidateFlowDefinitionCommand: () => ValidateFlowDefinitionCommand,
  ValidateFlowDefinitionRequestFilterSensitiveLog: () => ValidateFlowDefinitionRequestFilterSensitiveLog,
  ValidateFlowDefinitionResponseFilterSensitiveLog: () => ValidateFlowDefinitionResponseFilterSensitiveLog,
  ValidationException: () => ValidationException,
  VectorSearchBedrockRerankingConfigurationFilterSensitiveLog: () => VectorSearchBedrockRerankingConfigurationFilterSensitiveLog,
  VectorSearchRerankingConfigurationFilterSensitiveLog: () => VectorSearchRerankingConfigurationFilterSensitiveLog,
  VectorSearchRerankingConfigurationType: () => VectorSearchRerankingConfigurationType,
  WebCrawlerConfigurationFilterSensitiveLog: () => WebCrawlerConfigurationFilterSensitiveLog,
  WebDataSourceConfigurationFilterSensitiveLog: () => WebDataSourceConfigurationFilterSensitiveLog,
  WebScopeType: () => WebScopeType,
  __Client: () => import_smithy_client.Client,
  paginateListAgentActionGroups: () => paginateListAgentActionGroups,
  paginateListAgentAliases: () => paginateListAgentAliases,
  paginateListAgentCollaborators: () => paginateListAgentCollaborators,
  paginateListAgentKnowledgeBases: () => paginateListAgentKnowledgeBases,
  paginateListAgentVersions: () => paginateListAgentVersions,
  paginateListAgents: () => paginateListAgents,
  paginateListDataSources: () => paginateListDataSources,
  paginateListFlowAliases: () => paginateListFlowAliases,
  paginateListFlowVersions: () => paginateListFlowVersions,
  paginateListFlows: () => paginateListFlows,
  paginateListIngestionJobs: () => paginateListIngestionJobs,
  paginateListKnowledgeBaseDocuments: () => paginateListKnowledgeBaseDocuments,
  paginateListKnowledgeBases: () => paginateListKnowledgeBases,
  paginateListPrompts: () => paginateListPrompts
});
module.exports = __toCommonJS(index_exports);

// src/BedrockAgentClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return Object.assign(options, {
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "bedrock"
  });
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/BedrockAgentClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = Object.assign(
    (0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig),
    (0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig),
    (0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig),
    getHttpAuthExtensionConfiguration(runtimeConfig)
  );
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return Object.assign(
    runtimeConfig,
    (0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    (0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    (0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    resolveHttpAuthRuntimeConfig(extensionConfiguration)
  );
}, "resolveRuntimeExtensions");

// src/BedrockAgentClient.ts
var BedrockAgentClient = class extends import_smithy_client.Client {
  static {
    __name(this, "BedrockAgentClient");
  }
  /**
   * The resolved configuration of BedrockAgentClient class. This is resolved and normalized from the {@link BedrockAgentClientConfig | constructor configuration interface}.
   */
  config;
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    super(_config_0);
    this.initConfig = _config_0;
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_1);
    const _config_3 = (0, import_middleware_retry.resolveRetryConfig)(_config_2);
    const _config_4 = (0, import_config_resolver.resolveRegionConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, configuration?.extensions || []);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: import_httpAuthSchemeProvider.defaultBedrockAgentHttpAuthSchemeParametersProvider,
        identityProviderConfigProvider: /* @__PURE__ */ __name(async (config) => new import_core.DefaultIdentityProviderConfig({
          "aws.auth#sigv4": config.credentials
        }), "identityProviderConfigProvider")
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
};

// src/BedrockAgent.ts


// src/commands/AssociateAgentCollaboratorCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");


// src/models/models_0.ts


// src/models/BedrockAgentServiceException.ts

var BedrockAgentServiceException = class _BedrockAgentServiceException extends import_smithy_client.ServiceException {
  static {
    __name(this, "BedrockAgentServiceException");
  }
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _BedrockAgentServiceException.prototype);
  }
};

// src/models/models_0.ts
var AccessDeniedException = class _AccessDeniedException extends BedrockAgentServiceException {
  static {
    __name(this, "AccessDeniedException");
  }
  name = "AccessDeniedException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "AccessDeniedException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _AccessDeniedException.prototype);
  }
};
var CustomControlMethod = {
  RETURN_CONTROL: "RETURN_CONTROL"
};
var ActionGroupExecutor;
((ActionGroupExecutor3) => {
  ActionGroupExecutor3.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.lambda !== void 0) return visitor.lambda(value.lambda);
    if (value.customControl !== void 0) return visitor.customControl(value.customControl);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(ActionGroupExecutor || (ActionGroupExecutor = {}));
var ConflictException = class _ConflictException extends BedrockAgentServiceException {
  static {
    __name(this, "ConflictException");
  }
  name = "ConflictException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConflictException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ConflictException.prototype);
  }
};
var ActionGroupState = {
  DISABLED: "DISABLED",
  ENABLED: "ENABLED"
};
var APISchema;
((APISchema3) => {
  APISchema3.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.s3 !== void 0) return visitor.s3(value.s3);
    if (value.payload !== void 0) return visitor.payload(value.payload);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(APISchema || (APISchema = {}));
var Type = {
  ARRAY: "array",
  BOOLEAN: "boolean",
  INTEGER: "integer",
  NUMBER: "number",
  STRING: "string"
};
var RequireConfirmation = {
  DISABLED: "DISABLED",
  ENABLED: "ENABLED"
};
var FunctionSchema;
((FunctionSchema3) => {
  FunctionSchema3.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.functions !== void 0) return visitor.functions(value.functions);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(FunctionSchema || (FunctionSchema = {}));
var ActionGroupSignature = {
  AMAZON_CODEINTERPRETER: "AMAZON.CodeInterpreter",
  AMAZON_USERINPUT: "AMAZON.UserInput",
  ANTHROPIC_BASH: "ANTHROPIC.Bash",
  ANTHROPIC_COMPUTER: "ANTHROPIC.Computer",
  ANTHROPIC_TEXTEDITOR: "ANTHROPIC.TextEditor"
};
var InternalServerException = class _InternalServerException extends BedrockAgentServiceException {
  static {
    __name(this, "InternalServerException");
  }
  name = "InternalServerException";
  $fault = "server";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InternalServerException",
      $fault: "server",
      ...opts
    });
    Object.setPrototypeOf(this, _InternalServerException.prototype);
  }
};
var ResourceNotFoundException = class _ResourceNotFoundException extends BedrockAgentServiceException {
  static {
    __name(this, "ResourceNotFoundException");
  }
  name = "ResourceNotFoundException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceNotFoundException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);
  }
};
var ServiceQuotaExceededException = class _ServiceQuotaExceededException extends BedrockAgentServiceException {
  static {
    __name(this, "ServiceQuotaExceededException");
  }
  name = "ServiceQuotaExceededException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ServiceQuotaExceededException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ServiceQuotaExceededException.prototype);
  }
};
var ThrottlingException = class _ThrottlingException extends BedrockAgentServiceException {
  static {
    __name(this, "ThrottlingException");
  }
  name = "ThrottlingException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ThrottlingException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ThrottlingException.prototype);
  }
};
var ValidationException = class _ValidationException extends BedrockAgentServiceException {
  static {
    __name(this, "ValidationException");
  }
  name = "ValidationException";
  $fault = "client";
  /**
   * <p>A list of objects containing fields that caused validation errors and their corresponding validation error messages.</p>
   * @public
   */
  fieldList;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ValidationException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ValidationException.prototype);
    this.fieldList = opts.fieldList;
  }
};
var AgentCollaboration = {
  DISABLED: "DISABLED",
  SUPERVISOR: "SUPERVISOR",
  SUPERVISOR_ROUTER: "SUPERVISOR_ROUTER"
};
var AgentStatus = {
  CREATING: "CREATING",
  DELETING: "DELETING",
  FAILED: "FAILED",
  NOT_PREPARED: "NOT_PREPARED",
  PREPARED: "PREPARED",
  PREPARING: "PREPARING",
  UPDATING: "UPDATING",
  VERSIONING: "VERSIONING"
};
var OrchestrationExecutor;
((OrchestrationExecutor3) => {
  OrchestrationExecutor3.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.lambda !== void 0) return visitor.lambda(value.lambda);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(OrchestrationExecutor || (OrchestrationExecutor = {}));
var MemoryType = {
  SESSION_SUMMARY: "SESSION_SUMMARY"
};
var OrchestrationType = {
  CUSTOM_ORCHESTRATION: "CUSTOM_ORCHESTRATION",
  DEFAULT: "DEFAULT"
};
var CreationMode = {
  DEFAULT: "DEFAULT",
  OVERRIDDEN: "OVERRIDDEN"
};
var PromptState = {
  DISABLED: "DISABLED",
  ENABLED: "ENABLED"
};
var PromptType = {
  KNOWLEDGE_BASE_RESPONSE_GENERATION: "KNOWLEDGE_BASE_RESPONSE_GENERATION",
  MEMORY_SUMMARIZATION: "MEMORY_SUMMARIZATION",
  ORCHESTRATION: "ORCHESTRATION",
  POST_PROCESSING: "POST_PROCESSING",
  PRE_PROCESSING: "PRE_PROCESSING"
};
var AgentAliasStatus = {
  CREATING: "CREATING",
  DELETING: "DELETING",
  DISSOCIATED: "DISSOCIATED",
  FAILED: "FAILED",
  PREPARED: "PREPARED",
  UPDATING: "UPDATING"
};
var AliasInvocationState = {
  /**
   * Agent is actively processing requests
   */
  ACCEPT_INVOCATIONS: "ACCEPT_INVOCATIONS",
  /**
   * Agent is paused and will not accept new requests
   */
  REJECT_INVOCATIONS: "REJECT_INVOCATIONS"
};
var RelayConversationHistory = {
  DISABLED: "DISABLED",
  TO_COLLABORATOR: "TO_COLLABORATOR"
};
var KnowledgeBaseState = {
  DISABLED: "DISABLED",
  ENABLED: "ENABLED"
};
var DataDeletionPolicy = {
  DELETE: "DELETE",
  RETAIN: "RETAIN"
};
var CrawlFilterConfigurationType = {
  PATTERN: "PATTERN"
};
var ConfluenceAuthType = {
  BASIC: "BASIC",
  OAUTH2_CLIENT_CREDENTIALS: "OAUTH2_CLIENT_CREDENTIALS"
};
var ConfluenceHostType = {
  SAAS: "SAAS"
};
var SalesforceAuthType = {
  OAUTH2_CLIENT_CREDENTIALS: "OAUTH2_CLIENT_CREDENTIALS"
};
var SharePointAuthType = {
  OAUTH2_CLIENT_CREDENTIALS: "OAUTH2_CLIENT_CREDENTIALS",
  OAUTH2_SHAREPOINT_APP_ONLY_CLIENT_CREDENTIALS: "OAUTH2_SHAREPOINT_APP_ONLY_CLIENT_CREDENTIALS"
};
var SharePointHostType = {
  ONLINE: "ONLINE"
};
var DataSourceType = {
  CONFLUENCE: "CONFLUENCE",
  CUSTOM: "CUSTOM",
  REDSHIFT_METADATA: "REDSHIFT_METADATA",
  S3: "S3",
  SALESFORCE: "SALESFORCE",
  SHAREPOINT: "SHAREPOINT",
  WEB: "WEB"
};
var WebScopeType = {
  HOST_ONLY: "HOST_ONLY",
  SUBDOMAINS: "SUBDOMAINS"
};
var ChunkingStrategy = {
  FIXED_SIZE: "FIXED_SIZE",
  HIERARCHICAL: "HIERARCHICAL",
  NONE: "NONE",
  SEMANTIC: "SEMANTIC"
};
var EnrichmentStrategyMethod = {
  CHUNK_ENTITY_EXTRACTION: "CHUNK_ENTITY_EXTRACTION"
};
var ContextEnrichmentType = {
  BEDROCK_FOUNDATION_MODEL: "BEDROCK_FOUNDATION_MODEL"
};
var StepType = {
  POST_CHUNKING: "POST_CHUNKING"
};
var ParsingModality = {
  MULTIMODAL: "MULTIMODAL"
};
var ParsingStrategy = {
  BEDROCK_DATA_AUTOMATION: "BEDROCK_DATA_AUTOMATION",
  BEDROCK_FOUNDATION_MODEL: "BEDROCK_FOUNDATION_MODEL"
};
var DataSourceStatus = {
  AVAILABLE: "AVAILABLE",
  DELETE_UNSUCCESSFUL: "DELETE_UNSUCCESSFUL",
  DELETING: "DELETING"
};
var FlowConnectionConfiguration;
((FlowConnectionConfiguration3) => {
  FlowConnectionConfiguration3.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.data !== void 0) return visitor.data(value.data);
    if (value.conditional !== void 0) return visitor.conditional(value.conditional);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(FlowConnectionConfiguration || (FlowConnectionConfiguration = {}));
var FlowConnectionType = {
  CONDITIONAL: "Conditional",
  DATA: "Data"
};
var SupportedLanguages = {
  PYTHON_3: "Python_3"
};
var PromptInferenceConfiguration;
((PromptInferenceConfiguration3) => {
  PromptInferenceConfiguration3.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.text !== void 0) return visitor.text(value.text);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(PromptInferenceConfiguration || (PromptInferenceConfiguration = {}));
var PerformanceConfigLatency = {
  OPTIMIZED: "optimized",
  STANDARD: "standard"
};
var RerankingMetadataSelectionMode = {
  ALL: "ALL",
  SELECTIVE: "SELECTIVE"
};
var RerankingMetadataSelectiveModeConfiguration;
((RerankingMetadataSelectiveModeConfiguration3) => {
  RerankingMetadataSelectiveModeConfiguration3.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.fieldsToInclude !== void 0) return visitor.fieldsToInclude(value.fieldsToInclude);
    if (value.fieldsToExclude !== void 0) return visitor.fieldsToExclude(value.fieldsToExclude);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(RerankingMetadataSelectiveModeConfiguration || (RerankingMetadataSelectiveModeConfiguration = {}));
var VectorSearchRerankingConfigurationType = {
  BEDROCK_RERANKING_MODEL: "BEDROCK_RERANKING_MODEL"
};
var CachePointType = {
  DEFAULT: "default"
};
var ContentBlock;
((ContentBlock3) => {
  ContentBlock3.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.text !== void 0) return visitor.text(value.text);
    if (value.cachePoint !== void 0) return visitor.cachePoint(value.cachePoint);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(ContentBlock || (ContentBlock = {}));
var ConversationRole = {
  ASSISTANT: "assistant",
  USER: "user"
};
var SystemContentBlock;
((SystemContentBlock3) => {
  SystemContentBlock3.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.text !== void 0) return visitor.text(value.text);
    if (value.cachePoint !== void 0) return visitor.cachePoint(value.cachePoint);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(SystemContentBlock || (SystemContentBlock = {}));
var ToolChoice;
((ToolChoice3) => {
  ToolChoice3.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.auto !== void 0) return visitor.auto(value.auto);
    if (value.any !== void 0) return visitor.any(value.any);
    if (value.tool !== void 0) return visitor.tool(value.tool);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(ToolChoice || (ToolChoice = {}));
var ToolInputSchema;
((ToolInputSchema2) => {
  ToolInputSchema2.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.json !== void 0) return visitor.json(value.json);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(ToolInputSchema || (ToolInputSchema = {}));
var Tool;
((Tool2) => {
  Tool2.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.toolSpec !== void 0) return visitor.toolSpec(value.toolSpec);
    if (value.cachePoint !== void 0) return visitor.cachePoint(value.cachePoint);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(Tool || (Tool = {}));
var PromptTemplateConfiguration;
((PromptTemplateConfiguration3) => {
  PromptTemplateConfiguration3.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.text !== void 0) return visitor.text(value.text);
    if (value.chat !== void 0) return visitor.chat(value.chat);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(PromptTemplateConfiguration || (PromptTemplateConfiguration = {}));
var PromptTemplateType = {
  CHAT: "CHAT",
  TEXT: "TEXT"
};
var PromptFlowNodeSourceConfiguration;
((PromptFlowNodeSourceConfiguration2) => {
  PromptFlowNodeSourceConfiguration2.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.resource !== void 0) return visitor.resource(value.resource);
    if (value.inline !== void 0) return visitor.inline(value.inline);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(PromptFlowNodeSourceConfiguration || (PromptFlowNodeSourceConfiguration = {}));
var RetrievalFlowNodeServiceConfiguration;
((RetrievalFlowNodeServiceConfiguration3) => {
  RetrievalFlowNodeServiceConfiguration3.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.s3 !== void 0) return visitor.s3(value.s3);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(RetrievalFlowNodeServiceConfiguration || (RetrievalFlowNodeServiceConfiguration = {}));
var StorageFlowNodeServiceConfiguration;
((StorageFlowNodeServiceConfiguration3) => {
  StorageFlowNodeServiceConfiguration3.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.s3 !== void 0) return visitor.s3(value.s3);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(StorageFlowNodeServiceConfiguration || (StorageFlowNodeServiceConfiguration = {}));
var FlowNodeInputCategory = {
  EXIT_LOOP: "ExitLoop",
  LOOP_CONDITION: "LoopCondition",
  RETURN_VALUE_TO_LOOP_START: "ReturnValueToLoopStart"
};
var FlowNodeIODataType = {
  ARRAY: "Array",
  BOOLEAN: "Boolean",
  NUMBER: "Number",
  OBJECT: "Object",
  STRING: "String"
};
var FlowNodeType = {
  AGENT: "Agent",
  COLLECTOR: "Collector",
  CONDITION: "Condition",
  INLINE_CODE: "InlineCode",
  INPUT: "Input",
  ITERATOR: "Iterator",
  KNOWLEDGE_BASE: "KnowledgeBase",
  LAMBDA_FUNCTION: "LambdaFunction",
  LEX: "Lex",
  LOOP: "Loop",
  LOOP_CONTROLLER: "LoopController",
  LOOP_INPUT: "LoopInput",
  OUTPUT: "Output",
  PROMPT: "Prompt",
  RETRIEVAL: "Retrieval",
  STORAGE: "Storage"
};
var FlowStatus = {
  FAILED: "Failed",
  NOT_PREPARED: "NotPrepared",
  PREPARED: "Prepared",
  PREPARING: "Preparing"
};
var ConcurrencyType = {
  AUTOMATIC: "Automatic",
  MANUAL: "Manual"
};
var IncompatibleLoopNodeType = {
  COLLECTOR: "Collector",
  CONDITION: "Condition",
  INPUT: "Input",
  ITERATOR: "Iterator"
};
var FlowValidationDetails;
((FlowValidationDetails2) => {
  FlowValidationDetails2.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.cyclicConnection !== void 0) return visitor.cyclicConnection(value.cyclicConnection);
    if (value.duplicateConnections !== void 0) return visitor.duplicateConnections(value.duplicateConnections);
    if (value.duplicateConditionExpression !== void 0)
      return visitor.duplicateConditionExpression(value.duplicateConditionExpression);
    if (value.unreachableNode !== void 0) return visitor.unreachableNode(value.unreachableNode);
    if (value.unknownConnectionSource !== void 0)
      return visitor.unknownConnectionSource(value.unknownConnectionSource);
    if (value.unknownConnectionSourceOutput !== void 0)
      return visitor.unknownConnectionSourceOutput(value.unknownConnectionSourceOutput);
    if (value.unknownConnectionTarget !== void 0)
      return visitor.unknownConnectionTarget(value.unknownConnectionTarget);
    if (value.unknownConnectionTargetInput !== void 0)
      return visitor.unknownConnectionTargetInput(value.unknownConnectionTargetInput);
    if (value.unknownConnectionCondition !== void 0)
      return visitor.unknownConnectionCondition(value.unknownConnectionCondition);
    if (value.malformedConditionExpression !== void 0)
      return visitor.malformedConditionExpression(value.malformedConditionExpression);
    if (value.malformedNodeInputExpression !== void 0)
      return visitor.malformedNodeInputExpression(value.malformedNodeInputExpression);
    if (value.mismatchedNodeInputType !== void 0)
      return visitor.mismatchedNodeInputType(value.mismatchedNodeInputType);
    if (value.mismatchedNodeOutputType !== void 0)
      return visitor.mismatchedNodeOutputType(value.mismatchedNodeOutputType);
    if (value.incompatibleConnectionDataType !== void 0)
      return visitor.incompatibleConnectionDataType(value.incompatibleConnectionDataType);
    if (value.missingConnectionConfiguration !== void 0)
      return visitor.missingConnectionConfiguration(value.missingConnectionConfiguration);
    if (value.missingDefaultCondition !== void 0)
      return visitor.missingDefaultCondition(value.missingDefaultCondition);
    if (value.missingEndingNodes !== void 0) return visitor.missingEndingNodes(value.missingEndingNodes);
    if (value.missingNodeConfiguration !== void 0)
      return visitor.missingNodeConfiguration(value.missingNodeConfiguration);
    if (value.missingNodeInput !== void 0) return visitor.missingNodeInput(value.missingNodeInput);
    if (value.missingNodeOutput !== void 0) return visitor.missingNodeOutput(value.missingNodeOutput);
    if (value.missingStartingNodes !== void 0) return visitor.missingStartingNodes(value.missingStartingNodes);
    if (value.multipleNodeInputConnections !== void 0)
      return visitor.multipleNodeInputConnections(value.multipleNodeInputConnections);
    if (value.unfulfilledNodeInput !== void 0) return visitor.unfulfilledNodeInput(value.unfulfilledNodeInput);
    if (value.unsatisfiedConnectionConditions !== void 0)
      return visitor.unsatisfiedConnectionConditions(value.unsatisfiedConnectionConditions);
    if (value.unspecified !== void 0) return visitor.unspecified(value.unspecified);
    if (value.unknownNodeInput !== void 0) return visitor.unknownNodeInput(value.unknownNodeInput);
    if (value.unknownNodeOutput !== void 0) return visitor.unknownNodeOutput(value.unknownNodeOutput);
    if (value.missingLoopInputNode !== void 0) return visitor.missingLoopInputNode(value.missingLoopInputNode);
    if (value.missingLoopControllerNode !== void 0)
      return visitor.missingLoopControllerNode(value.missingLoopControllerNode);
    if (value.multipleLoopInputNodes !== void 0) return visitor.multipleLoopInputNodes(value.multipleLoopInputNodes);
    if (value.multipleLoopControllerNodes !== void 0)
      return visitor.multipleLoopControllerNodes(value.multipleLoopControllerNodes);
    if (value.loopIncompatibleNodeType !== void 0)
      return visitor.loopIncompatibleNodeType(value.loopIncompatibleNodeType);
    if (value.invalidLoopBoundary !== void 0) return visitor.invalidLoopBoundary(value.invalidLoopBoundary);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(FlowValidationDetails || (FlowValidationDetails = {}));
var FlowValidationSeverity = {
  ERROR: "Error",
  WARNING: "Warning"
};
var FlowValidationType = {
  CYCLIC_CONNECTION: "CyclicConnection",
  DUPLICATE_CONDITION_EXPRESSION: "DuplicateConditionExpression",
  DUPLICATE_CONNECTIONS: "DuplicateConnections",
  INCOMPATIBLE_CONNECTION_DATA_TYPE: "IncompatibleConnectionDataType",
  INVALID_LOOP_BOUNDARY: "InvalidLoopBoundary",
  LOOP_INCOMPATIBLE_NODE_TYPE: "LoopIncompatibleNodeType",
  MALFORMED_CONDITION_EXPRESSION: "MalformedConditionExpression",
  MALFORMED_NODE_INPUT_EXPRESSION: "MalformedNodeInputExpression",
  MISMATCHED_NODE_INPUT_TYPE: "MismatchedNodeInputType",
  MISMATCHED_NODE_OUTPUT_TYPE: "MismatchedNodeOutputType",
  MISSING_CONNECTION_CONFIGURATION: "MissingConnectionConfiguration",
  MISSING_DEFAULT_CONDITION: "MissingDefaultCondition",
  MISSING_ENDING_NODES: "MissingEndingNodes",
  MISSING_LOOP_CONTROLLER_NODE: "MissingLoopControllerNode",
  MISSING_LOOP_INPUT_NODE: "MissingLoopInputNode",
  MISSING_NODE_CONFIGURATION: "MissingNodeConfiguration",
  MISSING_NODE_INPUT: "MissingNodeInput",
  MISSING_NODE_OUTPUT: "MissingNodeOutput",
  MISSING_STARTING_NODES: "MissingStartingNodes",
  MULTIPLE_LOOP_CONTROLLER_NODES: "MultipleLoopControllerNodes",
  MULTIPLE_LOOP_INPUT_NODES: "MultipleLoopInputNodes",
  MULTIPLE_NODE_INPUT_CONNECTIONS: "MultipleNodeInputConnections",
  UNFULFILLED_NODE_INPUT: "UnfulfilledNodeInput",
  UNKNOWN_CONNECTION_CONDITION: "UnknownConnectionCondition",
  UNKNOWN_CONNECTION_SOURCE: "UnknownConnectionSource",
  UNKNOWN_CONNECTION_SOURCE_OUTPUT: "UnknownConnectionSourceOutput",
  UNKNOWN_CONNECTION_TARGET: "UnknownConnectionTarget",
  UNKNOWN_CONNECTION_TARGET_INPUT: "UnknownConnectionTargetInput",
  UNKNOWN_NODE_INPUT: "UnknownNodeInput",
  UNKNOWN_NODE_OUTPUT: "UnknownNodeOutput",
  UNREACHABLE_NODE: "UnreachableNode",
  UNSATISFIED_CONNECTION_CONDITIONS: "UnsatisfiedConnectionConditions",
  UNSPECIFIED: "Unspecified"
};
var APISchemaFilterSensitiveLog = /* @__PURE__ */ __name((obj) => {
  if (obj.s3 !== void 0) return { s3: obj.s3 };
  if (obj.payload !== void 0) return { payload: import_smithy_client.SENSITIVE_STRING };
  if (obj.$unknown !== void 0) return { [obj.$unknown[0]]: "UNKNOWN" };
}, "APISchemaFilterSensitiveLog");
var CreateAgentActionGroupRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.actionGroupExecutor && { actionGroupExecutor: obj.actionGroupExecutor },
  ...obj.apiSchema && { apiSchema: APISchemaFilterSensitiveLog(obj.apiSchema) },
  ...obj.functionSchema && { functionSchema: obj.functionSchema }
}), "CreateAgentActionGroupRequestFilterSensitiveLog");
var AgentActionGroupFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.actionGroupExecutor && { actionGroupExecutor: obj.actionGroupExecutor },
  ...obj.apiSchema && { apiSchema: APISchemaFilterSensitiveLog(obj.apiSchema) },
  ...obj.functionSchema && { functionSchema: obj.functionSchema }
}), "AgentActionGroupFilterSensitiveLog");
var CreateAgentActionGroupResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.agentActionGroup && { agentActionGroup: AgentActionGroupFilterSensitiveLog(obj.agentActionGroup) }
}), "CreateAgentActionGroupResponseFilterSensitiveLog");
var GetAgentActionGroupResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.agentActionGroup && { agentActionGroup: AgentActionGroupFilterSensitiveLog(obj.agentActionGroup) }
}), "GetAgentActionGroupResponseFilterSensitiveLog");
var UpdateAgentActionGroupRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.actionGroupExecutor && { actionGroupExecutor: obj.actionGroupExecutor },
  ...obj.apiSchema && { apiSchema: APISchemaFilterSensitiveLog(obj.apiSchema) },
  ...obj.functionSchema && { functionSchema: obj.functionSchema }
}), "UpdateAgentActionGroupRequestFilterSensitiveLog");
var UpdateAgentActionGroupResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.agentActionGroup && { agentActionGroup: AgentActionGroupFilterSensitiveLog(obj.agentActionGroup) }
}), "UpdateAgentActionGroupResponseFilterSensitiveLog");
var PromptConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.basePromptTemplate && { basePromptTemplate: import_smithy_client.SENSITIVE_STRING }
}), "PromptConfigurationFilterSensitiveLog");
var PromptOverrideConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.promptConfigurations && {
    promptConfigurations: obj.promptConfigurations.map((item) => PromptConfigurationFilterSensitiveLog(item))
  }
}), "PromptOverrideConfigurationFilterSensitiveLog");
var AgentFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.instruction && { instruction: import_smithy_client.SENSITIVE_STRING },
  ...obj.customOrchestration && { customOrchestration: obj.customOrchestration },
  ...obj.promptOverrideConfiguration && { promptOverrideConfiguration: import_smithy_client.SENSITIVE_STRING }
}), "AgentFilterSensitiveLog");
var AgentCollaboratorFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.collaborationInstruction && { collaborationInstruction: import_smithy_client.SENSITIVE_STRING }
}), "AgentCollaboratorFilterSensitiveLog");
var AssociateAgentCollaboratorRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.collaborationInstruction && { collaborationInstruction: import_smithy_client.SENSITIVE_STRING }
}), "AssociateAgentCollaboratorRequestFilterSensitiveLog");
var AssociateAgentCollaboratorResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.agentCollaborator && { agentCollaborator: AgentCollaboratorFilterSensitiveLog(obj.agentCollaborator) }
}), "AssociateAgentCollaboratorResponseFilterSensitiveLog");
var GetAgentCollaboratorResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.agentCollaborator && { agentCollaborator: AgentCollaboratorFilterSensitiveLog(obj.agentCollaborator) }
}), "GetAgentCollaboratorResponseFilterSensitiveLog");
var AgentCollaboratorSummaryFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.collaborationInstruction && { collaborationInstruction: import_smithy_client.SENSITIVE_STRING }
}), "AgentCollaboratorSummaryFilterSensitiveLog");
var ListAgentCollaboratorsResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.agentCollaboratorSummaries && {
    agentCollaboratorSummaries: obj.agentCollaboratorSummaries.map(
      (item) => AgentCollaboratorSummaryFilterSensitiveLog(item)
    )
  }
}), "ListAgentCollaboratorsResponseFilterSensitiveLog");
var UpdateAgentCollaboratorRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.collaborationInstruction && { collaborationInstruction: import_smithy_client.SENSITIVE_STRING }
}), "UpdateAgentCollaboratorRequestFilterSensitiveLog");
var UpdateAgentCollaboratorResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.agentCollaborator && { agentCollaborator: AgentCollaboratorFilterSensitiveLog(obj.agentCollaborator) }
}), "UpdateAgentCollaboratorResponseFilterSensitiveLog");
var CreateAgentRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.instruction && { instruction: import_smithy_client.SENSITIVE_STRING },
  ...obj.customOrchestration && { customOrchestration: obj.customOrchestration },
  ...obj.promptOverrideConfiguration && { promptOverrideConfiguration: import_smithy_client.SENSITIVE_STRING }
}), "CreateAgentRequestFilterSensitiveLog");
var CreateAgentResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.agent && { agent: AgentFilterSensitiveLog(obj.agent) }
}), "CreateAgentResponseFilterSensitiveLog");
var GetAgentResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.agent && { agent: AgentFilterSensitiveLog(obj.agent) }
}), "GetAgentResponseFilterSensitiveLog");
var UpdateAgentRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.instruction && { instruction: import_smithy_client.SENSITIVE_STRING },
  ...obj.customOrchestration && { customOrchestration: obj.customOrchestration },
  ...obj.promptOverrideConfiguration && { promptOverrideConfiguration: import_smithy_client.SENSITIVE_STRING }
}), "UpdateAgentRequestFilterSensitiveLog");
var UpdateAgentResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.agent && { agent: AgentFilterSensitiveLog(obj.agent) }
}), "UpdateAgentResponseFilterSensitiveLog");
var AgentVersionFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.instruction && { instruction: import_smithy_client.SENSITIVE_STRING },
  ...obj.promptOverrideConfiguration && { promptOverrideConfiguration: import_smithy_client.SENSITIVE_STRING }
}), "AgentVersionFilterSensitiveLog");
var PatternObjectFilterFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.objectType && { objectType: import_smithy_client.SENSITIVE_STRING },
  ...obj.inclusionFilters && { inclusionFilters: import_smithy_client.SENSITIVE_STRING },
  ...obj.exclusionFilters && { exclusionFilters: import_smithy_client.SENSITIVE_STRING }
}), "PatternObjectFilterFilterSensitiveLog");
var PatternObjectFilterConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.filters && { filters: import_smithy_client.SENSITIVE_STRING }
}), "PatternObjectFilterConfigurationFilterSensitiveLog");
var CrawlFilterConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.patternObjectFilter && {
    patternObjectFilter: PatternObjectFilterConfigurationFilterSensitiveLog(obj.patternObjectFilter)
  }
}), "CrawlFilterConfigurationFilterSensitiveLog");
var ConfluenceCrawlerConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.filterConfiguration && {
    filterConfiguration: CrawlFilterConfigurationFilterSensitiveLog(obj.filterConfiguration)
  }
}), "ConfluenceCrawlerConfigurationFilterSensitiveLog");
var ConfluenceDataSourceConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.crawlerConfiguration && {
    crawlerConfiguration: ConfluenceCrawlerConfigurationFilterSensitiveLog(obj.crawlerConfiguration)
  }
}), "ConfluenceDataSourceConfigurationFilterSensitiveLog");
var S3DataSourceConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.inclusionPrefixes && { inclusionPrefixes: import_smithy_client.SENSITIVE_STRING }
}), "S3DataSourceConfigurationFilterSensitiveLog");
var SalesforceCrawlerConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.filterConfiguration && {
    filterConfiguration: CrawlFilterConfigurationFilterSensitiveLog(obj.filterConfiguration)
  }
}), "SalesforceCrawlerConfigurationFilterSensitiveLog");
var SalesforceDataSourceConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.crawlerConfiguration && {
    crawlerConfiguration: SalesforceCrawlerConfigurationFilterSensitiveLog(obj.crawlerConfiguration)
  }
}), "SalesforceDataSourceConfigurationFilterSensitiveLog");
var SharePointCrawlerConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.filterConfiguration && {
    filterConfiguration: CrawlFilterConfigurationFilterSensitiveLog(obj.filterConfiguration)
  }
}), "SharePointCrawlerConfigurationFilterSensitiveLog");
var SharePointDataSourceConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.crawlerConfiguration && {
    crawlerConfiguration: SharePointCrawlerConfigurationFilterSensitiveLog(obj.crawlerConfiguration)
  }
}), "SharePointDataSourceConfigurationFilterSensitiveLog");
var WebCrawlerConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.inclusionFilters && { inclusionFilters: import_smithy_client.SENSITIVE_STRING },
  ...obj.exclusionFilters && { exclusionFilters: import_smithy_client.SENSITIVE_STRING },
  ...obj.userAgent && { userAgent: import_smithy_client.SENSITIVE_STRING },
  ...obj.userAgentHeader && { userAgentHeader: import_smithy_client.SENSITIVE_STRING }
}), "WebCrawlerConfigurationFilterSensitiveLog");
var WebDataSourceConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.crawlerConfiguration && {
    crawlerConfiguration: WebCrawlerConfigurationFilterSensitiveLog(obj.crawlerConfiguration)
  }
}), "WebDataSourceConfigurationFilterSensitiveLog");
var DataSourceConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.s3Configuration && { s3Configuration: S3DataSourceConfigurationFilterSensitiveLog(obj.s3Configuration) },
  ...obj.webConfiguration && { webConfiguration: WebDataSourceConfigurationFilterSensitiveLog(obj.webConfiguration) },
  ...obj.confluenceConfiguration && {
    confluenceConfiguration: ConfluenceDataSourceConfigurationFilterSensitiveLog(obj.confluenceConfiguration)
  },
  ...obj.salesforceConfiguration && {
    salesforceConfiguration: SalesforceDataSourceConfigurationFilterSensitiveLog(obj.salesforceConfiguration)
  },
  ...obj.sharePointConfiguration && {
    sharePointConfiguration: SharePointDataSourceConfigurationFilterSensitiveLog(obj.sharePointConfiguration)
  }
}), "DataSourceConfigurationFilterSensitiveLog");
var CreateDataSourceRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.dataSourceConfiguration && {
    dataSourceConfiguration: DataSourceConfigurationFilterSensitiveLog(obj.dataSourceConfiguration)
  }
}), "CreateDataSourceRequestFilterSensitiveLog");
var DataSourceFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.dataSourceConfiguration && {
    dataSourceConfiguration: DataSourceConfigurationFilterSensitiveLog(obj.dataSourceConfiguration)
  }
}), "DataSourceFilterSensitiveLog");
var CreateDataSourceResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.dataSource && { dataSource: DataSourceFilterSensitiveLog(obj.dataSource) }
}), "CreateDataSourceResponseFilterSensitiveLog");
var GetDataSourceResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.dataSource && { dataSource: DataSourceFilterSensitiveLog(obj.dataSource) }
}), "GetDataSourceResponseFilterSensitiveLog");
var UpdateDataSourceRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.dataSourceConfiguration && {
    dataSourceConfiguration: DataSourceConfigurationFilterSensitiveLog(obj.dataSourceConfiguration)
  }
}), "UpdateDataSourceRequestFilterSensitiveLog");
var UpdateDataSourceResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.dataSource && { dataSource: DataSourceFilterSensitiveLog(obj.dataSource) }
}), "UpdateDataSourceResponseFilterSensitiveLog");
var FlowConditionFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.expression && { expression: import_smithy_client.SENSITIVE_STRING }
}), "FlowConditionFilterSensitiveLog");
var ConditionFlowNodeConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.conditions && { conditions: obj.conditions.map((item) => FlowConditionFilterSensitiveLog(item)) }
}), "ConditionFlowNodeConfigurationFilterSensitiveLog");
var InlineCodeFlowNodeConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.code && { code: import_smithy_client.SENSITIVE_STRING }
}), "InlineCodeFlowNodeConfigurationFilterSensitiveLog");
var KnowledgeBasePromptTemplateFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.textPromptTemplate && { textPromptTemplate: import_smithy_client.SENSITIVE_STRING }
}), "KnowledgeBasePromptTemplateFilterSensitiveLog");
var KnowledgeBaseOrchestrationConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.promptTemplate && { promptTemplate: KnowledgeBasePromptTemplateFilterSensitiveLog(obj.promptTemplate) },
  ...obj.inferenceConfig && { inferenceConfig: obj.inferenceConfig }
}), "KnowledgeBaseOrchestrationConfigurationFilterSensitiveLog");
var RerankingMetadataSelectiveModeConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => {
  if (obj.fieldsToInclude !== void 0) return { fieldsToInclude: import_smithy_client.SENSITIVE_STRING };
  if (obj.fieldsToExclude !== void 0) return { fieldsToExclude: import_smithy_client.SENSITIVE_STRING };
  if (obj.$unknown !== void 0) return { [obj.$unknown[0]]: "UNKNOWN" };
}, "RerankingMetadataSelectiveModeConfigurationFilterSensitiveLog");
var MetadataConfigurationForRerankingFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.selectiveModeConfiguration && {
    selectiveModeConfiguration: RerankingMetadataSelectiveModeConfigurationFilterSensitiveLog(
      obj.selectiveModeConfiguration
    )
  }
}), "MetadataConfigurationForRerankingFilterSensitiveLog");
var VectorSearchBedrockRerankingConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.metadataConfiguration && {
    metadataConfiguration: MetadataConfigurationForRerankingFilterSensitiveLog(obj.metadataConfiguration)
  }
}), "VectorSearchBedrockRerankingConfigurationFilterSensitiveLog");
var VectorSearchRerankingConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.bedrockRerankingConfiguration && {
    bedrockRerankingConfiguration: VectorSearchBedrockRerankingConfigurationFilterSensitiveLog(
      obj.bedrockRerankingConfiguration
    )
  }
}), "VectorSearchRerankingConfigurationFilterSensitiveLog");
var KnowledgeBaseFlowNodeConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.promptTemplate && { promptTemplate: KnowledgeBasePromptTemplateFilterSensitiveLog(obj.promptTemplate) },
  ...obj.inferenceConfiguration && { inferenceConfiguration: obj.inferenceConfiguration },
  ...obj.rerankingConfiguration && {
    rerankingConfiguration: VectorSearchRerankingConfigurationFilterSensitiveLog(obj.rerankingConfiguration)
  },
  ...obj.orchestrationConfiguration && {
    orchestrationConfiguration: KnowledgeBaseOrchestrationConfigurationFilterSensitiveLog(
      obj.orchestrationConfiguration
    )
  }
}), "KnowledgeBaseFlowNodeConfigurationFilterSensitiveLog");
var LoopControllerFlowNodeConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.continueCondition && { continueCondition: FlowConditionFilterSensitiveLog(obj.continueCondition) }
}), "LoopControllerFlowNodeConfigurationFilterSensitiveLog");
var ContentBlockFilterSensitiveLog = /* @__PURE__ */ __name((obj) => {
  if (obj.text !== void 0) return { text: obj.text };
  if (obj.cachePoint !== void 0) return { cachePoint: obj.cachePoint };
  if (obj.$unknown !== void 0) return { [obj.$unknown[0]]: "UNKNOWN" };
}, "ContentBlockFilterSensitiveLog");
var MessageFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.content && { content: import_smithy_client.SENSITIVE_STRING }
}), "MessageFilterSensitiveLog");
var SystemContentBlockFilterSensitiveLog = /* @__PURE__ */ __name((obj) => {
  if (obj.text !== void 0) return { text: obj.text };
  if (obj.cachePoint !== void 0) return { cachePoint: obj.cachePoint };
  if (obj.$unknown !== void 0) return { [obj.$unknown[0]]: "UNKNOWN" };
}, "SystemContentBlockFilterSensitiveLog");
var ToolChoiceFilterSensitiveLog = /* @__PURE__ */ __name((obj) => {
  if (obj.auto !== void 0) return { auto: obj.auto };
  if (obj.any !== void 0) return { any: obj.any };
  if (obj.tool !== void 0) return { tool: obj.tool };
  if (obj.$unknown !== void 0) return { [obj.$unknown[0]]: "UNKNOWN" };
}, "ToolChoiceFilterSensitiveLog");
var ToolConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.tools && { tools: import_smithy_client.SENSITIVE_STRING },
  ...obj.toolChoice && { toolChoice: import_smithy_client.SENSITIVE_STRING }
}), "ToolConfigurationFilterSensitiveLog");
var ChatPromptTemplateConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.messages && { messages: obj.messages.map((item) => MessageFilterSensitiveLog(item)) },
  ...obj.system && { system: import_smithy_client.SENSITIVE_STRING },
  ...obj.inputVariables && { inputVariables: import_smithy_client.SENSITIVE_STRING },
  ...obj.toolConfiguration && { toolConfiguration: ToolConfigurationFilterSensitiveLog(obj.toolConfiguration) }
}), "ChatPromptTemplateConfigurationFilterSensitiveLog");
var TextPromptTemplateConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.text && { text: import_smithy_client.SENSITIVE_STRING },
  ...obj.inputVariables && { inputVariables: import_smithy_client.SENSITIVE_STRING }
}), "TextPromptTemplateConfigurationFilterSensitiveLog");
var PromptTemplateConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => {
  if (obj.text !== void 0) return { text: import_smithy_client.SENSITIVE_STRING };
  if (obj.chat !== void 0) return { chat: import_smithy_client.SENSITIVE_STRING };
  if (obj.$unknown !== void 0) return { [obj.$unknown[0]]: "UNKNOWN" };
}, "PromptTemplateConfigurationFilterSensitiveLog");
var PromptFlowNodeInlineConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.templateConfiguration && {
    templateConfiguration: PromptTemplateConfigurationFilterSensitiveLog(obj.templateConfiguration)
  },
  ...obj.inferenceConfiguration && { inferenceConfiguration: obj.inferenceConfiguration }
}), "PromptFlowNodeInlineConfigurationFilterSensitiveLog");
var PromptFlowNodeSourceConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => {
  if (obj.resource !== void 0) return { resource: obj.resource };
  if (obj.inline !== void 0) return { inline: PromptFlowNodeInlineConfigurationFilterSensitiveLog(obj.inline) };
  if (obj.$unknown !== void 0) return { [obj.$unknown[0]]: "UNKNOWN" };
}, "PromptFlowNodeSourceConfigurationFilterSensitiveLog");
var PromptFlowNodeConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.sourceConfiguration && {
    sourceConfiguration: PromptFlowNodeSourceConfigurationFilterSensitiveLog(obj.sourceConfiguration)
  }
}), "PromptFlowNodeConfigurationFilterSensitiveLog");
var FlowNodeInputFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.expression && { expression: import_smithy_client.SENSITIVE_STRING }
}), "FlowNodeInputFilterSensitiveLog");
var DuplicateConditionExpressionFlowValidationDetailsFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.expression && { expression: import_smithy_client.SENSITIVE_STRING }
}), "DuplicateConditionExpressionFlowValidationDetailsFilterSensitiveLog");
var FlowValidationDetailsFilterSensitiveLog = /* @__PURE__ */ __name((obj) => {
  if (obj.cyclicConnection !== void 0) return { cyclicConnection: obj.cyclicConnection };
  if (obj.duplicateConnections !== void 0) return { duplicateConnections: obj.duplicateConnections };
  if (obj.duplicateConditionExpression !== void 0)
    return {
      duplicateConditionExpression: DuplicateConditionExpressionFlowValidationDetailsFilterSensitiveLog(
        obj.duplicateConditionExpression
      )
    };
  if (obj.unreachableNode !== void 0) return { unreachableNode: obj.unreachableNode };
  if (obj.unknownConnectionSource !== void 0) return { unknownConnectionSource: obj.unknownConnectionSource };
  if (obj.unknownConnectionSourceOutput !== void 0)
    return { unknownConnectionSourceOutput: obj.unknownConnectionSourceOutput };
  if (obj.unknownConnectionTarget !== void 0) return { unknownConnectionTarget: obj.unknownConnectionTarget };
  if (obj.unknownConnectionTargetInput !== void 0)
    return { unknownConnectionTargetInput: obj.unknownConnectionTargetInput };
  if (obj.unknownConnectionCondition !== void 0)
    return { unknownConnectionCondition: obj.unknownConnectionCondition };
  if (obj.malformedConditionExpression !== void 0)
    return { malformedConditionExpression: obj.malformedConditionExpression };
  if (obj.malformedNodeInputExpression !== void 0)
    return { malformedNodeInputExpression: obj.malformedNodeInputExpression };
  if (obj.mismatchedNodeInputType !== void 0) return { mismatchedNodeInputType: obj.mismatchedNodeInputType };
  if (obj.mismatchedNodeOutputType !== void 0) return { mismatchedNodeOutputType: obj.mismatchedNodeOutputType };
  if (obj.incompatibleConnectionDataType !== void 0)
    return { incompatibleConnectionDataType: obj.incompatibleConnectionDataType };
  if (obj.missingConnectionConfiguration !== void 0)
    return { missingConnectionConfiguration: obj.missingConnectionConfiguration };
  if (obj.missingDefaultCondition !== void 0) return { missingDefaultCondition: obj.missingDefaultCondition };
  if (obj.missingEndingNodes !== void 0) return { missingEndingNodes: obj.missingEndingNodes };
  if (obj.missingNodeConfiguration !== void 0) return { missingNodeConfiguration: obj.missingNodeConfiguration };
  if (obj.missingNodeInput !== void 0) return { missingNodeInput: obj.missingNodeInput };
  if (obj.missingNodeOutput !== void 0) return { missingNodeOutput: obj.missingNodeOutput };
  if (obj.missingStartingNodes !== void 0) return { missingStartingNodes: obj.missingStartingNodes };
  if (obj.multipleNodeInputConnections !== void 0)
    return { multipleNodeInputConnections: obj.multipleNodeInputConnections };
  if (obj.unfulfilledNodeInput !== void 0) return { unfulfilledNodeInput: obj.unfulfilledNodeInput };
  if (obj.unsatisfiedConnectionConditions !== void 0)
    return { unsatisfiedConnectionConditions: obj.unsatisfiedConnectionConditions };
  if (obj.unspecified !== void 0) return { unspecified: obj.unspecified };
  if (obj.unknownNodeInput !== void 0) return { unknownNodeInput: obj.unknownNodeInput };
  if (obj.unknownNodeOutput !== void 0) return { unknownNodeOutput: obj.unknownNodeOutput };
  if (obj.missingLoopInputNode !== void 0) return { missingLoopInputNode: obj.missingLoopInputNode };
  if (obj.missingLoopControllerNode !== void 0) return { missingLoopControllerNode: obj.missingLoopControllerNode };
  if (obj.multipleLoopInputNodes !== void 0) return { multipleLoopInputNodes: obj.multipleLoopInputNodes };
  if (obj.multipleLoopControllerNodes !== void 0)
    return { multipleLoopControllerNodes: obj.multipleLoopControllerNodes };
  if (obj.loopIncompatibleNodeType !== void 0) return { loopIncompatibleNodeType: obj.loopIncompatibleNodeType };
  if (obj.invalidLoopBoundary !== void 0) return { invalidLoopBoundary: obj.invalidLoopBoundary };
  if (obj.$unknown !== void 0) return { [obj.$unknown[0]]: "UNKNOWN" };
}, "FlowValidationDetailsFilterSensitiveLog");
var FlowValidationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.details && { details: FlowValidationDetailsFilterSensitiveLog(obj.details) }
}), "FlowValidationFilterSensitiveLog");

// src/protocols/Aws_restJson1.ts
var import_core2 = require("@aws-sdk/core");


var import_uuid = require("uuid");

// src/models/models_1.ts

var IngestionJobStatus = {
  COMPLETE: "COMPLETE",
  FAILED: "FAILED",
  IN_PROGRESS: "IN_PROGRESS",
  STARTING: "STARTING",
  STOPPED: "STOPPED",
  STOPPING: "STOPPING"
};
var IngestionJobFilterAttribute = {
  STATUS: "STATUS"
};
var IngestionJobFilterOperator = {
  EQ: "EQ"
};
var IngestionJobSortByAttribute = {
  STARTED_AT: "STARTED_AT",
  STATUS: "STATUS"
};
var SortOrder = {
  ASCENDING: "ASCENDING",
  DESCENDING: "DESCENDING"
};
var ContentDataSourceType = {
  CUSTOM: "CUSTOM",
  S3: "S3"
};
var DocumentStatus = {
  DELETE_IN_PROGRESS: "DELETE_IN_PROGRESS",
  DELETING: "DELETING",
  FAILED: "FAILED",
  IGNORED: "IGNORED",
  INDEXED: "INDEXED",
  IN_PROGRESS: "IN_PROGRESS",
  METADATA_PARTIALLY_INDEXED: "METADATA_PARTIALLY_INDEXED",
  METADATA_UPDATE_FAILED: "METADATA_UPDATE_FAILED",
  NOT_FOUND: "NOT_FOUND",
  PARTIALLY_INDEXED: "PARTIALLY_INDEXED",
  PENDING: "PENDING",
  STARTING: "STARTING"
};
var InlineContentType = {
  BYTE: "BYTE",
  TEXT: "TEXT"
};
var CustomSourceType = {
  IN_LINE: "IN_LINE",
  S3_LOCATION: "S3_LOCATION"
};
var MetadataValueType = {
  BOOLEAN: "BOOLEAN",
  NUMBER: "NUMBER",
  STRING: "STRING",
  STRING_LIST: "STRING_LIST"
};
var MetadataSourceType = {
  IN_LINE_ATTRIBUTE: "IN_LINE_ATTRIBUTE",
  S3_LOCATION: "S3_LOCATION"
};
var RedshiftProvisionedAuthType = {
  IAM: "IAM",
  USERNAME: "USERNAME",
  USERNAME_PASSWORD: "USERNAME_PASSWORD"
};
var RedshiftServerlessAuthType = {
  IAM: "IAM",
  USERNAME_PASSWORD: "USERNAME_PASSWORD"
};
var RedshiftQueryEngineType = {
  PROVISIONED: "PROVISIONED",
  SERVERLESS: "SERVERLESS"
};
var IncludeExclude = {
  EXCLUDE: "EXCLUDE",
  INCLUDE: "INCLUDE"
};
var RedshiftQueryEngineStorageType = {
  AWS_DATA_CATALOG: "AWS_DATA_CATALOG",
  REDSHIFT: "REDSHIFT"
};
var QueryEngineType = {
  REDSHIFT: "REDSHIFT"
};
var KnowledgeBaseType = {
  KENDRA: "KENDRA",
  SQL: "SQL",
  VECTOR: "VECTOR"
};
var EmbeddingDataType = {
  BINARY: "BINARY",
  FLOAT32: "FLOAT32"
};
var SupplementalDataStorageLocationType = {
  S3: "S3"
};
var KnowledgeBaseStorageType = {
  MONGO_DB_ATLAS: "MONGO_DB_ATLAS",
  NEPTUNE_ANALYTICS: "NEPTUNE_ANALYTICS",
  OPENSEARCH_MANAGED_CLUSTER: "OPENSEARCH_MANAGED_CLUSTER",
  OPENSEARCH_SERVERLESS: "OPENSEARCH_SERVERLESS",
  PINECONE: "PINECONE",
  RDS: "RDS",
  REDIS_ENTERPRISE_CLOUD: "REDIS_ENTERPRISE_CLOUD",
  S3_VECTORS: "S3_VECTORS"
};
var KnowledgeBaseStatus = {
  ACTIVE: "ACTIVE",
  CREATING: "CREATING",
  DELETE_UNSUCCESSFUL: "DELETE_UNSUCCESSFUL",
  DELETING: "DELETING",
  FAILED: "FAILED",
  UPDATING: "UPDATING"
};
var PromptGenAiResource;
((PromptGenAiResource3) => {
  PromptGenAiResource3.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.agent !== void 0) return visitor.agent(value.agent);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(PromptGenAiResource || (PromptGenAiResource = {}));
var FlowNodeConfiguration;
((FlowNodeConfiguration2) => {
  FlowNodeConfiguration2.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.input !== void 0) return visitor.input(value.input);
    if (value.output !== void 0) return visitor.output(value.output);
    if (value.knowledgeBase !== void 0) return visitor.knowledgeBase(value.knowledgeBase);
    if (value.condition !== void 0) return visitor.condition(value.condition);
    if (value.lex !== void 0) return visitor.lex(value.lex);
    if (value.prompt !== void 0) return visitor.prompt(value.prompt);
    if (value.lambdaFunction !== void 0) return visitor.lambdaFunction(value.lambdaFunction);
    if (value.storage !== void 0) return visitor.storage(value.storage);
    if (value.agent !== void 0) return visitor.agent(value.agent);
    if (value.retrieval !== void 0) return visitor.retrieval(value.retrieval);
    if (value.iterator !== void 0) return visitor.iterator(value.iterator);
    if (value.collector !== void 0) return visitor.collector(value.collector);
    if (value.inlineCode !== void 0) return visitor.inlineCode(value.inlineCode);
    if (value.loop !== void 0) return visitor.loop(value.loop);
    if (value.loopInput !== void 0) return visitor.loopInput(value.loopInput);
    if (value.loopController !== void 0) return visitor.loopController(value.loopController);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(FlowNodeConfiguration || (FlowNodeConfiguration = {}));
var ByteContentDocFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.data && { data: import_smithy_client.SENSITIVE_STRING }
}), "ByteContentDocFilterSensitiveLog");
var TextContentDocFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.data && { data: import_smithy_client.SENSITIVE_STRING }
}), "TextContentDocFilterSensitiveLog");
var InlineContentFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.byteContent && { byteContent: ByteContentDocFilterSensitiveLog(obj.byteContent) },
  ...obj.textContent && { textContent: TextContentDocFilterSensitiveLog(obj.textContent) }
}), "InlineContentFilterSensitiveLog");
var CustomContentFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.inlineContent && { inlineContent: InlineContentFilterSensitiveLog(obj.inlineContent) }
}), "CustomContentFilterSensitiveLog");
var DocumentContentFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.custom && { custom: CustomContentFilterSensitiveLog(obj.custom) }
}), "DocumentContentFilterSensitiveLog");
var MetadataAttributeValueFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.numberValue && { numberValue: import_smithy_client.SENSITIVE_STRING },
  ...obj.stringValue && { stringValue: import_smithy_client.SENSITIVE_STRING },
  ...obj.stringListValue && { stringListValue: import_smithy_client.SENSITIVE_STRING }
}), "MetadataAttributeValueFilterSensitiveLog");
var MetadataAttributeFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.key && { key: import_smithy_client.SENSITIVE_STRING },
  ...obj.value && { value: MetadataAttributeValueFilterSensitiveLog(obj.value) }
}), "MetadataAttributeFilterSensitiveLog");
var DocumentMetadataFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.inlineAttributes && {
    inlineAttributes: obj.inlineAttributes.map((item) => MetadataAttributeFilterSensitiveLog(item))
  }
}), "DocumentMetadataFilterSensitiveLog");
var KnowledgeBaseDocumentFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.metadata && { metadata: DocumentMetadataFilterSensitiveLog(obj.metadata) },
  ...obj.content && { content: DocumentContentFilterSensitiveLog(obj.content) }
}), "KnowledgeBaseDocumentFilterSensitiveLog");
var IngestKnowledgeBaseDocumentsRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.documents && { documents: obj.documents.map((item) => KnowledgeBaseDocumentFilterSensitiveLog(item)) }
}), "IngestKnowledgeBaseDocumentsRequestFilterSensitiveLog");
var QueryGenerationContextFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj
}), "QueryGenerationContextFilterSensitiveLog");
var QueryGenerationConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.generationContext && { generationContext: import_smithy_client.SENSITIVE_STRING }
}), "QueryGenerationConfigurationFilterSensitiveLog");
var RedshiftConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.queryGenerationConfiguration && {
    queryGenerationConfiguration: QueryGenerationConfigurationFilterSensitiveLog(obj.queryGenerationConfiguration)
  }
}), "RedshiftConfigurationFilterSensitiveLog");
var SqlKnowledgeBaseConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.redshiftConfiguration && {
    redshiftConfiguration: RedshiftConfigurationFilterSensitiveLog(obj.redshiftConfiguration)
  }
}), "SqlKnowledgeBaseConfigurationFilterSensitiveLog");
var KnowledgeBaseConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.sqlKnowledgeBaseConfiguration && {
    sqlKnowledgeBaseConfiguration: SqlKnowledgeBaseConfigurationFilterSensitiveLog(obj.sqlKnowledgeBaseConfiguration)
  }
}), "KnowledgeBaseConfigurationFilterSensitiveLog");
var NeptuneAnalyticsConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.graphArn && { graphArn: import_smithy_client.SENSITIVE_STRING }
}), "NeptuneAnalyticsConfigurationFilterSensitiveLog");
var OpenSearchManagedClusterConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.vectorIndexName && { vectorIndexName: import_smithy_client.SENSITIVE_STRING }
}), "OpenSearchManagedClusterConfigurationFilterSensitiveLog");
var S3VectorsConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.vectorBucketArn && { vectorBucketArn: import_smithy_client.SENSITIVE_STRING },
  ...obj.indexArn && { indexArn: import_smithy_client.SENSITIVE_STRING },
  ...obj.indexName && { indexName: import_smithy_client.SENSITIVE_STRING }
}), "S3VectorsConfigurationFilterSensitiveLog");
var StorageConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.opensearchManagedClusterConfiguration && {
    opensearchManagedClusterConfiguration: OpenSearchManagedClusterConfigurationFilterSensitiveLog(
      obj.opensearchManagedClusterConfiguration
    )
  },
  ...obj.neptuneAnalyticsConfiguration && {
    neptuneAnalyticsConfiguration: NeptuneAnalyticsConfigurationFilterSensitiveLog(obj.neptuneAnalyticsConfiguration)
  },
  ...obj.s3VectorsConfiguration && {
    s3VectorsConfiguration: S3VectorsConfigurationFilterSensitiveLog(obj.s3VectorsConfiguration)
  }
}), "StorageConfigurationFilterSensitiveLog");
var CreateKnowledgeBaseRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.knowledgeBaseConfiguration && {
    knowledgeBaseConfiguration: KnowledgeBaseConfigurationFilterSensitiveLog(obj.knowledgeBaseConfiguration)
  },
  ...obj.storageConfiguration && {
    storageConfiguration: StorageConfigurationFilterSensitiveLog(obj.storageConfiguration)
  }
}), "CreateKnowledgeBaseRequestFilterSensitiveLog");
var KnowledgeBaseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.knowledgeBaseConfiguration && {
    knowledgeBaseConfiguration: KnowledgeBaseConfigurationFilterSensitiveLog(obj.knowledgeBaseConfiguration)
  },
  ...obj.storageConfiguration && {
    storageConfiguration: StorageConfigurationFilterSensitiveLog(obj.storageConfiguration)
  }
}), "KnowledgeBaseFilterSensitiveLog");
var CreateKnowledgeBaseResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.knowledgeBase && { knowledgeBase: KnowledgeBaseFilterSensitiveLog(obj.knowledgeBase) }
}), "CreateKnowledgeBaseResponseFilterSensitiveLog");
var GetKnowledgeBaseResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.knowledgeBase && { knowledgeBase: KnowledgeBaseFilterSensitiveLog(obj.knowledgeBase) }
}), "GetKnowledgeBaseResponseFilterSensitiveLog");
var UpdateKnowledgeBaseRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.knowledgeBaseConfiguration && {
    knowledgeBaseConfiguration: KnowledgeBaseConfigurationFilterSensitiveLog(obj.knowledgeBaseConfiguration)
  },
  ...obj.storageConfiguration && {
    storageConfiguration: StorageConfigurationFilterSensitiveLog(obj.storageConfiguration)
  }
}), "UpdateKnowledgeBaseRequestFilterSensitiveLog");
var UpdateKnowledgeBaseResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.knowledgeBase && { knowledgeBase: KnowledgeBaseFilterSensitiveLog(obj.knowledgeBase) }
}), "UpdateKnowledgeBaseResponseFilterSensitiveLog");
var PromptAgentResourceFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj
}), "PromptAgentResourceFilterSensitiveLog");
var PromptGenAiResourceFilterSensitiveLog = /* @__PURE__ */ __name((obj) => {
  if (obj.agent !== void 0) return { agent: import_smithy_client.SENSITIVE_STRING };
  if (obj.$unknown !== void 0) return { [obj.$unknown[0]]: "UNKNOWN" };
}, "PromptGenAiResourceFilterSensitiveLog");
var PromptMetadataEntryFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.key && { key: import_smithy_client.SENSITIVE_STRING },
  ...obj.value && { value: import_smithy_client.SENSITIVE_STRING }
}), "PromptMetadataEntryFilterSensitiveLog");
var PromptVariantFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.templateConfiguration && {
    templateConfiguration: PromptTemplateConfigurationFilterSensitiveLog(obj.templateConfiguration)
  },
  ...obj.inferenceConfiguration && { inferenceConfiguration: obj.inferenceConfiguration },
  ...obj.metadata && { metadata: import_smithy_client.SENSITIVE_STRING },
  ...obj.genAiResource && { genAiResource: import_smithy_client.SENSITIVE_STRING }
}), "PromptVariantFilterSensitiveLog");
var CreatePromptRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.variants && { variants: import_smithy_client.SENSITIVE_STRING }
}), "CreatePromptRequestFilterSensitiveLog");
var CreatePromptResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.variants && { variants: import_smithy_client.SENSITIVE_STRING }
}), "CreatePromptResponseFilterSensitiveLog");
var CreatePromptVersionResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.variants && { variants: import_smithy_client.SENSITIVE_STRING }
}), "CreatePromptVersionResponseFilterSensitiveLog");
var GetPromptResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.variants && { variants: import_smithy_client.SENSITIVE_STRING }
}), "GetPromptResponseFilterSensitiveLog");
var UpdatePromptRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.variants && { variants: import_smithy_client.SENSITIVE_STRING }
}), "UpdatePromptRequestFilterSensitiveLog");
var UpdatePromptResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.variants && { variants: import_smithy_client.SENSITIVE_STRING }
}), "UpdatePromptResponseFilterSensitiveLog");
var ValidateFlowDefinitionResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.validations && { validations: obj.validations.map((item) => FlowValidationFilterSensitiveLog(item)) }
}), "ValidateFlowDefinitionResponseFilterSensitiveLog");
var GetAgentVersionResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.agentVersion && { agentVersion: AgentVersionFilterSensitiveLog(obj.agentVersion) }
}), "GetAgentVersionResponseFilterSensitiveLog");
var FlowDefinitionFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.nodes && { nodes: obj.nodes.map((item) => FlowNodeFilterSensitiveLog(item)) },
  ...obj.connections && { connections: obj.connections.map((item) => item) }
}), "FlowDefinitionFilterSensitiveLog");
var FlowNodeFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.configuration && { configuration: FlowNodeConfigurationFilterSensitiveLog(obj.configuration) },
  ...obj.inputs && { inputs: obj.inputs.map((item) => FlowNodeInputFilterSensitiveLog(item)) }
}), "FlowNodeFilterSensitiveLog");
var FlowNodeConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => {
  if (obj.input !== void 0) return { input: obj.input };
  if (obj.output !== void 0) return { output: obj.output };
  if (obj.knowledgeBase !== void 0)
    return { knowledgeBase: KnowledgeBaseFlowNodeConfigurationFilterSensitiveLog(obj.knowledgeBase) };
  if (obj.condition !== void 0)
    return { condition: ConditionFlowNodeConfigurationFilterSensitiveLog(obj.condition) };
  if (obj.lex !== void 0) return { lex: obj.lex };
  if (obj.prompt !== void 0) return { prompt: PromptFlowNodeConfigurationFilterSensitiveLog(obj.prompt) };
  if (obj.lambdaFunction !== void 0) return { lambdaFunction: obj.lambdaFunction };
  if (obj.storage !== void 0) return { storage: obj.storage };
  if (obj.agent !== void 0) return { agent: obj.agent };
  if (obj.retrieval !== void 0) return { retrieval: obj.retrieval };
  if (obj.iterator !== void 0) return { iterator: obj.iterator };
  if (obj.collector !== void 0) return { collector: obj.collector };
  if (obj.inlineCode !== void 0)
    return { inlineCode: InlineCodeFlowNodeConfigurationFilterSensitiveLog(obj.inlineCode) };
  if (obj.loop !== void 0) return { loop: LoopFlowNodeConfigurationFilterSensitiveLog(obj.loop) };
  if (obj.loopInput !== void 0) return { loopInput: obj.loopInput };
  if (obj.loopController !== void 0)
    return { loopController: LoopControllerFlowNodeConfigurationFilterSensitiveLog(obj.loopController) };
  if (obj.$unknown !== void 0) return { [obj.$unknown[0]]: "UNKNOWN" };
}, "FlowNodeConfigurationFilterSensitiveLog");
var LoopFlowNodeConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.definition && { definition: import_smithy_client.SENSITIVE_STRING }
}), "LoopFlowNodeConfigurationFilterSensitiveLog");
var CreateFlowRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.definition && { definition: import_smithy_client.SENSITIVE_STRING }
}), "CreateFlowRequestFilterSensitiveLog");
var CreateFlowResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.definition && { definition: import_smithy_client.SENSITIVE_STRING }
}), "CreateFlowResponseFilterSensitiveLog");
var CreateFlowVersionResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.definition && { definition: import_smithy_client.SENSITIVE_STRING }
}), "CreateFlowVersionResponseFilterSensitiveLog");
var GetFlowResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.definition && { definition: import_smithy_client.SENSITIVE_STRING },
  ...obj.validations && { validations: obj.validations.map((item) => FlowValidationFilterSensitiveLog(item)) }
}), "GetFlowResponseFilterSensitiveLog");
var GetFlowVersionResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.definition && { definition: import_smithy_client.SENSITIVE_STRING }
}), "GetFlowVersionResponseFilterSensitiveLog");
var UpdateFlowRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.definition && { definition: import_smithy_client.SENSITIVE_STRING }
}), "UpdateFlowRequestFilterSensitiveLog");
var UpdateFlowResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.definition && { definition: import_smithy_client.SENSITIVE_STRING }
}), "UpdateFlowResponseFilterSensitiveLog");
var ValidateFlowDefinitionRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.definition && { definition: import_smithy_client.SENSITIVE_STRING }
}), "ValidateFlowDefinitionRequestFilterSensitiveLog");

// src/protocols/Aws_restJson1.ts
var se_AssociateAgentCollaboratorCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/agents/{agentId}/agentversions/{agentVersion}/agentcollaborators");
  b.p("agentId", () => input.agentId, "{agentId}", false);
  b.p("agentVersion", () => input.agentVersion, "{agentVersion}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      agentDescriptor: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "agentDescriptor"),
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      collaborationInstruction: [],
      collaboratorName: [],
      relayConversationHistory: []
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_AssociateAgentCollaboratorCommand");
var se_AssociateAgentKnowledgeBaseCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/agents/{agentId}/agentversions/{agentVersion}/knowledgebases");
  b.p("agentId", () => input.agentId, "{agentId}", false);
  b.p("agentVersion", () => input.agentVersion, "{agentVersion}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      description: [],
      knowledgeBaseId: [],
      knowledgeBaseState: []
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_AssociateAgentKnowledgeBaseCommand");
var se_CreateAgentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/agents");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      agentCollaboration: [],
      agentName: [],
      agentResourceRoleArn: [],
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      customOrchestration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "customOrchestration"),
      customerEncryptionKeyArn: [],
      description: [],
      foundationModel: [],
      guardrailConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "guardrailConfiguration"),
      idleSessionTTLInSeconds: [],
      instruction: [],
      memoryConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "memoryConfiguration"),
      orchestrationType: [],
      promptOverrideConfiguration: /* @__PURE__ */ __name((_) => se_PromptOverrideConfiguration(_, context), "promptOverrideConfiguration"),
      tags: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "tags")
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_CreateAgentCommand");
var se_CreateAgentActionGroupCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/agents/{agentId}/agentversions/{agentVersion}/actiongroups");
  b.p("agentId", () => input.agentId, "{agentId}", false);
  b.p("agentVersion", () => input.agentVersion, "{agentVersion}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      actionGroupExecutor: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "actionGroupExecutor"),
      actionGroupName: [],
      actionGroupState: [],
      apiSchema: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "apiSchema"),
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      description: [],
      functionSchema: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "functionSchema"),
      parentActionGroupSignature: [],
      parentActionGroupSignatureParams: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "parentActionGroupSignatureParams")
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_CreateAgentActionGroupCommand");
var se_CreateAgentAliasCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/agents/{agentId}/agentaliases");
  b.p("agentId", () => input.agentId, "{agentId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      agentAliasName: [],
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      description: [],
      routingConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "routingConfiguration"),
      tags: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "tags")
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_CreateAgentAliasCommand");
var se_CreateDataSourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/knowledgebases/{knowledgeBaseId}/datasources");
  b.p("knowledgeBaseId", () => input.knowledgeBaseId, "{knowledgeBaseId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      dataDeletionPolicy: [],
      dataSourceConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "dataSourceConfiguration"),
      description: [],
      name: [],
      serverSideEncryptionConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "serverSideEncryptionConfiguration"),
      vectorIngestionConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "vectorIngestionConfiguration")
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_CreateDataSourceCommand");
var se_CreateFlowCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/flows");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      customerEncryptionKeyArn: [],
      definition: /* @__PURE__ */ __name((_) => se_FlowDefinition(_, context), "definition"),
      description: [],
      executionRoleArn: [],
      name: [],
      tags: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "tags")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateFlowCommand");
var se_CreateFlowAliasCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/flows/{flowIdentifier}/aliases");
  b.p("flowIdentifier", () => input.flowIdentifier, "{flowIdentifier}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      concurrencyConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "concurrencyConfiguration"),
      description: [],
      name: [],
      routingConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "routingConfiguration"),
      tags: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "tags")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateFlowAliasCommand");
var se_CreateFlowVersionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/flows/{flowIdentifier}/versions");
  b.p("flowIdentifier", () => input.flowIdentifier, "{flowIdentifier}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      description: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateFlowVersionCommand");
var se_CreateKnowledgeBaseCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/knowledgebases");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      description: [],
      knowledgeBaseConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "knowledgeBaseConfiguration"),
      name: [],
      roleArn: [],
      storageConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "storageConfiguration"),
      tags: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "tags")
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_CreateKnowledgeBaseCommand");
var se_CreatePromptCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/prompts");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      customerEncryptionKeyArn: [],
      defaultVariant: [],
      description: [],
      name: [],
      tags: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "tags"),
      variants: /* @__PURE__ */ __name((_) => se_PromptVariantList(_, context), "variants")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreatePromptCommand");
var se_CreatePromptVersionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/prompts/{promptIdentifier}/versions");
  b.p("promptIdentifier", () => input.promptIdentifier, "{promptIdentifier}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      description: [],
      tags: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "tags")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreatePromptVersionCommand");
var se_DeleteAgentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/agents/{agentId}");
  b.p("agentId", () => input.agentId, "{agentId}", false);
  const query = (0, import_smithy_client.map)({
    [_sRIUC]: [() => input.skipResourceInUseCheck !== void 0, () => input[_sRIUC].toString()]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_DeleteAgentCommand");
var se_DeleteAgentActionGroupCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/agents/{agentId}/agentversions/{agentVersion}/actiongroups/{actionGroupId}");
  b.p("agentId", () => input.agentId, "{agentId}", false);
  b.p("agentVersion", () => input.agentVersion, "{agentVersion}", false);
  b.p("actionGroupId", () => input.actionGroupId, "{actionGroupId}", false);
  const query = (0, import_smithy_client.map)({
    [_sRIUC]: [() => input.skipResourceInUseCheck !== void 0, () => input[_sRIUC].toString()]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_DeleteAgentActionGroupCommand");
var se_DeleteAgentAliasCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/agents/{agentId}/agentaliases/{agentAliasId}");
  b.p("agentId", () => input.agentId, "{agentId}", false);
  b.p("agentAliasId", () => input.agentAliasId, "{agentAliasId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteAgentAliasCommand");
var se_DeleteAgentVersionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/agents/{agentId}/agentversions/{agentVersion}");
  b.p("agentId", () => input.agentId, "{agentId}", false);
  b.p("agentVersion", () => input.agentVersion, "{agentVersion}", false);
  const query = (0, import_smithy_client.map)({
    [_sRIUC]: [() => input.skipResourceInUseCheck !== void 0, () => input[_sRIUC].toString()]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_DeleteAgentVersionCommand");
var se_DeleteDataSourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/knowledgebases/{knowledgeBaseId}/datasources/{dataSourceId}");
  b.p("knowledgeBaseId", () => input.knowledgeBaseId, "{knowledgeBaseId}", false);
  b.p("dataSourceId", () => input.dataSourceId, "{dataSourceId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteDataSourceCommand");
var se_DeleteFlowCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/flows/{flowIdentifier}");
  b.p("flowIdentifier", () => input.flowIdentifier, "{flowIdentifier}", false);
  const query = (0, import_smithy_client.map)({
    [_sRIUC]: [() => input.skipResourceInUseCheck !== void 0, () => input[_sRIUC].toString()]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_DeleteFlowCommand");
var se_DeleteFlowAliasCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/flows/{flowIdentifier}/aliases/{aliasIdentifier}");
  b.p("flowIdentifier", () => input.flowIdentifier, "{flowIdentifier}", false);
  b.p("aliasIdentifier", () => input.aliasIdentifier, "{aliasIdentifier}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteFlowAliasCommand");
var se_DeleteFlowVersionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/flows/{flowIdentifier}/versions/{flowVersion}");
  b.p("flowIdentifier", () => input.flowIdentifier, "{flowIdentifier}", false);
  b.p("flowVersion", () => input.flowVersion, "{flowVersion}", false);
  const query = (0, import_smithy_client.map)({
    [_sRIUC]: [() => input.skipResourceInUseCheck !== void 0, () => input[_sRIUC].toString()]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_DeleteFlowVersionCommand");
var se_DeleteKnowledgeBaseCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/knowledgebases/{knowledgeBaseId}");
  b.p("knowledgeBaseId", () => input.knowledgeBaseId, "{knowledgeBaseId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteKnowledgeBaseCommand");
var se_DeleteKnowledgeBaseDocumentsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/knowledgebases/{knowledgeBaseId}/datasources/{dataSourceId}/documents/deleteDocuments");
  b.p("knowledgeBaseId", () => input.knowledgeBaseId, "{knowledgeBaseId}", false);
  b.p("dataSourceId", () => input.dataSourceId, "{dataSourceId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      documentIdentifiers: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "documentIdentifiers")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DeleteKnowledgeBaseDocumentsCommand");
var se_DeletePromptCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/prompts/{promptIdentifier}");
  b.p("promptIdentifier", () => input.promptIdentifier, "{promptIdentifier}", false);
  const query = (0, import_smithy_client.map)({
    [_pV]: [, input[_pV]]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_DeletePromptCommand");
var se_DisassociateAgentCollaboratorCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/agents/{agentId}/agentversions/{agentVersion}/agentcollaborators/{collaboratorId}");
  b.p("agentId", () => input.agentId, "{agentId}", false);
  b.p("agentVersion", () => input.agentVersion, "{agentVersion}", false);
  b.p("collaboratorId", () => input.collaboratorId, "{collaboratorId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DisassociateAgentCollaboratorCommand");
var se_DisassociateAgentKnowledgeBaseCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/agents/{agentId}/agentversions/{agentVersion}/knowledgebases/{knowledgeBaseId}");
  b.p("agentId", () => input.agentId, "{agentId}", false);
  b.p("agentVersion", () => input.agentVersion, "{agentVersion}", false);
  b.p("knowledgeBaseId", () => input.knowledgeBaseId, "{knowledgeBaseId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DisassociateAgentKnowledgeBaseCommand");
var se_GetAgentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/agents/{agentId}");
  b.p("agentId", () => input.agentId, "{agentId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetAgentCommand");
var se_GetAgentActionGroupCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/agents/{agentId}/agentversions/{agentVersion}/actiongroups/{actionGroupId}");
  b.p("agentId", () => input.agentId, "{agentId}", false);
  b.p("agentVersion", () => input.agentVersion, "{agentVersion}", false);
  b.p("actionGroupId", () => input.actionGroupId, "{actionGroupId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetAgentActionGroupCommand");
var se_GetAgentAliasCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/agents/{agentId}/agentaliases/{agentAliasId}");
  b.p("agentId", () => input.agentId, "{agentId}", false);
  b.p("agentAliasId", () => input.agentAliasId, "{agentAliasId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetAgentAliasCommand");
var se_GetAgentCollaboratorCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/agents/{agentId}/agentversions/{agentVersion}/agentcollaborators/{collaboratorId}");
  b.p("agentId", () => input.agentId, "{agentId}", false);
  b.p("agentVersion", () => input.agentVersion, "{agentVersion}", false);
  b.p("collaboratorId", () => input.collaboratorId, "{collaboratorId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetAgentCollaboratorCommand");
var se_GetAgentKnowledgeBaseCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/agents/{agentId}/agentversions/{agentVersion}/knowledgebases/{knowledgeBaseId}");
  b.p("agentId", () => input.agentId, "{agentId}", false);
  b.p("agentVersion", () => input.agentVersion, "{agentVersion}", false);
  b.p("knowledgeBaseId", () => input.knowledgeBaseId, "{knowledgeBaseId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetAgentKnowledgeBaseCommand");
var se_GetAgentVersionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/agents/{agentId}/agentversions/{agentVersion}");
  b.p("agentId", () => input.agentId, "{agentId}", false);
  b.p("agentVersion", () => input.agentVersion, "{agentVersion}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetAgentVersionCommand");
var se_GetDataSourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/knowledgebases/{knowledgeBaseId}/datasources/{dataSourceId}");
  b.p("knowledgeBaseId", () => input.knowledgeBaseId, "{knowledgeBaseId}", false);
  b.p("dataSourceId", () => input.dataSourceId, "{dataSourceId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetDataSourceCommand");
var se_GetFlowCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/flows/{flowIdentifier}");
  b.p("flowIdentifier", () => input.flowIdentifier, "{flowIdentifier}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetFlowCommand");
var se_GetFlowAliasCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/flows/{flowIdentifier}/aliases/{aliasIdentifier}");
  b.p("flowIdentifier", () => input.flowIdentifier, "{flowIdentifier}", false);
  b.p("aliasIdentifier", () => input.aliasIdentifier, "{aliasIdentifier}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetFlowAliasCommand");
var se_GetFlowVersionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/flows/{flowIdentifier}/versions/{flowVersion}");
  b.p("flowIdentifier", () => input.flowIdentifier, "{flowIdentifier}", false);
  b.p("flowVersion", () => input.flowVersion, "{flowVersion}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetFlowVersionCommand");
var se_GetIngestionJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/knowledgebases/{knowledgeBaseId}/datasources/{dataSourceId}/ingestionjobs/{ingestionJobId}");
  b.p("knowledgeBaseId", () => input.knowledgeBaseId, "{knowledgeBaseId}", false);
  b.p("dataSourceId", () => input.dataSourceId, "{dataSourceId}", false);
  b.p("ingestionJobId", () => input.ingestionJobId, "{ingestionJobId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetIngestionJobCommand");
var se_GetKnowledgeBaseCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/knowledgebases/{knowledgeBaseId}");
  b.p("knowledgeBaseId", () => input.knowledgeBaseId, "{knowledgeBaseId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetKnowledgeBaseCommand");
var se_GetKnowledgeBaseDocumentsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/knowledgebases/{knowledgeBaseId}/datasources/{dataSourceId}/documents/getDocuments");
  b.p("knowledgeBaseId", () => input.knowledgeBaseId, "{knowledgeBaseId}", false);
  b.p("dataSourceId", () => input.dataSourceId, "{dataSourceId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      documentIdentifiers: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "documentIdentifiers")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_GetKnowledgeBaseDocumentsCommand");
var se_GetPromptCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/prompts/{promptIdentifier}");
  b.p("promptIdentifier", () => input.promptIdentifier, "{promptIdentifier}", false);
  const query = (0, import_smithy_client.map)({
    [_pV]: [, input[_pV]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetPromptCommand");
var se_IngestKnowledgeBaseDocumentsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/knowledgebases/{knowledgeBaseId}/datasources/{dataSourceId}/documents");
  b.p("knowledgeBaseId", () => input.knowledgeBaseId, "{knowledgeBaseId}", false);
  b.p("dataSourceId", () => input.dataSourceId, "{dataSourceId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      documents: /* @__PURE__ */ __name((_) => se_KnowledgeBaseDocuments(_, context), "documents")
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_IngestKnowledgeBaseDocumentsCommand");
var se_ListAgentActionGroupsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/agents/{agentId}/agentversions/{agentVersion}/actiongroups");
  b.p("agentId", () => input.agentId, "{agentId}", false);
  b.p("agentVersion", () => input.agentVersion, "{agentVersion}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListAgentActionGroupsCommand");
var se_ListAgentAliasesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/agents/{agentId}/agentaliases");
  b.p("agentId", () => input.agentId, "{agentId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListAgentAliasesCommand");
var se_ListAgentCollaboratorsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/agents/{agentId}/agentversions/{agentVersion}/agentcollaborators");
  b.p("agentId", () => input.agentId, "{agentId}", false);
  b.p("agentVersion", () => input.agentVersion, "{agentVersion}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListAgentCollaboratorsCommand");
var se_ListAgentKnowledgeBasesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/agents/{agentId}/agentversions/{agentVersion}/knowledgebases");
  b.p("agentId", () => input.agentId, "{agentId}", false);
  b.p("agentVersion", () => input.agentVersion, "{agentVersion}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListAgentKnowledgeBasesCommand");
var se_ListAgentsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/agents");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListAgentsCommand");
var se_ListAgentVersionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/agents/{agentId}/agentversions");
  b.p("agentId", () => input.agentId, "{agentId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListAgentVersionsCommand");
var se_ListDataSourcesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/knowledgebases/{knowledgeBaseId}/datasources");
  b.p("knowledgeBaseId", () => input.knowledgeBaseId, "{knowledgeBaseId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListDataSourcesCommand");
var se_ListFlowAliasesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/flows/{flowIdentifier}/aliases");
  b.p("flowIdentifier", () => input.flowIdentifier, "{flowIdentifier}", false);
  const query = (0, import_smithy_client.map)({
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()],
    [_nT]: [, input[_nT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListFlowAliasesCommand");
var se_ListFlowsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/flows");
  const query = (0, import_smithy_client.map)({
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()],
    [_nT]: [, input[_nT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListFlowsCommand");
var se_ListFlowVersionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/flows/{flowIdentifier}/versions");
  b.p("flowIdentifier", () => input.flowIdentifier, "{flowIdentifier}", false);
  const query = (0, import_smithy_client.map)({
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()],
    [_nT]: [, input[_nT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListFlowVersionsCommand");
var se_ListIngestionJobsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/knowledgebases/{knowledgeBaseId}/datasources/{dataSourceId}/ingestionjobs");
  b.p("knowledgeBaseId", () => input.knowledgeBaseId, "{knowledgeBaseId}", false);
  b.p("dataSourceId", () => input.dataSourceId, "{dataSourceId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      filters: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "filters"),
      maxResults: [],
      nextToken: [],
      sortBy: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "sortBy")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListIngestionJobsCommand");
var se_ListKnowledgeBaseDocumentsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/knowledgebases/{knowledgeBaseId}/datasources/{dataSourceId}/documents");
  b.p("knowledgeBaseId", () => input.knowledgeBaseId, "{knowledgeBaseId}", false);
  b.p("dataSourceId", () => input.dataSourceId, "{dataSourceId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListKnowledgeBaseDocumentsCommand");
var se_ListKnowledgeBasesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/knowledgebases");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListKnowledgeBasesCommand");
var se_ListPromptsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/prompts");
  const query = (0, import_smithy_client.map)({
    [_pI]: [, input[_pI]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()],
    [_nT]: [, input[_nT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListPromptsCommand");
var se_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_ListTagsForResourceCommand");
var se_PrepareAgentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/agents/{agentId}");
  b.p("agentId", () => input.agentId, "{agentId}", false);
  let body;
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_PrepareAgentCommand");
var se_PrepareFlowCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/flows/{flowIdentifier}");
  b.p("flowIdentifier", () => input.flowIdentifier, "{flowIdentifier}", false);
  let body;
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_PrepareFlowCommand");
var se_StartIngestionJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/knowledgebases/{knowledgeBaseId}/datasources/{dataSourceId}/ingestionjobs");
  b.p("knowledgeBaseId", () => input.knowledgeBaseId, "{knowledgeBaseId}", false);
  b.p("dataSourceId", () => input.dataSourceId, "{dataSourceId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      description: []
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_StartIngestionJobCommand");
var se_StopIngestionJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/knowledgebases/{knowledgeBaseId}/datasources/{dataSourceId}/ingestionjobs/{ingestionJobId}/stop");
  b.p("knowledgeBaseId", () => input.knowledgeBaseId, "{knowledgeBaseId}", false);
  b.p("dataSourceId", () => input.dataSourceId, "{dataSourceId}", false);
  b.p("ingestionJobId", () => input.ingestionJobId, "{ingestionJobId}", false);
  let body;
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_StopIngestionJobCommand");
var se_TagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      tags: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "tags")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_TagResourceCommand");
var se_UntagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  const query = (0, import_smithy_client.map)({
    [_tK]: [(0, import_smithy_client.expectNonNull)(input.tagKeys, `tagKeys`) != null, () => input[_tK] || []]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_UntagResourceCommand");
var se_UpdateAgentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/agents/{agentId}");
  b.p("agentId", () => input.agentId, "{agentId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      agentCollaboration: [],
      agentName: [],
      agentResourceRoleArn: [],
      customOrchestration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "customOrchestration"),
      customerEncryptionKeyArn: [],
      description: [],
      foundationModel: [],
      guardrailConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "guardrailConfiguration"),
      idleSessionTTLInSeconds: [],
      instruction: [],
      memoryConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "memoryConfiguration"),
      orchestrationType: [],
      promptOverrideConfiguration: /* @__PURE__ */ __name((_) => se_PromptOverrideConfiguration(_, context), "promptOverrideConfiguration")
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateAgentCommand");
var se_UpdateAgentActionGroupCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/agents/{agentId}/agentversions/{agentVersion}/actiongroups/{actionGroupId}");
  b.p("agentId", () => input.agentId, "{agentId}", false);
  b.p("agentVersion", () => input.agentVersion, "{agentVersion}", false);
  b.p("actionGroupId", () => input.actionGroupId, "{actionGroupId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      actionGroupExecutor: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "actionGroupExecutor"),
      actionGroupName: [],
      actionGroupState: [],
      apiSchema: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "apiSchema"),
      description: [],
      functionSchema: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "functionSchema"),
      parentActionGroupSignature: [],
      parentActionGroupSignatureParams: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "parentActionGroupSignatureParams")
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateAgentActionGroupCommand");
var se_UpdateAgentAliasCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/agents/{agentId}/agentaliases/{agentAliasId}");
  b.p("agentId", () => input.agentId, "{agentId}", false);
  b.p("agentAliasId", () => input.agentAliasId, "{agentAliasId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      agentAliasName: [],
      aliasInvocationState: [],
      description: [],
      routingConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "routingConfiguration")
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateAgentAliasCommand");
var se_UpdateAgentCollaboratorCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/agents/{agentId}/agentversions/{agentVersion}/agentcollaborators/{collaboratorId}");
  b.p("agentId", () => input.agentId, "{agentId}", false);
  b.p("agentVersion", () => input.agentVersion, "{agentVersion}", false);
  b.p("collaboratorId", () => input.collaboratorId, "{collaboratorId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      agentDescriptor: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "agentDescriptor"),
      collaborationInstruction: [],
      collaboratorName: [],
      relayConversationHistory: []
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateAgentCollaboratorCommand");
var se_UpdateAgentKnowledgeBaseCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/agents/{agentId}/agentversions/{agentVersion}/knowledgebases/{knowledgeBaseId}");
  b.p("agentId", () => input.agentId, "{agentId}", false);
  b.p("agentVersion", () => input.agentVersion, "{agentVersion}", false);
  b.p("knowledgeBaseId", () => input.knowledgeBaseId, "{knowledgeBaseId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      description: [],
      knowledgeBaseState: []
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateAgentKnowledgeBaseCommand");
var se_UpdateDataSourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/knowledgebases/{knowledgeBaseId}/datasources/{dataSourceId}");
  b.p("knowledgeBaseId", () => input.knowledgeBaseId, "{knowledgeBaseId}", false);
  b.p("dataSourceId", () => input.dataSourceId, "{dataSourceId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      dataDeletionPolicy: [],
      dataSourceConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "dataSourceConfiguration"),
      description: [],
      name: [],
      serverSideEncryptionConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "serverSideEncryptionConfiguration"),
      vectorIngestionConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "vectorIngestionConfiguration")
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateDataSourceCommand");
var se_UpdateFlowCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/flows/{flowIdentifier}");
  b.p("flowIdentifier", () => input.flowIdentifier, "{flowIdentifier}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      customerEncryptionKeyArn: [],
      definition: /* @__PURE__ */ __name((_) => se_FlowDefinition(_, context), "definition"),
      description: [],
      executionRoleArn: [],
      name: []
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateFlowCommand");
var se_UpdateFlowAliasCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/flows/{flowIdentifier}/aliases/{aliasIdentifier}");
  b.p("flowIdentifier", () => input.flowIdentifier, "{flowIdentifier}", false);
  b.p("aliasIdentifier", () => input.aliasIdentifier, "{aliasIdentifier}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      concurrencyConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "concurrencyConfiguration"),
      description: [],
      name: [],
      routingConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "routingConfiguration")
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateFlowAliasCommand");
var se_UpdateKnowledgeBaseCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/knowledgebases/{knowledgeBaseId}");
  b.p("knowledgeBaseId", () => input.knowledgeBaseId, "{knowledgeBaseId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      description: [],
      knowledgeBaseConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "knowledgeBaseConfiguration"),
      name: [],
      roleArn: [],
      storageConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "storageConfiguration")
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateKnowledgeBaseCommand");
var se_UpdatePromptCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/prompts/{promptIdentifier}");
  b.p("promptIdentifier", () => input.promptIdentifier, "{promptIdentifier}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      customerEncryptionKeyArn: [],
      defaultVariant: [],
      description: [],
      name: [],
      variants: /* @__PURE__ */ __name((_) => se_PromptVariantList(_, context), "variants")
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdatePromptCommand");
var se_ValidateFlowDefinitionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/flows/validate-definition");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      definition: /* @__PURE__ */ __name((_) => se_FlowDefinition(_, context), "definition")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ValidateFlowDefinitionCommand");
var de_AssociateAgentCollaboratorCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    agentCollaborator: /* @__PURE__ */ __name((_) => de_AgentCollaborator(_, context), "agentCollaborator")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_AssociateAgentCollaboratorCommand");
var de_AssociateAgentKnowledgeBaseCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    agentKnowledgeBase: /* @__PURE__ */ __name((_) => de_AgentKnowledgeBase(_, context), "agentKnowledgeBase")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_AssociateAgentKnowledgeBaseCommand");
var de_CreateAgentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    agent: /* @__PURE__ */ __name((_) => de_Agent(_, context), "agent")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateAgentCommand");
var de_CreateAgentActionGroupCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    agentActionGroup: /* @__PURE__ */ __name((_) => de_AgentActionGroup(_, context), "agentActionGroup")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateAgentActionGroupCommand");
var de_CreateAgentAliasCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    agentAlias: /* @__PURE__ */ __name((_) => de_AgentAlias(_, context), "agentAlias")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateAgentAliasCommand");
var de_CreateDataSourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    dataSource: /* @__PURE__ */ __name((_) => de_DataSource(_, context), "dataSource")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateDataSourceCommand");
var de_CreateFlowCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "createdAt"),
    customerEncryptionKeyArn: import_smithy_client.expectString,
    definition: /* @__PURE__ */ __name((_) => de_FlowDefinition(_, context), "definition"),
    description: import_smithy_client.expectString,
    executionRoleArn: import_smithy_client.expectString,
    id: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    status: import_smithy_client.expectString,
    updatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "updatedAt"),
    version: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateFlowCommand");
var de_CreateFlowAliasCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    concurrencyConfiguration: import_smithy_client._json,
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "createdAt"),
    description: import_smithy_client.expectString,
    flowId: import_smithy_client.expectString,
    id: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    routingConfiguration: import_smithy_client._json,
    updatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "updatedAt")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateFlowAliasCommand");
var de_CreateFlowVersionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "createdAt"),
    customerEncryptionKeyArn: import_smithy_client.expectString,
    definition: /* @__PURE__ */ __name((_) => de_FlowDefinition(_, context), "definition"),
    description: import_smithy_client.expectString,
    executionRoleArn: import_smithy_client.expectString,
    id: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    status: import_smithy_client.expectString,
    version: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateFlowVersionCommand");
var de_CreateKnowledgeBaseCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    knowledgeBase: /* @__PURE__ */ __name((_) => de_KnowledgeBase(_, context), "knowledgeBase")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateKnowledgeBaseCommand");
var de_CreatePromptCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "createdAt"),
    customerEncryptionKeyArn: import_smithy_client.expectString,
    defaultVariant: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    id: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    updatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "updatedAt"),
    variants: /* @__PURE__ */ __name((_) => de_PromptVariantList(_, context), "variants"),
    version: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreatePromptCommand");
var de_CreatePromptVersionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "createdAt"),
    customerEncryptionKeyArn: import_smithy_client.expectString,
    defaultVariant: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    id: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    updatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "updatedAt"),
    variants: /* @__PURE__ */ __name((_) => de_PromptVariantList(_, context), "variants"),
    version: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreatePromptVersionCommand");
var de_DeleteAgentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    agentId: import_smithy_client.expectString,
    agentStatus: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DeleteAgentCommand");
var de_DeleteAgentActionGroupCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteAgentActionGroupCommand");
var de_DeleteAgentAliasCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    agentAliasId: import_smithy_client.expectString,
    agentAliasStatus: import_smithy_client.expectString,
    agentId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DeleteAgentAliasCommand");
var de_DeleteAgentVersionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    agentId: import_smithy_client.expectString,
    agentStatus: import_smithy_client.expectString,
    agentVersion: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DeleteAgentVersionCommand");
var de_DeleteDataSourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    dataSourceId: import_smithy_client.expectString,
    knowledgeBaseId: import_smithy_client.expectString,
    status: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DeleteDataSourceCommand");
var de_DeleteFlowCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    id: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DeleteFlowCommand");
var de_DeleteFlowAliasCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    flowId: import_smithy_client.expectString,
    id: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DeleteFlowAliasCommand");
var de_DeleteFlowVersionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    id: import_smithy_client.expectString,
    version: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DeleteFlowVersionCommand");
var de_DeleteKnowledgeBaseCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    knowledgeBaseId: import_smithy_client.expectString,
    status: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DeleteKnowledgeBaseCommand");
var de_DeleteKnowledgeBaseDocumentsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    documentDetails: /* @__PURE__ */ __name((_) => de_KnowledgeBaseDocumentDetails(_, context), "documentDetails")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DeleteKnowledgeBaseDocumentsCommand");
var de_DeletePromptCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    id: import_smithy_client.expectString,
    version: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DeletePromptCommand");
var de_DisassociateAgentCollaboratorCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DisassociateAgentCollaboratorCommand");
var de_DisassociateAgentKnowledgeBaseCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DisassociateAgentKnowledgeBaseCommand");
var de_GetAgentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    agent: /* @__PURE__ */ __name((_) => de_Agent(_, context), "agent")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetAgentCommand");
var de_GetAgentActionGroupCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    agentActionGroup: /* @__PURE__ */ __name((_) => de_AgentActionGroup(_, context), "agentActionGroup")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetAgentActionGroupCommand");
var de_GetAgentAliasCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    agentAlias: /* @__PURE__ */ __name((_) => de_AgentAlias(_, context), "agentAlias")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetAgentAliasCommand");
var de_GetAgentCollaboratorCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    agentCollaborator: /* @__PURE__ */ __name((_) => de_AgentCollaborator(_, context), "agentCollaborator")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetAgentCollaboratorCommand");
var de_GetAgentKnowledgeBaseCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    agentKnowledgeBase: /* @__PURE__ */ __name((_) => de_AgentKnowledgeBase(_, context), "agentKnowledgeBase")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetAgentKnowledgeBaseCommand");
var de_GetAgentVersionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    agentVersion: /* @__PURE__ */ __name((_) => de_AgentVersion(_, context), "agentVersion")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetAgentVersionCommand");
var de_GetDataSourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    dataSource: /* @__PURE__ */ __name((_) => de_DataSource(_, context), "dataSource")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetDataSourceCommand");
var de_GetFlowCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "createdAt"),
    customerEncryptionKeyArn: import_smithy_client.expectString,
    definition: /* @__PURE__ */ __name((_) => de_FlowDefinition(_, context), "definition"),
    description: import_smithy_client.expectString,
    executionRoleArn: import_smithy_client.expectString,
    id: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    status: import_smithy_client.expectString,
    updatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "updatedAt"),
    validations: import_smithy_client._json,
    version: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetFlowCommand");
var de_GetFlowAliasCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    concurrencyConfiguration: import_smithy_client._json,
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "createdAt"),
    description: import_smithy_client.expectString,
    flowId: import_smithy_client.expectString,
    id: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    routingConfiguration: import_smithy_client._json,
    updatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "updatedAt")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetFlowAliasCommand");
var de_GetFlowVersionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "createdAt"),
    customerEncryptionKeyArn: import_smithy_client.expectString,
    definition: /* @__PURE__ */ __name((_) => de_FlowDefinition(_, context), "definition"),
    description: import_smithy_client.expectString,
    executionRoleArn: import_smithy_client.expectString,
    id: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    status: import_smithy_client.expectString,
    version: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetFlowVersionCommand");
var de_GetIngestionJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ingestionJob: /* @__PURE__ */ __name((_) => de_IngestionJob(_, context), "ingestionJob")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetIngestionJobCommand");
var de_GetKnowledgeBaseCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    knowledgeBase: /* @__PURE__ */ __name((_) => de_KnowledgeBase(_, context), "knowledgeBase")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetKnowledgeBaseCommand");
var de_GetKnowledgeBaseDocumentsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    documentDetails: /* @__PURE__ */ __name((_) => de_KnowledgeBaseDocumentDetails(_, context), "documentDetails")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetKnowledgeBaseDocumentsCommand");
var de_GetPromptCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "createdAt"),
    customerEncryptionKeyArn: import_smithy_client.expectString,
    defaultVariant: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    id: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    updatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "updatedAt"),
    variants: /* @__PURE__ */ __name((_) => de_PromptVariantList(_, context), "variants"),
    version: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetPromptCommand");
var de_IngestKnowledgeBaseDocumentsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    documentDetails: /* @__PURE__ */ __name((_) => de_KnowledgeBaseDocumentDetails(_, context), "documentDetails")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_IngestKnowledgeBaseDocumentsCommand");
var de_ListAgentActionGroupsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    actionGroupSummaries: /* @__PURE__ */ __name((_) => de_ActionGroupSummaries(_, context), "actionGroupSummaries"),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListAgentActionGroupsCommand");
var de_ListAgentAliasesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    agentAliasSummaries: /* @__PURE__ */ __name((_) => de_AgentAliasSummaries(_, context), "agentAliasSummaries"),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListAgentAliasesCommand");
var de_ListAgentCollaboratorsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    agentCollaboratorSummaries: /* @__PURE__ */ __name((_) => de_AgentCollaboratorSummaries(_, context), "agentCollaboratorSummaries"),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListAgentCollaboratorsCommand");
var de_ListAgentKnowledgeBasesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    agentKnowledgeBaseSummaries: /* @__PURE__ */ __name((_) => de_AgentKnowledgeBaseSummaries(_, context), "agentKnowledgeBaseSummaries"),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListAgentKnowledgeBasesCommand");
var de_ListAgentsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    agentSummaries: /* @__PURE__ */ __name((_) => de_AgentSummaries(_, context), "agentSummaries"),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListAgentsCommand");
var de_ListAgentVersionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    agentVersionSummaries: /* @__PURE__ */ __name((_) => de_AgentVersionSummaries(_, context), "agentVersionSummaries"),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListAgentVersionsCommand");
var de_ListDataSourcesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    dataSourceSummaries: /* @__PURE__ */ __name((_) => de_DataSourceSummaries(_, context), "dataSourceSummaries"),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListDataSourcesCommand");
var de_ListFlowAliasesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    flowAliasSummaries: /* @__PURE__ */ __name((_) => de_FlowAliasSummaries(_, context), "flowAliasSummaries"),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListFlowAliasesCommand");
var de_ListFlowsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    flowSummaries: /* @__PURE__ */ __name((_) => de_FlowSummaries(_, context), "flowSummaries"),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListFlowsCommand");
var de_ListFlowVersionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    flowVersionSummaries: /* @__PURE__ */ __name((_) => de_FlowVersionSummaries(_, context), "flowVersionSummaries"),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListFlowVersionsCommand");
var de_ListIngestionJobsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ingestionJobSummaries: /* @__PURE__ */ __name((_) => de_IngestionJobSummaries(_, context), "ingestionJobSummaries"),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListIngestionJobsCommand");
var de_ListKnowledgeBaseDocumentsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    documentDetails: /* @__PURE__ */ __name((_) => de_KnowledgeBaseDocumentDetails(_, context), "documentDetails"),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListKnowledgeBaseDocumentsCommand");
var de_ListKnowledgeBasesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    knowledgeBaseSummaries: /* @__PURE__ */ __name((_) => de_KnowledgeBaseSummaries(_, context), "knowledgeBaseSummaries"),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListKnowledgeBasesCommand");
var de_ListPromptsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    promptSummaries: /* @__PURE__ */ __name((_) => de_PromptSummaries(_, context), "promptSummaries")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListPromptsCommand");
var de_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListTagsForResourceCommand");
var de_PrepareAgentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    agentId: import_smithy_client.expectString,
    agentStatus: import_smithy_client.expectString,
    agentVersion: import_smithy_client.expectString,
    preparedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "preparedAt")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_PrepareAgentCommand");
var de_PrepareFlowCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    id: import_smithy_client.expectString,
    status: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_PrepareFlowCommand");
var de_StartIngestionJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ingestionJob: /* @__PURE__ */ __name((_) => de_IngestionJob(_, context), "ingestionJob")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_StartIngestionJobCommand");
var de_StopIngestionJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ingestionJob: /* @__PURE__ */ __name((_) => de_IngestionJob(_, context), "ingestionJob")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_StopIngestionJobCommand");
var de_TagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_TagResourceCommand");
var de_UntagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UntagResourceCommand");
var de_UpdateAgentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    agent: /* @__PURE__ */ __name((_) => de_Agent(_, context), "agent")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateAgentCommand");
var de_UpdateAgentActionGroupCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    agentActionGroup: /* @__PURE__ */ __name((_) => de_AgentActionGroup(_, context), "agentActionGroup")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateAgentActionGroupCommand");
var de_UpdateAgentAliasCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    agentAlias: /* @__PURE__ */ __name((_) => de_AgentAlias(_, context), "agentAlias")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateAgentAliasCommand");
var de_UpdateAgentCollaboratorCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    agentCollaborator: /* @__PURE__ */ __name((_) => de_AgentCollaborator(_, context), "agentCollaborator")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateAgentCollaboratorCommand");
var de_UpdateAgentKnowledgeBaseCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    agentKnowledgeBase: /* @__PURE__ */ __name((_) => de_AgentKnowledgeBase(_, context), "agentKnowledgeBase")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateAgentKnowledgeBaseCommand");
var de_UpdateDataSourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    dataSource: /* @__PURE__ */ __name((_) => de_DataSource(_, context), "dataSource")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateDataSourceCommand");
var de_UpdateFlowCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "createdAt"),
    customerEncryptionKeyArn: import_smithy_client.expectString,
    definition: /* @__PURE__ */ __name((_) => de_FlowDefinition(_, context), "definition"),
    description: import_smithy_client.expectString,
    executionRoleArn: import_smithy_client.expectString,
    id: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    status: import_smithy_client.expectString,
    updatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "updatedAt"),
    version: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateFlowCommand");
var de_UpdateFlowAliasCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    concurrencyConfiguration: import_smithy_client._json,
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "createdAt"),
    description: import_smithy_client.expectString,
    flowId: import_smithy_client.expectString,
    id: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    routingConfiguration: import_smithy_client._json,
    updatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "updatedAt")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateFlowAliasCommand");
var de_UpdateKnowledgeBaseCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    knowledgeBase: /* @__PURE__ */ __name((_) => de_KnowledgeBase(_, context), "knowledgeBase")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateKnowledgeBaseCommand");
var de_UpdatePromptCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "createdAt"),
    customerEncryptionKeyArn: import_smithy_client.expectString,
    defaultVariant: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    id: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    updatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "updatedAt"),
    variants: /* @__PURE__ */ __name((_) => de_PromptVariantList(_, context), "variants"),
    version: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdatePromptCommand");
var de_ValidateFlowDefinitionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    validations: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ValidateFlowDefinitionCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await (0, import_core2.parseJsonErrorBody)(output.body, context)
  };
  const errorCode = (0, import_core2.loadRestJsonErrorCode)(output, parsedOutput.body);
  switch (errorCode) {
    case "AccessDeniedException":
    case "com.amazonaws.bedrockagent#AccessDeniedException":
      throw await de_AccessDeniedExceptionRes(parsedOutput, context);
    case "ConflictException":
    case "com.amazonaws.bedrockagent#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "InternalServerException":
    case "com.amazonaws.bedrockagent#InternalServerException":
      throw await de_InternalServerExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.bedrockagent#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    case "ServiceQuotaExceededException":
    case "com.amazonaws.bedrockagent#ServiceQuotaExceededException":
      throw await de_ServiceQuotaExceededExceptionRes(parsedOutput, context);
    case "ThrottlingException":
    case "com.amazonaws.bedrockagent#ThrottlingException":
      throw await de_ThrottlingExceptionRes(parsedOutput, context);
    case "ValidationException":
    case "com.amazonaws.bedrockagent#ValidationException":
      throw await de_ValidationExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var throwDefaultError = (0, import_smithy_client.withBaseException)(BedrockAgentServiceException);
var de_AccessDeniedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new AccessDeniedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_AccessDeniedExceptionRes");
var de_ConflictExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ConflictException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ConflictExceptionRes");
var de_InternalServerExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new InternalServerException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InternalServerExceptionRes");
var de_ResourceNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourceNotFoundExceptionRes");
var de_ServiceQuotaExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ServiceQuotaExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ServiceQuotaExceededExceptionRes");
var de_ThrottlingExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ThrottlingException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ThrottlingExceptionRes");
var de_ValidationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    fieldList: import_smithy_client._json,
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ValidationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ValidationExceptionRes");
var se_AdditionalModelRequestFields = /* @__PURE__ */ __name((input, context) => {
  return Object.entries(input).reduce((acc, [key, value]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = se_AdditionalModelRequestFieldsValue(value, context);
    return acc;
  }, {});
}, "se_AdditionalModelRequestFields");
var se_AdditionalModelRequestFieldsValue = /* @__PURE__ */ __name((input, context) => {
  return input;
}, "se_AdditionalModelRequestFieldsValue");
var se_ByteContentDoc = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    data: context.base64Encoder,
    mimeType: []
  });
}, "se_ByteContentDoc");
var se_ChatPromptTemplateConfiguration = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    inputVariables: import_smithy_client._json,
    messages: import_smithy_client._json,
    system: import_smithy_client._json,
    toolConfiguration: /* @__PURE__ */ __name((_) => se_ToolConfiguration(_, context), "toolConfiguration")
  });
}, "se_ChatPromptTemplateConfiguration");
var se_CustomContent = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    customDocumentIdentifier: import_smithy_client._json,
    inlineContent: /* @__PURE__ */ __name((_) => se_InlineContent(_, context), "inlineContent"),
    s3Location: import_smithy_client._json,
    sourceType: []
  });
}, "se_CustomContent");
var se_DocumentContent = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    custom: /* @__PURE__ */ __name((_) => se_CustomContent(_, context), "custom"),
    dataSourceType: [],
    s3: import_smithy_client._json
  });
}, "se_DocumentContent");
var se_DocumentMetadata = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    inlineAttributes: /* @__PURE__ */ __name((_) => se_MetadataAttributes(_, context), "inlineAttributes"),
    s3Location: import_smithy_client._json,
    type: []
  });
}, "se_DocumentMetadata");
var se_FlowDefinition = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    connections: import_smithy_client._json,
    nodes: /* @__PURE__ */ __name((_) => se_FlowNodes(_, context), "nodes")
  });
}, "se_FlowDefinition");
var se_FlowNode = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    configuration: /* @__PURE__ */ __name((_) => se_FlowNodeConfiguration(_, context), "configuration"),
    inputs: import_smithy_client._json,
    name: [],
    outputs: import_smithy_client._json,
    type: []
  });
}, "se_FlowNode");
var se_FlowNodeConfiguration = /* @__PURE__ */ __name((input, context) => {
  return FlowNodeConfiguration.visit(input, {
    agent: /* @__PURE__ */ __name((value) => ({ agent: (0, import_smithy_client._json)(value) }), "agent"),
    collector: /* @__PURE__ */ __name((value) => ({ collector: (0, import_smithy_client._json)(value) }), "collector"),
    condition: /* @__PURE__ */ __name((value) => ({ condition: (0, import_smithy_client._json)(value) }), "condition"),
    inlineCode: /* @__PURE__ */ __name((value) => ({ inlineCode: (0, import_smithy_client._json)(value) }), "inlineCode"),
    input: /* @__PURE__ */ __name((value) => ({ input: (0, import_smithy_client._json)(value) }), "input"),
    iterator: /* @__PURE__ */ __name((value) => ({ iterator: (0, import_smithy_client._json)(value) }), "iterator"),
    knowledgeBase: /* @__PURE__ */ __name((value) => ({ knowledgeBase: se_KnowledgeBaseFlowNodeConfiguration(value, context) }), "knowledgeBase"),
    lambdaFunction: /* @__PURE__ */ __name((value) => ({ lambdaFunction: (0, import_smithy_client._json)(value) }), "lambdaFunction"),
    lex: /* @__PURE__ */ __name((value) => ({ lex: (0, import_smithy_client._json)(value) }), "lex"),
    loop: /* @__PURE__ */ __name((value) => ({ loop: se_LoopFlowNodeConfiguration(value, context) }), "loop"),
    loopController: /* @__PURE__ */ __name((value) => ({ loopController: (0, import_smithy_client._json)(value) }), "loopController"),
    loopInput: /* @__PURE__ */ __name((value) => ({ loopInput: (0, import_smithy_client._json)(value) }), "loopInput"),
    output: /* @__PURE__ */ __name((value) => ({ output: (0, import_smithy_client._json)(value) }), "output"),
    prompt: /* @__PURE__ */ __name((value) => ({ prompt: se_PromptFlowNodeConfiguration(value, context) }), "prompt"),
    retrieval: /* @__PURE__ */ __name((value) => ({ retrieval: (0, import_smithy_client._json)(value) }), "retrieval"),
    storage: /* @__PURE__ */ __name((value) => ({ storage: (0, import_smithy_client._json)(value) }), "storage"),
    _: /* @__PURE__ */ __name((name, value) => ({ [name]: value }), "_")
  });
}, "se_FlowNodeConfiguration");
var se_FlowNodes = /* @__PURE__ */ __name((input, context) => {
  return input.filter((e) => e != null).map((entry) => {
    return se_FlowNode(entry, context);
  });
}, "se_FlowNodes");
var se_InferenceConfiguration = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    maximumLength: [],
    stopSequences: import_smithy_client._json,
    temperature: import_smithy_client.serializeFloat,
    topK: [],
    topP: import_smithy_client.serializeFloat
  });
}, "se_InferenceConfiguration");
var se_InlineContent = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    byteContent: /* @__PURE__ */ __name((_) => se_ByteContentDoc(_, context), "byteContent"),
    textContent: import_smithy_client._json,
    type: []
  });
}, "se_InlineContent");
var se_KnowledgeBaseDocument = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    content: /* @__PURE__ */ __name((_) => se_DocumentContent(_, context), "content"),
    metadata: /* @__PURE__ */ __name((_) => se_DocumentMetadata(_, context), "metadata")
  });
}, "se_KnowledgeBaseDocument");
var se_KnowledgeBaseDocuments = /* @__PURE__ */ __name((input, context) => {
  return input.filter((e) => e != null).map((entry) => {
    return se_KnowledgeBaseDocument(entry, context);
  });
}, "se_KnowledgeBaseDocuments");
var se_KnowledgeBaseFlowNodeConfiguration = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    guardrailConfiguration: import_smithy_client._json,
    inferenceConfiguration: /* @__PURE__ */ __name((_) => se_PromptInferenceConfiguration(_, context), "inferenceConfiguration"),
    knowledgeBaseId: [],
    modelId: [],
    numberOfResults: [],
    orchestrationConfiguration: /* @__PURE__ */ __name((_) => se_KnowledgeBaseOrchestrationConfiguration(_, context), "orchestrationConfiguration"),
    promptTemplate: import_smithy_client._json,
    rerankingConfiguration: /* @__PURE__ */ __name((_) => se_VectorSearchRerankingConfiguration(_, context), "rerankingConfiguration")
  });
}, "se_KnowledgeBaseFlowNodeConfiguration");
var se_KnowledgeBaseOrchestrationConfiguration = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    additionalModelRequestFields: /* @__PURE__ */ __name((_) => se_AdditionalModelRequestFields(_, context), "additionalModelRequestFields"),
    inferenceConfig: /* @__PURE__ */ __name((_) => se_PromptInferenceConfiguration(_, context), "inferenceConfig"),
    performanceConfig: import_smithy_client._json,
    promptTemplate: import_smithy_client._json
  });
}, "se_KnowledgeBaseOrchestrationConfiguration");
var se_LoopFlowNodeConfiguration = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    definition: /* @__PURE__ */ __name((_) => se_FlowDefinition(_, context), "definition")
  });
}, "se_LoopFlowNodeConfiguration");
var se_MetadataAttribute = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    key: [],
    value: /* @__PURE__ */ __name((_) => se_MetadataAttributeValue(_, context), "value")
  });
}, "se_MetadataAttribute");
var se_MetadataAttributes = /* @__PURE__ */ __name((input, context) => {
  return input.filter((e) => e != null).map((entry) => {
    return se_MetadataAttribute(entry, context);
  });
}, "se_MetadataAttributes");
var se_MetadataAttributeValue = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    booleanValue: [],
    numberValue: import_smithy_client.serializeFloat,
    stringListValue: import_smithy_client._json,
    stringValue: [],
    type: []
  });
}, "se_MetadataAttributeValue");
var se_PromptConfiguration = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    additionalModelRequestFields: /* @__PURE__ */ __name((_) => se_Document(_, context), "additionalModelRequestFields"),
    basePromptTemplate: [],
    foundationModel: [],
    inferenceConfiguration: /* @__PURE__ */ __name((_) => se_InferenceConfiguration(_, context), "inferenceConfiguration"),
    parserMode: [],
    promptCreationMode: [],
    promptState: [],
    promptType: []
  });
}, "se_PromptConfiguration");
var se_PromptConfigurations = /* @__PURE__ */ __name((input, context) => {
  return input.filter((e) => e != null).map((entry) => {
    return se_PromptConfiguration(entry, context);
  });
}, "se_PromptConfigurations");
var se_PromptFlowNodeConfiguration = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    guardrailConfiguration: import_smithy_client._json,
    sourceConfiguration: /* @__PURE__ */ __name((_) => se_PromptFlowNodeSourceConfiguration(_, context), "sourceConfiguration")
  });
}, "se_PromptFlowNodeConfiguration");
var se_PromptFlowNodeInlineConfiguration = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    additionalModelRequestFields: /* @__PURE__ */ __name((_) => se_Document(_, context), "additionalModelRequestFields"),
    inferenceConfiguration: /* @__PURE__ */ __name((_) => se_PromptInferenceConfiguration(_, context), "inferenceConfiguration"),
    modelId: [],
    templateConfiguration: /* @__PURE__ */ __name((_) => se_PromptTemplateConfiguration(_, context), "templateConfiguration"),
    templateType: []
  });
}, "se_PromptFlowNodeInlineConfiguration");
var se_PromptFlowNodeSourceConfiguration = /* @__PURE__ */ __name((input, context) => {
  return PromptFlowNodeSourceConfiguration.visit(input, {
    inline: /* @__PURE__ */ __name((value) => ({ inline: se_PromptFlowNodeInlineConfiguration(value, context) }), "inline"),
    resource: /* @__PURE__ */ __name((value) => ({ resource: (0, import_smithy_client._json)(value) }), "resource"),
    _: /* @__PURE__ */ __name((name, value) => ({ [name]: value }), "_")
  });
}, "se_PromptFlowNodeSourceConfiguration");
var se_PromptInferenceConfiguration = /* @__PURE__ */ __name((input, context) => {
  return PromptInferenceConfiguration.visit(input, {
    text: /* @__PURE__ */ __name((value) => ({ text: se_PromptModelInferenceConfiguration(value, context) }), "text"),
    _: /* @__PURE__ */ __name((name, value) => ({ [name]: value }), "_")
  });
}, "se_PromptInferenceConfiguration");
var se_PromptModelInferenceConfiguration = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    maxTokens: [],
    stopSequences: import_smithy_client._json,
    temperature: import_smithy_client.serializeFloat,
    topP: import_smithy_client.serializeFloat
  });
}, "se_PromptModelInferenceConfiguration");
var se_PromptOverrideConfiguration = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    overrideLambda: [],
    promptConfigurations: /* @__PURE__ */ __name((_) => se_PromptConfigurations(_, context), "promptConfigurations")
  });
}, "se_PromptOverrideConfiguration");
var se_PromptTemplateConfiguration = /* @__PURE__ */ __name((input, context) => {
  return PromptTemplateConfiguration.visit(input, {
    chat: /* @__PURE__ */ __name((value) => ({ chat: se_ChatPromptTemplateConfiguration(value, context) }), "chat"),
    text: /* @__PURE__ */ __name((value) => ({ text: (0, import_smithy_client._json)(value) }), "text"),
    _: /* @__PURE__ */ __name((name, value) => ({ [name]: value }), "_")
  });
}, "se_PromptTemplateConfiguration");
var se_PromptVariant = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    additionalModelRequestFields: /* @__PURE__ */ __name((_) => se_Document(_, context), "additionalModelRequestFields"),
    genAiResource: import_smithy_client._json,
    inferenceConfiguration: /* @__PURE__ */ __name((_) => se_PromptInferenceConfiguration(_, context), "inferenceConfiguration"),
    metadata: import_smithy_client._json,
    modelId: [],
    name: [],
    templateConfiguration: /* @__PURE__ */ __name((_) => se_PromptTemplateConfiguration(_, context), "templateConfiguration"),
    templateType: []
  });
}, "se_PromptVariant");
var se_PromptVariantList = /* @__PURE__ */ __name((input, context) => {
  return input.filter((e) => e != null).map((entry) => {
    return se_PromptVariant(entry, context);
  });
}, "se_PromptVariantList");
var se_Tool = /* @__PURE__ */ __name((input, context) => {
  return Tool.visit(input, {
    cachePoint: /* @__PURE__ */ __name((value) => ({ cachePoint: (0, import_smithy_client._json)(value) }), "cachePoint"),
    toolSpec: /* @__PURE__ */ __name((value) => ({ toolSpec: se_ToolSpecification(value, context) }), "toolSpec"),
    _: /* @__PURE__ */ __name((name, value) => ({ [name]: value }), "_")
  });
}, "se_Tool");
var se_ToolConfiguration = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    toolChoice: import_smithy_client._json,
    tools: /* @__PURE__ */ __name((_) => se_Tools(_, context), "tools")
  });
}, "se_ToolConfiguration");
var se_ToolInputSchema = /* @__PURE__ */ __name((input, context) => {
  return ToolInputSchema.visit(input, {
    json: /* @__PURE__ */ __name((value) => ({ json: se_Document(value, context) }), "json"),
    _: /* @__PURE__ */ __name((name, value) => ({ [name]: value }), "_")
  });
}, "se_ToolInputSchema");
var se_Tools = /* @__PURE__ */ __name((input, context) => {
  return input.filter((e) => e != null).map((entry) => {
    return se_Tool(entry, context);
  });
}, "se_Tools");
var se_ToolSpecification = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    description: [],
    inputSchema: /* @__PURE__ */ __name((_) => se_ToolInputSchema(_, context), "inputSchema"),
    name: []
  });
}, "se_ToolSpecification");
var se_VectorSearchBedrockRerankingConfiguration = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    metadataConfiguration: import_smithy_client._json,
    modelConfiguration: /* @__PURE__ */ __name((_) => se_VectorSearchBedrockRerankingModelConfiguration(_, context), "modelConfiguration"),
    numberOfRerankedResults: []
  });
}, "se_VectorSearchBedrockRerankingConfiguration");
var se_VectorSearchBedrockRerankingModelConfiguration = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    additionalModelRequestFields: /* @__PURE__ */ __name((_) => se_AdditionalModelRequestFields(_, context), "additionalModelRequestFields"),
    modelArn: []
  });
}, "se_VectorSearchBedrockRerankingModelConfiguration");
var se_VectorSearchRerankingConfiguration = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    bedrockRerankingConfiguration: /* @__PURE__ */ __name((_) => se_VectorSearchBedrockRerankingConfiguration(_, context), "bedrockRerankingConfiguration"),
    type: []
  });
}, "se_VectorSearchRerankingConfiguration");
var se_Document = /* @__PURE__ */ __name((input, context) => {
  return input;
}, "se_Document");
var de_ActionGroupSummaries = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ActionGroupSummary(entry, context);
  });
  return retVal;
}, "de_ActionGroupSummaries");
var de_ActionGroupSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    actionGroupId: import_smithy_client.expectString,
    actionGroupName: import_smithy_client.expectString,
    actionGroupState: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    updatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "updatedAt")
  });
}, "de_ActionGroupSummary");
var de_AdditionalModelRequestFields = /* @__PURE__ */ __name((output, context) => {
  return Object.entries(output).reduce((acc, [key, value]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = de_AdditionalModelRequestFieldsValue(value, context);
    return acc;
  }, {});
}, "de_AdditionalModelRequestFields");
var de_AdditionalModelRequestFieldsValue = /* @__PURE__ */ __name((output, context) => {
  return output;
}, "de_AdditionalModelRequestFieldsValue");
var de_Agent = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    agentArn: import_smithy_client.expectString,
    agentCollaboration: import_smithy_client.expectString,
    agentId: import_smithy_client.expectString,
    agentName: import_smithy_client.expectString,
    agentResourceRoleArn: import_smithy_client.expectString,
    agentStatus: import_smithy_client.expectString,
    agentVersion: import_smithy_client.expectString,
    clientToken: import_smithy_client.expectString,
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "createdAt"),
    customOrchestration: import_smithy_client._json,
    customerEncryptionKeyArn: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    failureReasons: import_smithy_client._json,
    foundationModel: import_smithy_client.expectString,
    guardrailConfiguration: import_smithy_client._json,
    idleSessionTTLInSeconds: import_smithy_client.expectInt32,
    instruction: import_smithy_client.expectString,
    memoryConfiguration: import_smithy_client._json,
    orchestrationType: import_smithy_client.expectString,
    preparedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "preparedAt"),
    promptOverrideConfiguration: /* @__PURE__ */ __name((_) => de_PromptOverrideConfiguration(_, context), "promptOverrideConfiguration"),
    recommendedActions: import_smithy_client._json,
    updatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "updatedAt")
  });
}, "de_Agent");
var de_AgentActionGroup = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    actionGroupExecutor: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)((0, import_core2.awsExpectUnion)(_)), "actionGroupExecutor"),
    actionGroupId: import_smithy_client.expectString,
    actionGroupName: import_smithy_client.expectString,
    actionGroupState: import_smithy_client.expectString,
    agentId: import_smithy_client.expectString,
    agentVersion: import_smithy_client.expectString,
    apiSchema: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)((0, import_core2.awsExpectUnion)(_)), "apiSchema"),
    clientToken: import_smithy_client.expectString,
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "createdAt"),
    description: import_smithy_client.expectString,
    functionSchema: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)((0, import_core2.awsExpectUnion)(_)), "functionSchema"),
    parentActionGroupSignatureParams: import_smithy_client._json,
    parentActionSignature: import_smithy_client.expectString,
    updatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "updatedAt")
  });
}, "de_AgentActionGroup");
var de_AgentAlias = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    agentAliasArn: import_smithy_client.expectString,
    agentAliasHistoryEvents: /* @__PURE__ */ __name((_) => de_AgentAliasHistoryEvents(_, context), "agentAliasHistoryEvents"),
    agentAliasId: import_smithy_client.expectString,
    agentAliasName: import_smithy_client.expectString,
    agentAliasStatus: import_smithy_client.expectString,
    agentId: import_smithy_client.expectString,
    aliasInvocationState: import_smithy_client.expectString,
    clientToken: import_smithy_client.expectString,
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "createdAt"),
    description: import_smithy_client.expectString,
    failureReasons: import_smithy_client._json,
    routingConfiguration: import_smithy_client._json,
    updatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "updatedAt")
  });
}, "de_AgentAlias");
var de_AgentAliasHistoryEvent = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    endDate: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "endDate"),
    routingConfiguration: import_smithy_client._json,
    startDate: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "startDate")
  });
}, "de_AgentAliasHistoryEvent");
var de_AgentAliasHistoryEvents = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_AgentAliasHistoryEvent(entry, context);
  });
  return retVal;
}, "de_AgentAliasHistoryEvents");
var de_AgentAliasSummaries = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_AgentAliasSummary(entry, context);
  });
  return retVal;
}, "de_AgentAliasSummaries");
var de_AgentAliasSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    agentAliasId: import_smithy_client.expectString,
    agentAliasName: import_smithy_client.expectString,
    agentAliasStatus: import_smithy_client.expectString,
    aliasInvocationState: import_smithy_client.expectString,
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "createdAt"),
    description: import_smithy_client.expectString,
    routingConfiguration: import_smithy_client._json,
    updatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "updatedAt")
  });
}, "de_AgentAliasSummary");
var de_AgentCollaborator = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    agentDescriptor: import_smithy_client._json,
    agentId: import_smithy_client.expectString,
    agentVersion: import_smithy_client.expectString,
    clientToken: import_smithy_client.expectString,
    collaborationInstruction: import_smithy_client.expectString,
    collaboratorId: import_smithy_client.expectString,
    collaboratorName: import_smithy_client.expectString,
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "createdAt"),
    lastUpdatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "lastUpdatedAt"),
    relayConversationHistory: import_smithy_client.expectString
  });
}, "de_AgentCollaborator");
var de_AgentCollaboratorSummaries = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_AgentCollaboratorSummary(entry, context);
  });
  return retVal;
}, "de_AgentCollaboratorSummaries");
var de_AgentCollaboratorSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    agentDescriptor: import_smithy_client._json,
    agentId: import_smithy_client.expectString,
    agentVersion: import_smithy_client.expectString,
    collaborationInstruction: import_smithy_client.expectString,
    collaboratorId: import_smithy_client.expectString,
    collaboratorName: import_smithy_client.expectString,
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "createdAt"),
    lastUpdatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "lastUpdatedAt"),
    relayConversationHistory: import_smithy_client.expectString
  });
}, "de_AgentCollaboratorSummary");
var de_AgentKnowledgeBase = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    agentId: import_smithy_client.expectString,
    agentVersion: import_smithy_client.expectString,
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "createdAt"),
    description: import_smithy_client.expectString,
    knowledgeBaseId: import_smithy_client.expectString,
    knowledgeBaseState: import_smithy_client.expectString,
    updatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "updatedAt")
  });
}, "de_AgentKnowledgeBase");
var de_AgentKnowledgeBaseSummaries = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_AgentKnowledgeBaseSummary(entry, context);
  });
  return retVal;
}, "de_AgentKnowledgeBaseSummaries");
var de_AgentKnowledgeBaseSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    description: import_smithy_client.expectString,
    knowledgeBaseId: import_smithy_client.expectString,
    knowledgeBaseState: import_smithy_client.expectString,
    updatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "updatedAt")
  });
}, "de_AgentKnowledgeBaseSummary");
var de_AgentSummaries = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_AgentSummary(entry, context);
  });
  return retVal;
}, "de_AgentSummaries");
var de_AgentSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    agentId: import_smithy_client.expectString,
    agentName: import_smithy_client.expectString,
    agentStatus: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    guardrailConfiguration: import_smithy_client._json,
    latestAgentVersion: import_smithy_client.expectString,
    updatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "updatedAt")
  });
}, "de_AgentSummary");
var de_AgentVersion = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    agentArn: import_smithy_client.expectString,
    agentCollaboration: import_smithy_client.expectString,
    agentId: import_smithy_client.expectString,
    agentName: import_smithy_client.expectString,
    agentResourceRoleArn: import_smithy_client.expectString,
    agentStatus: import_smithy_client.expectString,
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "createdAt"),
    customerEncryptionKeyArn: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    failureReasons: import_smithy_client._json,
    foundationModel: import_smithy_client.expectString,
    guardrailConfiguration: import_smithy_client._json,
    idleSessionTTLInSeconds: import_smithy_client.expectInt32,
    instruction: import_smithy_client.expectString,
    memoryConfiguration: import_smithy_client._json,
    promptOverrideConfiguration: /* @__PURE__ */ __name((_) => de_PromptOverrideConfiguration(_, context), "promptOverrideConfiguration"),
    recommendedActions: import_smithy_client._json,
    updatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "updatedAt"),
    version: import_smithy_client.expectString
  });
}, "de_AgentVersion");
var de_AgentVersionSummaries = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_AgentVersionSummary(entry, context);
  });
  return retVal;
}, "de_AgentVersionSummaries");
var de_AgentVersionSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    agentName: import_smithy_client.expectString,
    agentStatus: import_smithy_client.expectString,
    agentVersion: import_smithy_client.expectString,
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "createdAt"),
    description: import_smithy_client.expectString,
    guardrailConfiguration: import_smithy_client._json,
    updatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "updatedAt")
  });
}, "de_AgentVersionSummary");
var de_ChatPromptTemplateConfiguration = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    inputVariables: import_smithy_client._json,
    messages: import_smithy_client._json,
    system: import_smithy_client._json,
    toolConfiguration: /* @__PURE__ */ __name((_) => de_ToolConfiguration(_, context), "toolConfiguration")
  });
}, "de_ChatPromptTemplateConfiguration");
var de_DataSource = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "createdAt"),
    dataDeletionPolicy: import_smithy_client.expectString,
    dataSourceConfiguration: import_smithy_client._json,
    dataSourceId: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    failureReasons: import_smithy_client._json,
    knowledgeBaseId: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    serverSideEncryptionConfiguration: import_smithy_client._json,
    status: import_smithy_client.expectString,
    updatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "updatedAt"),
    vectorIngestionConfiguration: import_smithy_client._json
  });
}, "de_DataSource");
var de_DataSourceSummaries = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_DataSourceSummary(entry, context);
  });
  return retVal;
}, "de_DataSourceSummaries");
var de_DataSourceSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    dataSourceId: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    knowledgeBaseId: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    status: import_smithy_client.expectString,
    updatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "updatedAt")
  });
}, "de_DataSourceSummary");
var de_FlowAliasSummaries = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_FlowAliasSummary(entry, context);
  });
  return retVal;
}, "de_FlowAliasSummaries");
var de_FlowAliasSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    concurrencyConfiguration: import_smithy_client._json,
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "createdAt"),
    description: import_smithy_client.expectString,
    flowId: import_smithy_client.expectString,
    id: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    routingConfiguration: import_smithy_client._json,
    updatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "updatedAt")
  });
}, "de_FlowAliasSummary");
var de_FlowDefinition = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    connections: import_smithy_client._json,
    nodes: /* @__PURE__ */ __name((_) => de_FlowNodes(_, context), "nodes")
  });
}, "de_FlowDefinition");
var de_FlowNode = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    configuration: /* @__PURE__ */ __name((_) => de_FlowNodeConfiguration((0, import_core2.awsExpectUnion)(_), context), "configuration"),
    inputs: import_smithy_client._json,
    name: import_smithy_client.expectString,
    outputs: import_smithy_client._json,
    type: import_smithy_client.expectString
  });
}, "de_FlowNode");
var de_FlowNodeConfiguration = /* @__PURE__ */ __name((output, context) => {
  if (output.agent != null) {
    return {
      agent: (0, import_smithy_client._json)(output.agent)
    };
  }
  if (output.collector != null) {
    return {
      collector: (0, import_smithy_client._json)(output.collector)
    };
  }
  if (output.condition != null) {
    return {
      condition: (0, import_smithy_client._json)(output.condition)
    };
  }
  if (output.inlineCode != null) {
    return {
      inlineCode: (0, import_smithy_client._json)(output.inlineCode)
    };
  }
  if (output.input != null) {
    return {
      input: (0, import_smithy_client._json)(output.input)
    };
  }
  if (output.iterator != null) {
    return {
      iterator: (0, import_smithy_client._json)(output.iterator)
    };
  }
  if (output.knowledgeBase != null) {
    return {
      knowledgeBase: de_KnowledgeBaseFlowNodeConfiguration(output.knowledgeBase, context)
    };
  }
  if (output.lambdaFunction != null) {
    return {
      lambdaFunction: (0, import_smithy_client._json)(output.lambdaFunction)
    };
  }
  if (output.lex != null) {
    return {
      lex: (0, import_smithy_client._json)(output.lex)
    };
  }
  if (output.loop != null) {
    return {
      loop: de_LoopFlowNodeConfiguration(output.loop, context)
    };
  }
  if (output.loopController != null) {
    return {
      loopController: (0, import_smithy_client._json)(output.loopController)
    };
  }
  if (output.loopInput != null) {
    return {
      loopInput: (0, import_smithy_client._json)(output.loopInput)
    };
  }
  if (output.output != null) {
    return {
      output: (0, import_smithy_client._json)(output.output)
    };
  }
  if (output.prompt != null) {
    return {
      prompt: de_PromptFlowNodeConfiguration(output.prompt, context)
    };
  }
  if (output.retrieval != null) {
    return {
      retrieval: (0, import_smithy_client._json)(output.retrieval)
    };
  }
  if (output.storage != null) {
    return {
      storage: (0, import_smithy_client._json)(output.storage)
    };
  }
  return { $unknown: Object.entries(output)[0] };
}, "de_FlowNodeConfiguration");
var de_FlowNodes = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_FlowNode(entry, context);
  });
  return retVal;
}, "de_FlowNodes");
var de_FlowSummaries = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_FlowSummary(entry, context);
  });
  return retVal;
}, "de_FlowSummaries");
var de_FlowSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "createdAt"),
    description: import_smithy_client.expectString,
    id: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    status: import_smithy_client.expectString,
    updatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "updatedAt"),
    version: import_smithy_client.expectString
  });
}, "de_FlowSummary");
var de_FlowVersionSummaries = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_FlowVersionSummary(entry, context);
  });
  return retVal;
}, "de_FlowVersionSummaries");
var de_FlowVersionSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "createdAt"),
    id: import_smithy_client.expectString,
    status: import_smithy_client.expectString,
    version: import_smithy_client.expectString
  });
}, "de_FlowVersionSummary");
var de_InferenceConfiguration = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    maximumLength: import_smithy_client.expectInt32,
    stopSequences: import_smithy_client._json,
    temperature: import_smithy_client.limitedParseFloat32,
    topK: import_smithy_client.expectInt32,
    topP: import_smithy_client.limitedParseFloat32
  });
}, "de_InferenceConfiguration");
var de_IngestionJob = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    dataSourceId: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    failureReasons: import_smithy_client._json,
    ingestionJobId: import_smithy_client.expectString,
    knowledgeBaseId: import_smithy_client.expectString,
    startedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "startedAt"),
    statistics: import_smithy_client._json,
    status: import_smithy_client.expectString,
    updatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "updatedAt")
  });
}, "de_IngestionJob");
var de_IngestionJobSummaries = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_IngestionJobSummary(entry, context);
  });
  return retVal;
}, "de_IngestionJobSummaries");
var de_IngestionJobSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    dataSourceId: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    ingestionJobId: import_smithy_client.expectString,
    knowledgeBaseId: import_smithy_client.expectString,
    startedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "startedAt"),
    statistics: import_smithy_client._json,
    status: import_smithy_client.expectString,
    updatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "updatedAt")
  });
}, "de_IngestionJobSummary");
var de_KnowledgeBase = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "createdAt"),
    description: import_smithy_client.expectString,
    failureReasons: import_smithy_client._json,
    knowledgeBaseArn: import_smithy_client.expectString,
    knowledgeBaseConfiguration: import_smithy_client._json,
    knowledgeBaseId: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    roleArn: import_smithy_client.expectString,
    status: import_smithy_client.expectString,
    storageConfiguration: import_smithy_client._json,
    updatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "updatedAt")
  });
}, "de_KnowledgeBase");
var de_KnowledgeBaseDocumentDetail = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    dataSourceId: import_smithy_client.expectString,
    identifier: import_smithy_client._json,
    knowledgeBaseId: import_smithy_client.expectString,
    status: import_smithy_client.expectString,
    statusReason: import_smithy_client.expectString,
    updatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "updatedAt")
  });
}, "de_KnowledgeBaseDocumentDetail");
var de_KnowledgeBaseDocumentDetails = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_KnowledgeBaseDocumentDetail(entry, context);
  });
  return retVal;
}, "de_KnowledgeBaseDocumentDetails");
var de_KnowledgeBaseFlowNodeConfiguration = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    guardrailConfiguration: import_smithy_client._json,
    inferenceConfiguration: /* @__PURE__ */ __name((_) => de_PromptInferenceConfiguration((0, import_core2.awsExpectUnion)(_), context), "inferenceConfiguration"),
    knowledgeBaseId: import_smithy_client.expectString,
    modelId: import_smithy_client.expectString,
    numberOfResults: import_smithy_client.expectInt32,
    orchestrationConfiguration: /* @__PURE__ */ __name((_) => de_KnowledgeBaseOrchestrationConfiguration(_, context), "orchestrationConfiguration"),
    promptTemplate: import_smithy_client._json,
    rerankingConfiguration: /* @__PURE__ */ __name((_) => de_VectorSearchRerankingConfiguration(_, context), "rerankingConfiguration")
  });
}, "de_KnowledgeBaseFlowNodeConfiguration");
var de_KnowledgeBaseOrchestrationConfiguration = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    additionalModelRequestFields: /* @__PURE__ */ __name((_) => de_AdditionalModelRequestFields(_, context), "additionalModelRequestFields"),
    inferenceConfig: /* @__PURE__ */ __name((_) => de_PromptInferenceConfiguration((0, import_core2.awsExpectUnion)(_), context), "inferenceConfig"),
    performanceConfig: import_smithy_client._json,
    promptTemplate: import_smithy_client._json
  });
}, "de_KnowledgeBaseOrchestrationConfiguration");
var de_KnowledgeBaseSummaries = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_KnowledgeBaseSummary(entry, context);
  });
  return retVal;
}, "de_KnowledgeBaseSummaries");
var de_KnowledgeBaseSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    description: import_smithy_client.expectString,
    knowledgeBaseId: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    status: import_smithy_client.expectString,
    updatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "updatedAt")
  });
}, "de_KnowledgeBaseSummary");
var de_LoopFlowNodeConfiguration = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    definition: /* @__PURE__ */ __name((_) => de_FlowDefinition(_, context), "definition")
  });
}, "de_LoopFlowNodeConfiguration");
var de_PromptConfiguration = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    additionalModelRequestFields: /* @__PURE__ */ __name((_) => de_Document(_, context), "additionalModelRequestFields"),
    basePromptTemplate: import_smithy_client.expectString,
    foundationModel: import_smithy_client.expectString,
    inferenceConfiguration: /* @__PURE__ */ __name((_) => de_InferenceConfiguration(_, context), "inferenceConfiguration"),
    parserMode: import_smithy_client.expectString,
    promptCreationMode: import_smithy_client.expectString,
    promptState: import_smithy_client.expectString,
    promptType: import_smithy_client.expectString
  });
}, "de_PromptConfiguration");
var de_PromptConfigurations = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_PromptConfiguration(entry, context);
  });
  return retVal;
}, "de_PromptConfigurations");
var de_PromptFlowNodeConfiguration = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    guardrailConfiguration: import_smithy_client._json,
    sourceConfiguration: /* @__PURE__ */ __name((_) => de_PromptFlowNodeSourceConfiguration((0, import_core2.awsExpectUnion)(_), context), "sourceConfiguration")
  });
}, "de_PromptFlowNodeConfiguration");
var de_PromptFlowNodeInlineConfiguration = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    additionalModelRequestFields: /* @__PURE__ */ __name((_) => de_Document(_, context), "additionalModelRequestFields"),
    inferenceConfiguration: /* @__PURE__ */ __name((_) => de_PromptInferenceConfiguration((0, import_core2.awsExpectUnion)(_), context), "inferenceConfiguration"),
    modelId: import_smithy_client.expectString,
    templateConfiguration: /* @__PURE__ */ __name((_) => de_PromptTemplateConfiguration((0, import_core2.awsExpectUnion)(_), context), "templateConfiguration"),
    templateType: import_smithy_client.expectString
  });
}, "de_PromptFlowNodeInlineConfiguration");
var de_PromptFlowNodeSourceConfiguration = /* @__PURE__ */ __name((output, context) => {
  if (output.inline != null) {
    return {
      inline: de_PromptFlowNodeInlineConfiguration(output.inline, context)
    };
  }
  if (output.resource != null) {
    return {
      resource: (0, import_smithy_client._json)(output.resource)
    };
  }
  return { $unknown: Object.entries(output)[0] };
}, "de_PromptFlowNodeSourceConfiguration");
var de_PromptInferenceConfiguration = /* @__PURE__ */ __name((output, context) => {
  if (output.text != null) {
    return {
      text: de_PromptModelInferenceConfiguration(output.text, context)
    };
  }
  return { $unknown: Object.entries(output)[0] };
}, "de_PromptInferenceConfiguration");
var de_PromptModelInferenceConfiguration = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    maxTokens: import_smithy_client.expectInt32,
    stopSequences: import_smithy_client._json,
    temperature: import_smithy_client.limitedParseFloat32,
    topP: import_smithy_client.limitedParseFloat32
  });
}, "de_PromptModelInferenceConfiguration");
var de_PromptOverrideConfiguration = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    overrideLambda: import_smithy_client.expectString,
    promptConfigurations: /* @__PURE__ */ __name((_) => de_PromptConfigurations(_, context), "promptConfigurations")
  });
}, "de_PromptOverrideConfiguration");
var de_PromptSummaries = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_PromptSummary(entry, context);
  });
  return retVal;
}, "de_PromptSummaries");
var de_PromptSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "createdAt"),
    description: import_smithy_client.expectString,
    id: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    updatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "updatedAt"),
    version: import_smithy_client.expectString
  });
}, "de_PromptSummary");
var de_PromptTemplateConfiguration = /* @__PURE__ */ __name((output, context) => {
  if (output.chat != null) {
    return {
      chat: de_ChatPromptTemplateConfiguration(output.chat, context)
    };
  }
  if (output.text != null) {
    return {
      text: (0, import_smithy_client._json)(output.text)
    };
  }
  return { $unknown: Object.entries(output)[0] };
}, "de_PromptTemplateConfiguration");
var de_PromptVariant = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    additionalModelRequestFields: /* @__PURE__ */ __name((_) => de_Document(_, context), "additionalModelRequestFields"),
    genAiResource: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)((0, import_core2.awsExpectUnion)(_)), "genAiResource"),
    inferenceConfiguration: /* @__PURE__ */ __name((_) => de_PromptInferenceConfiguration((0, import_core2.awsExpectUnion)(_), context), "inferenceConfiguration"),
    metadata: import_smithy_client._json,
    modelId: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    templateConfiguration: /* @__PURE__ */ __name((_) => de_PromptTemplateConfiguration((0, import_core2.awsExpectUnion)(_), context), "templateConfiguration"),
    templateType: import_smithy_client.expectString
  });
}, "de_PromptVariant");
var de_PromptVariantList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_PromptVariant(entry, context);
  });
  return retVal;
}, "de_PromptVariantList");
var de_Tool = /* @__PURE__ */ __name((output, context) => {
  if (output.cachePoint != null) {
    return {
      cachePoint: (0, import_smithy_client._json)(output.cachePoint)
    };
  }
  if (output.toolSpec != null) {
    return {
      toolSpec: de_ToolSpecification(output.toolSpec, context)
    };
  }
  return { $unknown: Object.entries(output)[0] };
}, "de_Tool");
var de_ToolConfiguration = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    toolChoice: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)((0, import_core2.awsExpectUnion)(_)), "toolChoice"),
    tools: /* @__PURE__ */ __name((_) => de_Tools(_, context), "tools")
  });
}, "de_ToolConfiguration");
var de_ToolInputSchema = /* @__PURE__ */ __name((output, context) => {
  if (output.json != null) {
    return {
      json: de_Document(output.json, context)
    };
  }
  return { $unknown: Object.entries(output)[0] };
}, "de_ToolInputSchema");
var de_Tools = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Tool((0, import_core2.awsExpectUnion)(entry), context);
  });
  return retVal;
}, "de_Tools");
var de_ToolSpecification = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    description: import_smithy_client.expectString,
    inputSchema: /* @__PURE__ */ __name((_) => de_ToolInputSchema((0, import_core2.awsExpectUnion)(_), context), "inputSchema"),
    name: import_smithy_client.expectString
  });
}, "de_ToolSpecification");
var de_VectorSearchBedrockRerankingConfiguration = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    metadataConfiguration: import_smithy_client._json,
    modelConfiguration: /* @__PURE__ */ __name((_) => de_VectorSearchBedrockRerankingModelConfiguration(_, context), "modelConfiguration"),
    numberOfRerankedResults: import_smithy_client.expectInt32
  });
}, "de_VectorSearchBedrockRerankingConfiguration");
var de_VectorSearchBedrockRerankingModelConfiguration = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    additionalModelRequestFields: /* @__PURE__ */ __name((_) => de_AdditionalModelRequestFields(_, context), "additionalModelRequestFields"),
    modelArn: import_smithy_client.expectString
  });
}, "de_VectorSearchBedrockRerankingModelConfiguration");
var de_VectorSearchRerankingConfiguration = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    bedrockRerankingConfiguration: /* @__PURE__ */ __name((_) => de_VectorSearchBedrockRerankingConfiguration(_, context), "bedrockRerankingConfiguration"),
    type: import_smithy_client.expectString
  });
}, "de_VectorSearchRerankingConfiguration");
var de_Document = /* @__PURE__ */ __name((output, context) => {
  return output;
}, "de_Document");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var _mR = "maxResults";
var _nT = "nextToken";
var _pI = "promptIdentifier";
var _pV = "promptVersion";
var _sRIUC = "skipResourceInUseCheck";
var _tK = "tagKeys";

// src/commands/AssociateAgentCollaboratorCommand.ts
var AssociateAgentCollaboratorCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "AssociateAgentCollaborator", {}).n("BedrockAgentClient", "AssociateAgentCollaboratorCommand").f(AssociateAgentCollaboratorRequestFilterSensitiveLog, AssociateAgentCollaboratorResponseFilterSensitiveLog).ser(se_AssociateAgentCollaboratorCommand).de(de_AssociateAgentCollaboratorCommand).build() {
  static {
    __name(this, "AssociateAgentCollaboratorCommand");
  }
};

// src/commands/AssociateAgentKnowledgeBaseCommand.ts



var AssociateAgentKnowledgeBaseCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "AssociateAgentKnowledgeBase", {}).n("BedrockAgentClient", "AssociateAgentKnowledgeBaseCommand").f(void 0, void 0).ser(se_AssociateAgentKnowledgeBaseCommand).de(de_AssociateAgentKnowledgeBaseCommand).build() {
  static {
    __name(this, "AssociateAgentKnowledgeBaseCommand");
  }
};

// src/commands/CreateAgentActionGroupCommand.ts



var CreateAgentActionGroupCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "CreateAgentActionGroup", {}).n("BedrockAgentClient", "CreateAgentActionGroupCommand").f(CreateAgentActionGroupRequestFilterSensitiveLog, CreateAgentActionGroupResponseFilterSensitiveLog).ser(se_CreateAgentActionGroupCommand).de(de_CreateAgentActionGroupCommand).build() {
  static {
    __name(this, "CreateAgentActionGroupCommand");
  }
};

// src/commands/CreateAgentAliasCommand.ts



var CreateAgentAliasCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "CreateAgentAlias", {}).n("BedrockAgentClient", "CreateAgentAliasCommand").f(void 0, void 0).ser(se_CreateAgentAliasCommand).de(de_CreateAgentAliasCommand).build() {
  static {
    __name(this, "CreateAgentAliasCommand");
  }
};

// src/commands/CreateAgentCommand.ts



var CreateAgentCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "CreateAgent", {}).n("BedrockAgentClient", "CreateAgentCommand").f(CreateAgentRequestFilterSensitiveLog, CreateAgentResponseFilterSensitiveLog).ser(se_CreateAgentCommand).de(de_CreateAgentCommand).build() {
  static {
    __name(this, "CreateAgentCommand");
  }
};

// src/commands/CreateDataSourceCommand.ts



var CreateDataSourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "CreateDataSource", {}).n("BedrockAgentClient", "CreateDataSourceCommand").f(CreateDataSourceRequestFilterSensitiveLog, CreateDataSourceResponseFilterSensitiveLog).ser(se_CreateDataSourceCommand).de(de_CreateDataSourceCommand).build() {
  static {
    __name(this, "CreateDataSourceCommand");
  }
};

// src/commands/CreateFlowAliasCommand.ts



var CreateFlowAliasCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "CreateFlowAlias", {}).n("BedrockAgentClient", "CreateFlowAliasCommand").f(void 0, void 0).ser(se_CreateFlowAliasCommand).de(de_CreateFlowAliasCommand).build() {
  static {
    __name(this, "CreateFlowAliasCommand");
  }
};

// src/commands/CreateFlowCommand.ts



var CreateFlowCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "CreateFlow", {}).n("BedrockAgentClient", "CreateFlowCommand").f(CreateFlowRequestFilterSensitiveLog, CreateFlowResponseFilterSensitiveLog).ser(se_CreateFlowCommand).de(de_CreateFlowCommand).build() {
  static {
    __name(this, "CreateFlowCommand");
  }
};

// src/commands/CreateFlowVersionCommand.ts



var CreateFlowVersionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "CreateFlowVersion", {}).n("BedrockAgentClient", "CreateFlowVersionCommand").f(void 0, CreateFlowVersionResponseFilterSensitiveLog).ser(se_CreateFlowVersionCommand).de(de_CreateFlowVersionCommand).build() {
  static {
    __name(this, "CreateFlowVersionCommand");
  }
};

// src/commands/CreateKnowledgeBaseCommand.ts



var CreateKnowledgeBaseCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "CreateKnowledgeBase", {}).n("BedrockAgentClient", "CreateKnowledgeBaseCommand").f(CreateKnowledgeBaseRequestFilterSensitiveLog, CreateKnowledgeBaseResponseFilterSensitiveLog).ser(se_CreateKnowledgeBaseCommand).de(de_CreateKnowledgeBaseCommand).build() {
  static {
    __name(this, "CreateKnowledgeBaseCommand");
  }
};

// src/commands/CreatePromptCommand.ts



var CreatePromptCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "CreatePrompt", {}).n("BedrockAgentClient", "CreatePromptCommand").f(CreatePromptRequestFilterSensitiveLog, CreatePromptResponseFilterSensitiveLog).ser(se_CreatePromptCommand).de(de_CreatePromptCommand).build() {
  static {
    __name(this, "CreatePromptCommand");
  }
};

// src/commands/CreatePromptVersionCommand.ts



var CreatePromptVersionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "CreatePromptVersion", {}).n("BedrockAgentClient", "CreatePromptVersionCommand").f(void 0, CreatePromptVersionResponseFilterSensitiveLog).ser(se_CreatePromptVersionCommand).de(de_CreatePromptVersionCommand).build() {
  static {
    __name(this, "CreatePromptVersionCommand");
  }
};

// src/commands/DeleteAgentActionGroupCommand.ts



var DeleteAgentActionGroupCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "DeleteAgentActionGroup", {}).n("BedrockAgentClient", "DeleteAgentActionGroupCommand").f(void 0, void 0).ser(se_DeleteAgentActionGroupCommand).de(de_DeleteAgentActionGroupCommand).build() {
  static {
    __name(this, "DeleteAgentActionGroupCommand");
  }
};

// src/commands/DeleteAgentAliasCommand.ts



var DeleteAgentAliasCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "DeleteAgentAlias", {}).n("BedrockAgentClient", "DeleteAgentAliasCommand").f(void 0, void 0).ser(se_DeleteAgentAliasCommand).de(de_DeleteAgentAliasCommand).build() {
  static {
    __name(this, "DeleteAgentAliasCommand");
  }
};

// src/commands/DeleteAgentCommand.ts



var DeleteAgentCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "DeleteAgent", {}).n("BedrockAgentClient", "DeleteAgentCommand").f(void 0, void 0).ser(se_DeleteAgentCommand).de(de_DeleteAgentCommand).build() {
  static {
    __name(this, "DeleteAgentCommand");
  }
};

// src/commands/DeleteAgentVersionCommand.ts



var DeleteAgentVersionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "DeleteAgentVersion", {}).n("BedrockAgentClient", "DeleteAgentVersionCommand").f(void 0, void 0).ser(se_DeleteAgentVersionCommand).de(de_DeleteAgentVersionCommand).build() {
  static {
    __name(this, "DeleteAgentVersionCommand");
  }
};

// src/commands/DeleteDataSourceCommand.ts



var DeleteDataSourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "DeleteDataSource", {}).n("BedrockAgentClient", "DeleteDataSourceCommand").f(void 0, void 0).ser(se_DeleteDataSourceCommand).de(de_DeleteDataSourceCommand).build() {
  static {
    __name(this, "DeleteDataSourceCommand");
  }
};

// src/commands/DeleteFlowAliasCommand.ts



var DeleteFlowAliasCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "DeleteFlowAlias", {}).n("BedrockAgentClient", "DeleteFlowAliasCommand").f(void 0, void 0).ser(se_DeleteFlowAliasCommand).de(de_DeleteFlowAliasCommand).build() {
  static {
    __name(this, "DeleteFlowAliasCommand");
  }
};

// src/commands/DeleteFlowCommand.ts



var DeleteFlowCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "DeleteFlow", {}).n("BedrockAgentClient", "DeleteFlowCommand").f(void 0, void 0).ser(se_DeleteFlowCommand).de(de_DeleteFlowCommand).build() {
  static {
    __name(this, "DeleteFlowCommand");
  }
};

// src/commands/DeleteFlowVersionCommand.ts



var DeleteFlowVersionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "DeleteFlowVersion", {}).n("BedrockAgentClient", "DeleteFlowVersionCommand").f(void 0, void 0).ser(se_DeleteFlowVersionCommand).de(de_DeleteFlowVersionCommand).build() {
  static {
    __name(this, "DeleteFlowVersionCommand");
  }
};

// src/commands/DeleteKnowledgeBaseCommand.ts



var DeleteKnowledgeBaseCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "DeleteKnowledgeBase", {}).n("BedrockAgentClient", "DeleteKnowledgeBaseCommand").f(void 0, void 0).ser(se_DeleteKnowledgeBaseCommand).de(de_DeleteKnowledgeBaseCommand).build() {
  static {
    __name(this, "DeleteKnowledgeBaseCommand");
  }
};

// src/commands/DeleteKnowledgeBaseDocumentsCommand.ts



var DeleteKnowledgeBaseDocumentsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "DeleteKnowledgeBaseDocuments", {}).n("BedrockAgentClient", "DeleteKnowledgeBaseDocumentsCommand").f(void 0, void 0).ser(se_DeleteKnowledgeBaseDocumentsCommand).de(de_DeleteKnowledgeBaseDocumentsCommand).build() {
  static {
    __name(this, "DeleteKnowledgeBaseDocumentsCommand");
  }
};

// src/commands/DeletePromptCommand.ts



var DeletePromptCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "DeletePrompt", {}).n("BedrockAgentClient", "DeletePromptCommand").f(void 0, void 0).ser(se_DeletePromptCommand).de(de_DeletePromptCommand).build() {
  static {
    __name(this, "DeletePromptCommand");
  }
};

// src/commands/DisassociateAgentCollaboratorCommand.ts



var DisassociateAgentCollaboratorCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "DisassociateAgentCollaborator", {}).n("BedrockAgentClient", "DisassociateAgentCollaboratorCommand").f(void 0, void 0).ser(se_DisassociateAgentCollaboratorCommand).de(de_DisassociateAgentCollaboratorCommand).build() {
  static {
    __name(this, "DisassociateAgentCollaboratorCommand");
  }
};

// src/commands/DisassociateAgentKnowledgeBaseCommand.ts



var DisassociateAgentKnowledgeBaseCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "DisassociateAgentKnowledgeBase", {}).n("BedrockAgentClient", "DisassociateAgentKnowledgeBaseCommand").f(void 0, void 0).ser(se_DisassociateAgentKnowledgeBaseCommand).de(de_DisassociateAgentKnowledgeBaseCommand).build() {
  static {
    __name(this, "DisassociateAgentKnowledgeBaseCommand");
  }
};

// src/commands/GetAgentActionGroupCommand.ts



var GetAgentActionGroupCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "GetAgentActionGroup", {}).n("BedrockAgentClient", "GetAgentActionGroupCommand").f(void 0, GetAgentActionGroupResponseFilterSensitiveLog).ser(se_GetAgentActionGroupCommand).de(de_GetAgentActionGroupCommand).build() {
  static {
    __name(this, "GetAgentActionGroupCommand");
  }
};

// src/commands/GetAgentAliasCommand.ts



var GetAgentAliasCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "GetAgentAlias", {}).n("BedrockAgentClient", "GetAgentAliasCommand").f(void 0, void 0).ser(se_GetAgentAliasCommand).de(de_GetAgentAliasCommand).build() {
  static {
    __name(this, "GetAgentAliasCommand");
  }
};

// src/commands/GetAgentCollaboratorCommand.ts



var GetAgentCollaboratorCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "GetAgentCollaborator", {}).n("BedrockAgentClient", "GetAgentCollaboratorCommand").f(void 0, GetAgentCollaboratorResponseFilterSensitiveLog).ser(se_GetAgentCollaboratorCommand).de(de_GetAgentCollaboratorCommand).build() {
  static {
    __name(this, "GetAgentCollaboratorCommand");
  }
};

// src/commands/GetAgentCommand.ts



var GetAgentCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "GetAgent", {}).n("BedrockAgentClient", "GetAgentCommand").f(void 0, GetAgentResponseFilterSensitiveLog).ser(se_GetAgentCommand).de(de_GetAgentCommand).build() {
  static {
    __name(this, "GetAgentCommand");
  }
};

// src/commands/GetAgentKnowledgeBaseCommand.ts



var GetAgentKnowledgeBaseCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "GetAgentKnowledgeBase", {}).n("BedrockAgentClient", "GetAgentKnowledgeBaseCommand").f(void 0, void 0).ser(se_GetAgentKnowledgeBaseCommand).de(de_GetAgentKnowledgeBaseCommand).build() {
  static {
    __name(this, "GetAgentKnowledgeBaseCommand");
  }
};

// src/commands/GetAgentVersionCommand.ts



var GetAgentVersionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "GetAgentVersion", {}).n("BedrockAgentClient", "GetAgentVersionCommand").f(void 0, GetAgentVersionResponseFilterSensitiveLog).ser(se_GetAgentVersionCommand).de(de_GetAgentVersionCommand).build() {
  static {
    __name(this, "GetAgentVersionCommand");
  }
};

// src/commands/GetDataSourceCommand.ts



var GetDataSourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "GetDataSource", {}).n("BedrockAgentClient", "GetDataSourceCommand").f(void 0, GetDataSourceResponseFilterSensitiveLog).ser(se_GetDataSourceCommand).de(de_GetDataSourceCommand).build() {
  static {
    __name(this, "GetDataSourceCommand");
  }
};

// src/commands/GetFlowAliasCommand.ts



var GetFlowAliasCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "GetFlowAlias", {}).n("BedrockAgentClient", "GetFlowAliasCommand").f(void 0, void 0).ser(se_GetFlowAliasCommand).de(de_GetFlowAliasCommand).build() {
  static {
    __name(this, "GetFlowAliasCommand");
  }
};

// src/commands/GetFlowCommand.ts



var GetFlowCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "GetFlow", {}).n("BedrockAgentClient", "GetFlowCommand").f(void 0, GetFlowResponseFilterSensitiveLog).ser(se_GetFlowCommand).de(de_GetFlowCommand).build() {
  static {
    __name(this, "GetFlowCommand");
  }
};

// src/commands/GetFlowVersionCommand.ts



var GetFlowVersionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "GetFlowVersion", {}).n("BedrockAgentClient", "GetFlowVersionCommand").f(void 0, GetFlowVersionResponseFilterSensitiveLog).ser(se_GetFlowVersionCommand).de(de_GetFlowVersionCommand).build() {
  static {
    __name(this, "GetFlowVersionCommand");
  }
};

// src/commands/GetIngestionJobCommand.ts



var GetIngestionJobCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "GetIngestionJob", {}).n("BedrockAgentClient", "GetIngestionJobCommand").f(void 0, void 0).ser(se_GetIngestionJobCommand).de(de_GetIngestionJobCommand).build() {
  static {
    __name(this, "GetIngestionJobCommand");
  }
};

// src/commands/GetKnowledgeBaseCommand.ts



var GetKnowledgeBaseCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "GetKnowledgeBase", {}).n("BedrockAgentClient", "GetKnowledgeBaseCommand").f(void 0, GetKnowledgeBaseResponseFilterSensitiveLog).ser(se_GetKnowledgeBaseCommand).de(de_GetKnowledgeBaseCommand).build() {
  static {
    __name(this, "GetKnowledgeBaseCommand");
  }
};

// src/commands/GetKnowledgeBaseDocumentsCommand.ts



var GetKnowledgeBaseDocumentsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "GetKnowledgeBaseDocuments", {}).n("BedrockAgentClient", "GetKnowledgeBaseDocumentsCommand").f(void 0, void 0).ser(se_GetKnowledgeBaseDocumentsCommand).de(de_GetKnowledgeBaseDocumentsCommand).build() {
  static {
    __name(this, "GetKnowledgeBaseDocumentsCommand");
  }
};

// src/commands/GetPromptCommand.ts



var GetPromptCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "GetPrompt", {}).n("BedrockAgentClient", "GetPromptCommand").f(void 0, GetPromptResponseFilterSensitiveLog).ser(se_GetPromptCommand).de(de_GetPromptCommand).build() {
  static {
    __name(this, "GetPromptCommand");
  }
};

// src/commands/IngestKnowledgeBaseDocumentsCommand.ts



var IngestKnowledgeBaseDocumentsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "IngestKnowledgeBaseDocuments", {}).n("BedrockAgentClient", "IngestKnowledgeBaseDocumentsCommand").f(IngestKnowledgeBaseDocumentsRequestFilterSensitiveLog, void 0).ser(se_IngestKnowledgeBaseDocumentsCommand).de(de_IngestKnowledgeBaseDocumentsCommand).build() {
  static {
    __name(this, "IngestKnowledgeBaseDocumentsCommand");
  }
};

// src/commands/ListAgentActionGroupsCommand.ts



var ListAgentActionGroupsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "ListAgentActionGroups", {}).n("BedrockAgentClient", "ListAgentActionGroupsCommand").f(void 0, void 0).ser(se_ListAgentActionGroupsCommand).de(de_ListAgentActionGroupsCommand).build() {
  static {
    __name(this, "ListAgentActionGroupsCommand");
  }
};

// src/commands/ListAgentAliasesCommand.ts



var ListAgentAliasesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "ListAgentAliases", {}).n("BedrockAgentClient", "ListAgentAliasesCommand").f(void 0, void 0).ser(se_ListAgentAliasesCommand).de(de_ListAgentAliasesCommand).build() {
  static {
    __name(this, "ListAgentAliasesCommand");
  }
};

// src/commands/ListAgentCollaboratorsCommand.ts



var ListAgentCollaboratorsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "ListAgentCollaborators", {}).n("BedrockAgentClient", "ListAgentCollaboratorsCommand").f(void 0, ListAgentCollaboratorsResponseFilterSensitiveLog).ser(se_ListAgentCollaboratorsCommand).de(de_ListAgentCollaboratorsCommand).build() {
  static {
    __name(this, "ListAgentCollaboratorsCommand");
  }
};

// src/commands/ListAgentKnowledgeBasesCommand.ts



var ListAgentKnowledgeBasesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "ListAgentKnowledgeBases", {}).n("BedrockAgentClient", "ListAgentKnowledgeBasesCommand").f(void 0, void 0).ser(se_ListAgentKnowledgeBasesCommand).de(de_ListAgentKnowledgeBasesCommand).build() {
  static {
    __name(this, "ListAgentKnowledgeBasesCommand");
  }
};

// src/commands/ListAgentsCommand.ts



var ListAgentsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "ListAgents", {}).n("BedrockAgentClient", "ListAgentsCommand").f(void 0, void 0).ser(se_ListAgentsCommand).de(de_ListAgentsCommand).build() {
  static {
    __name(this, "ListAgentsCommand");
  }
};

// src/commands/ListAgentVersionsCommand.ts



var ListAgentVersionsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "ListAgentVersions", {}).n("BedrockAgentClient", "ListAgentVersionsCommand").f(void 0, void 0).ser(se_ListAgentVersionsCommand).de(de_ListAgentVersionsCommand).build() {
  static {
    __name(this, "ListAgentVersionsCommand");
  }
};

// src/commands/ListDataSourcesCommand.ts



var ListDataSourcesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "ListDataSources", {}).n("BedrockAgentClient", "ListDataSourcesCommand").f(void 0, void 0).ser(se_ListDataSourcesCommand).de(de_ListDataSourcesCommand).build() {
  static {
    __name(this, "ListDataSourcesCommand");
  }
};

// src/commands/ListFlowAliasesCommand.ts



var ListFlowAliasesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "ListFlowAliases", {}).n("BedrockAgentClient", "ListFlowAliasesCommand").f(void 0, void 0).ser(se_ListFlowAliasesCommand).de(de_ListFlowAliasesCommand).build() {
  static {
    __name(this, "ListFlowAliasesCommand");
  }
};

// src/commands/ListFlowsCommand.ts



var ListFlowsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "ListFlows", {}).n("BedrockAgentClient", "ListFlowsCommand").f(void 0, void 0).ser(se_ListFlowsCommand).de(de_ListFlowsCommand).build() {
  static {
    __name(this, "ListFlowsCommand");
  }
};

// src/commands/ListFlowVersionsCommand.ts



var ListFlowVersionsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "ListFlowVersions", {}).n("BedrockAgentClient", "ListFlowVersionsCommand").f(void 0, void 0).ser(se_ListFlowVersionsCommand).de(de_ListFlowVersionsCommand).build() {
  static {
    __name(this, "ListFlowVersionsCommand");
  }
};

// src/commands/ListIngestionJobsCommand.ts



var ListIngestionJobsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "ListIngestionJobs", {}).n("BedrockAgentClient", "ListIngestionJobsCommand").f(void 0, void 0).ser(se_ListIngestionJobsCommand).de(de_ListIngestionJobsCommand).build() {
  static {
    __name(this, "ListIngestionJobsCommand");
  }
};

// src/commands/ListKnowledgeBaseDocumentsCommand.ts



var ListKnowledgeBaseDocumentsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "ListKnowledgeBaseDocuments", {}).n("BedrockAgentClient", "ListKnowledgeBaseDocumentsCommand").f(void 0, void 0).ser(se_ListKnowledgeBaseDocumentsCommand).de(de_ListKnowledgeBaseDocumentsCommand).build() {
  static {
    __name(this, "ListKnowledgeBaseDocumentsCommand");
  }
};

// src/commands/ListKnowledgeBasesCommand.ts



var ListKnowledgeBasesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "ListKnowledgeBases", {}).n("BedrockAgentClient", "ListKnowledgeBasesCommand").f(void 0, void 0).ser(se_ListKnowledgeBasesCommand).de(de_ListKnowledgeBasesCommand).build() {
  static {
    __name(this, "ListKnowledgeBasesCommand");
  }
};

// src/commands/ListPromptsCommand.ts



var ListPromptsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "ListPrompts", {}).n("BedrockAgentClient", "ListPromptsCommand").f(void 0, void 0).ser(se_ListPromptsCommand).de(de_ListPromptsCommand).build() {
  static {
    __name(this, "ListPromptsCommand");
  }
};

// src/commands/ListTagsForResourceCommand.ts



var ListTagsForResourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "ListTagsForResource", {}).n("BedrockAgentClient", "ListTagsForResourceCommand").f(void 0, void 0).ser(se_ListTagsForResourceCommand).de(de_ListTagsForResourceCommand).build() {
  static {
    __name(this, "ListTagsForResourceCommand");
  }
};

// src/commands/PrepareAgentCommand.ts



var PrepareAgentCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "PrepareAgent", {}).n("BedrockAgentClient", "PrepareAgentCommand").f(void 0, void 0).ser(se_PrepareAgentCommand).de(de_PrepareAgentCommand).build() {
  static {
    __name(this, "PrepareAgentCommand");
  }
};

// src/commands/PrepareFlowCommand.ts



var PrepareFlowCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "PrepareFlow", {}).n("BedrockAgentClient", "PrepareFlowCommand").f(void 0, void 0).ser(se_PrepareFlowCommand).de(de_PrepareFlowCommand).build() {
  static {
    __name(this, "PrepareFlowCommand");
  }
};

// src/commands/StartIngestionJobCommand.ts



var StartIngestionJobCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "StartIngestionJob", {}).n("BedrockAgentClient", "StartIngestionJobCommand").f(void 0, void 0).ser(se_StartIngestionJobCommand).de(de_StartIngestionJobCommand).build() {
  static {
    __name(this, "StartIngestionJobCommand");
  }
};

// src/commands/StopIngestionJobCommand.ts



var StopIngestionJobCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "StopIngestionJob", {}).n("BedrockAgentClient", "StopIngestionJobCommand").f(void 0, void 0).ser(se_StopIngestionJobCommand).de(de_StopIngestionJobCommand).build() {
  static {
    __name(this, "StopIngestionJobCommand");
  }
};

// src/commands/TagResourceCommand.ts



var TagResourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "TagResource", {}).n("BedrockAgentClient", "TagResourceCommand").f(void 0, void 0).ser(se_TagResourceCommand).de(de_TagResourceCommand).build() {
  static {
    __name(this, "TagResourceCommand");
  }
};

// src/commands/UntagResourceCommand.ts



var UntagResourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "UntagResource", {}).n("BedrockAgentClient", "UntagResourceCommand").f(void 0, void 0).ser(se_UntagResourceCommand).de(de_UntagResourceCommand).build() {
  static {
    __name(this, "UntagResourceCommand");
  }
};

// src/commands/UpdateAgentActionGroupCommand.ts



var UpdateAgentActionGroupCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "UpdateAgentActionGroup", {}).n("BedrockAgentClient", "UpdateAgentActionGroupCommand").f(UpdateAgentActionGroupRequestFilterSensitiveLog, UpdateAgentActionGroupResponseFilterSensitiveLog).ser(se_UpdateAgentActionGroupCommand).de(de_UpdateAgentActionGroupCommand).build() {
  static {
    __name(this, "UpdateAgentActionGroupCommand");
  }
};

// src/commands/UpdateAgentAliasCommand.ts



var UpdateAgentAliasCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "UpdateAgentAlias", {}).n("BedrockAgentClient", "UpdateAgentAliasCommand").f(void 0, void 0).ser(se_UpdateAgentAliasCommand).de(de_UpdateAgentAliasCommand).build() {
  static {
    __name(this, "UpdateAgentAliasCommand");
  }
};

// src/commands/UpdateAgentCollaboratorCommand.ts



var UpdateAgentCollaboratorCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "UpdateAgentCollaborator", {}).n("BedrockAgentClient", "UpdateAgentCollaboratorCommand").f(UpdateAgentCollaboratorRequestFilterSensitiveLog, UpdateAgentCollaboratorResponseFilterSensitiveLog).ser(se_UpdateAgentCollaboratorCommand).de(de_UpdateAgentCollaboratorCommand).build() {
  static {
    __name(this, "UpdateAgentCollaboratorCommand");
  }
};

// src/commands/UpdateAgentCommand.ts



var UpdateAgentCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "UpdateAgent", {}).n("BedrockAgentClient", "UpdateAgentCommand").f(UpdateAgentRequestFilterSensitiveLog, UpdateAgentResponseFilterSensitiveLog).ser(se_UpdateAgentCommand).de(de_UpdateAgentCommand).build() {
  static {
    __name(this, "UpdateAgentCommand");
  }
};

// src/commands/UpdateAgentKnowledgeBaseCommand.ts



var UpdateAgentKnowledgeBaseCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "UpdateAgentKnowledgeBase", {}).n("BedrockAgentClient", "UpdateAgentKnowledgeBaseCommand").f(void 0, void 0).ser(se_UpdateAgentKnowledgeBaseCommand).de(de_UpdateAgentKnowledgeBaseCommand).build() {
  static {
    __name(this, "UpdateAgentKnowledgeBaseCommand");
  }
};

// src/commands/UpdateDataSourceCommand.ts



var UpdateDataSourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "UpdateDataSource", {}).n("BedrockAgentClient", "UpdateDataSourceCommand").f(UpdateDataSourceRequestFilterSensitiveLog, UpdateDataSourceResponseFilterSensitiveLog).ser(se_UpdateDataSourceCommand).de(de_UpdateDataSourceCommand).build() {
  static {
    __name(this, "UpdateDataSourceCommand");
  }
};

// src/commands/UpdateFlowAliasCommand.ts



var UpdateFlowAliasCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "UpdateFlowAlias", {}).n("BedrockAgentClient", "UpdateFlowAliasCommand").f(void 0, void 0).ser(se_UpdateFlowAliasCommand).de(de_UpdateFlowAliasCommand).build() {
  static {
    __name(this, "UpdateFlowAliasCommand");
  }
};

// src/commands/UpdateFlowCommand.ts



var UpdateFlowCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "UpdateFlow", {}).n("BedrockAgentClient", "UpdateFlowCommand").f(UpdateFlowRequestFilterSensitiveLog, UpdateFlowResponseFilterSensitiveLog).ser(se_UpdateFlowCommand).de(de_UpdateFlowCommand).build() {
  static {
    __name(this, "UpdateFlowCommand");
  }
};

// src/commands/UpdateKnowledgeBaseCommand.ts



var UpdateKnowledgeBaseCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "UpdateKnowledgeBase", {}).n("BedrockAgentClient", "UpdateKnowledgeBaseCommand").f(UpdateKnowledgeBaseRequestFilterSensitiveLog, UpdateKnowledgeBaseResponseFilterSensitiveLog).ser(se_UpdateKnowledgeBaseCommand).de(de_UpdateKnowledgeBaseCommand).build() {
  static {
    __name(this, "UpdateKnowledgeBaseCommand");
  }
};

// src/commands/UpdatePromptCommand.ts



var UpdatePromptCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "UpdatePrompt", {}).n("BedrockAgentClient", "UpdatePromptCommand").f(UpdatePromptRequestFilterSensitiveLog, UpdatePromptResponseFilterSensitiveLog).ser(se_UpdatePromptCommand).de(de_UpdatePromptCommand).build() {
  static {
    __name(this, "UpdatePromptCommand");
  }
};

// src/commands/ValidateFlowDefinitionCommand.ts



var ValidateFlowDefinitionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonBedrockAgentBuildTimeLambda", "ValidateFlowDefinition", {}).n("BedrockAgentClient", "ValidateFlowDefinitionCommand").f(ValidateFlowDefinitionRequestFilterSensitiveLog, ValidateFlowDefinitionResponseFilterSensitiveLog).ser(se_ValidateFlowDefinitionCommand).de(de_ValidateFlowDefinitionCommand).build() {
  static {
    __name(this, "ValidateFlowDefinitionCommand");
  }
};

// src/BedrockAgent.ts
var commands = {
  AssociateAgentCollaboratorCommand,
  AssociateAgentKnowledgeBaseCommand,
  CreateAgentCommand,
  CreateAgentActionGroupCommand,
  CreateAgentAliasCommand,
  CreateDataSourceCommand,
  CreateFlowCommand,
  CreateFlowAliasCommand,
  CreateFlowVersionCommand,
  CreateKnowledgeBaseCommand,
  CreatePromptCommand,
  CreatePromptVersionCommand,
  DeleteAgentCommand,
  DeleteAgentActionGroupCommand,
  DeleteAgentAliasCommand,
  DeleteAgentVersionCommand,
  DeleteDataSourceCommand,
  DeleteFlowCommand,
  DeleteFlowAliasCommand,
  DeleteFlowVersionCommand,
  DeleteKnowledgeBaseCommand,
  DeleteKnowledgeBaseDocumentsCommand,
  DeletePromptCommand,
  DisassociateAgentCollaboratorCommand,
  DisassociateAgentKnowledgeBaseCommand,
  GetAgentCommand,
  GetAgentActionGroupCommand,
  GetAgentAliasCommand,
  GetAgentCollaboratorCommand,
  GetAgentKnowledgeBaseCommand,
  GetAgentVersionCommand,
  GetDataSourceCommand,
  GetFlowCommand,
  GetFlowAliasCommand,
  GetFlowVersionCommand,
  GetIngestionJobCommand,
  GetKnowledgeBaseCommand,
  GetKnowledgeBaseDocumentsCommand,
  GetPromptCommand,
  IngestKnowledgeBaseDocumentsCommand,
  ListAgentActionGroupsCommand,
  ListAgentAliasesCommand,
  ListAgentCollaboratorsCommand,
  ListAgentKnowledgeBasesCommand,
  ListAgentsCommand,
  ListAgentVersionsCommand,
  ListDataSourcesCommand,
  ListFlowAliasesCommand,
  ListFlowsCommand,
  ListFlowVersionsCommand,
  ListIngestionJobsCommand,
  ListKnowledgeBaseDocumentsCommand,
  ListKnowledgeBasesCommand,
  ListPromptsCommand,
  ListTagsForResourceCommand,
  PrepareAgentCommand,
  PrepareFlowCommand,
  StartIngestionJobCommand,
  StopIngestionJobCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateAgentCommand,
  UpdateAgentActionGroupCommand,
  UpdateAgentAliasCommand,
  UpdateAgentCollaboratorCommand,
  UpdateAgentKnowledgeBaseCommand,
  UpdateDataSourceCommand,
  UpdateFlowCommand,
  UpdateFlowAliasCommand,
  UpdateKnowledgeBaseCommand,
  UpdatePromptCommand,
  ValidateFlowDefinitionCommand
};
var BedrockAgent = class extends BedrockAgentClient {
  static {
    __name(this, "BedrockAgent");
  }
};
(0, import_smithy_client.createAggregatedClient)(commands, BedrockAgent);

// src/pagination/ListAgentActionGroupsPaginator.ts

var paginateListAgentActionGroups = (0, import_core.createPaginator)(BedrockAgentClient, ListAgentActionGroupsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListAgentAliasesPaginator.ts

var paginateListAgentAliases = (0, import_core.createPaginator)(BedrockAgentClient, ListAgentAliasesCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListAgentCollaboratorsPaginator.ts

var paginateListAgentCollaborators = (0, import_core.createPaginator)(BedrockAgentClient, ListAgentCollaboratorsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListAgentKnowledgeBasesPaginator.ts

var paginateListAgentKnowledgeBases = (0, import_core.createPaginator)(BedrockAgentClient, ListAgentKnowledgeBasesCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListAgentVersionsPaginator.ts

var paginateListAgentVersions = (0, import_core.createPaginator)(BedrockAgentClient, ListAgentVersionsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListAgentsPaginator.ts

var paginateListAgents = (0, import_core.createPaginator)(BedrockAgentClient, ListAgentsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListDataSourcesPaginator.ts

var paginateListDataSources = (0, import_core.createPaginator)(BedrockAgentClient, ListDataSourcesCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListFlowAliasesPaginator.ts

var paginateListFlowAliases = (0, import_core.createPaginator)(BedrockAgentClient, ListFlowAliasesCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListFlowVersionsPaginator.ts

var paginateListFlowVersions = (0, import_core.createPaginator)(BedrockAgentClient, ListFlowVersionsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListFlowsPaginator.ts

var paginateListFlows = (0, import_core.createPaginator)(BedrockAgentClient, ListFlowsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListIngestionJobsPaginator.ts

var paginateListIngestionJobs = (0, import_core.createPaginator)(BedrockAgentClient, ListIngestionJobsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListKnowledgeBaseDocumentsPaginator.ts

var paginateListKnowledgeBaseDocuments = (0, import_core.createPaginator)(BedrockAgentClient, ListKnowledgeBaseDocumentsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListKnowledgeBasesPaginator.ts

var paginateListKnowledgeBases = (0, import_core.createPaginator)(BedrockAgentClient, ListKnowledgeBasesCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListPromptsPaginator.ts

var paginateListPrompts = (0, import_core.createPaginator)(BedrockAgentClient, ListPromptsCommand, "nextToken", "nextToken", "maxResults");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  BedrockAgentServiceException,
  __Client,
  BedrockAgentClient,
  BedrockAgent,
  $Command,
  AssociateAgentCollaboratorCommand,
  AssociateAgentKnowledgeBaseCommand,
  CreateAgentActionGroupCommand,
  CreateAgentAliasCommand,
  CreateAgentCommand,
  CreateDataSourceCommand,
  CreateFlowAliasCommand,
  CreateFlowCommand,
  CreateFlowVersionCommand,
  CreateKnowledgeBaseCommand,
  CreatePromptCommand,
  CreatePromptVersionCommand,
  DeleteAgentActionGroupCommand,
  DeleteAgentAliasCommand,
  DeleteAgentCommand,
  DeleteAgentVersionCommand,
  DeleteDataSourceCommand,
  DeleteFlowAliasCommand,
  DeleteFlowCommand,
  DeleteFlowVersionCommand,
  DeleteKnowledgeBaseCommand,
  DeleteKnowledgeBaseDocumentsCommand,
  DeletePromptCommand,
  DisassociateAgentCollaboratorCommand,
  DisassociateAgentKnowledgeBaseCommand,
  GetAgentActionGroupCommand,
  GetAgentAliasCommand,
  GetAgentCollaboratorCommand,
  GetAgentCommand,
  GetAgentKnowledgeBaseCommand,
  GetAgentVersionCommand,
  GetDataSourceCommand,
  GetFlowAliasCommand,
  GetFlowCommand,
  GetFlowVersionCommand,
  GetIngestionJobCommand,
  GetKnowledgeBaseCommand,
  GetKnowledgeBaseDocumentsCommand,
  GetPromptCommand,
  IngestKnowledgeBaseDocumentsCommand,
  ListAgentActionGroupsCommand,
  ListAgentAliasesCommand,
  ListAgentCollaboratorsCommand,
  ListAgentKnowledgeBasesCommand,
  ListAgentVersionsCommand,
  ListAgentsCommand,
  ListDataSourcesCommand,
  ListFlowAliasesCommand,
  ListFlowVersionsCommand,
  ListFlowsCommand,
  ListIngestionJobsCommand,
  ListKnowledgeBaseDocumentsCommand,
  ListKnowledgeBasesCommand,
  ListPromptsCommand,
  ListTagsForResourceCommand,
  PrepareAgentCommand,
  PrepareFlowCommand,
  StartIngestionJobCommand,
  StopIngestionJobCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateAgentActionGroupCommand,
  UpdateAgentAliasCommand,
  UpdateAgentCollaboratorCommand,
  UpdateAgentCommand,
  UpdateAgentKnowledgeBaseCommand,
  UpdateDataSourceCommand,
  UpdateFlowAliasCommand,
  UpdateFlowCommand,
  UpdateKnowledgeBaseCommand,
  UpdatePromptCommand,
  ValidateFlowDefinitionCommand,
  paginateListAgentActionGroups,
  paginateListAgentAliases,
  paginateListAgentCollaborators,
  paginateListAgentKnowledgeBases,
  paginateListAgentVersions,
  paginateListAgents,
  paginateListDataSources,
  paginateListFlowAliases,
  paginateListFlowVersions,
  paginateListFlows,
  paginateListIngestionJobs,
  paginateListKnowledgeBaseDocuments,
  paginateListKnowledgeBases,
  paginateListPrompts,
  AccessDeniedException,
  CustomControlMethod,
  ActionGroupExecutor,
  ConflictException,
  ActionGroupState,
  APISchema,
  Type,
  RequireConfirmation,
  FunctionSchema,
  ActionGroupSignature,
  InternalServerException,
  ResourceNotFoundException,
  ServiceQuotaExceededException,
  ThrottlingException,
  ValidationException,
  AgentCollaboration,
  AgentStatus,
  OrchestrationExecutor,
  MemoryType,
  OrchestrationType,
  CreationMode,
  PromptState,
  PromptType,
  AgentAliasStatus,
  AliasInvocationState,
  RelayConversationHistory,
  KnowledgeBaseState,
  DataDeletionPolicy,
  CrawlFilterConfigurationType,
  ConfluenceAuthType,
  ConfluenceHostType,
  SalesforceAuthType,
  SharePointAuthType,
  SharePointHostType,
  DataSourceType,
  WebScopeType,
  ChunkingStrategy,
  EnrichmentStrategyMethod,
  ContextEnrichmentType,
  StepType,
  ParsingModality,
  ParsingStrategy,
  DataSourceStatus,
  FlowConnectionConfiguration,
  FlowConnectionType,
  SupportedLanguages,
  PromptInferenceConfiguration,
  PerformanceConfigLatency,
  RerankingMetadataSelectionMode,
  RerankingMetadataSelectiveModeConfiguration,
  VectorSearchRerankingConfigurationType,
  CachePointType,
  ContentBlock,
  ConversationRole,
  SystemContentBlock,
  ToolChoice,
  ToolInputSchema,
  Tool,
  PromptTemplateConfiguration,
  PromptTemplateType,
  PromptFlowNodeSourceConfiguration,
  RetrievalFlowNodeServiceConfiguration,
  StorageFlowNodeServiceConfiguration,
  FlowNodeInputCategory,
  FlowNodeIODataType,
  FlowNodeType,
  FlowStatus,
  ConcurrencyType,
  IncompatibleLoopNodeType,
  FlowValidationDetails,
  FlowValidationSeverity,
  FlowValidationType,
  APISchemaFilterSensitiveLog,
  CreateAgentActionGroupRequestFilterSensitiveLog,
  AgentActionGroupFilterSensitiveLog,
  CreateAgentActionGroupResponseFilterSensitiveLog,
  GetAgentActionGroupResponseFilterSensitiveLog,
  UpdateAgentActionGroupRequestFilterSensitiveLog,
  UpdateAgentActionGroupResponseFilterSensitiveLog,
  PromptConfigurationFilterSensitiveLog,
  PromptOverrideConfigurationFilterSensitiveLog,
  AgentFilterSensitiveLog,
  AgentCollaboratorFilterSensitiveLog,
  AssociateAgentCollaboratorRequestFilterSensitiveLog,
  AssociateAgentCollaboratorResponseFilterSensitiveLog,
  GetAgentCollaboratorResponseFilterSensitiveLog,
  AgentCollaboratorSummaryFilterSensitiveLog,
  ListAgentCollaboratorsResponseFilterSensitiveLog,
  UpdateAgentCollaboratorRequestFilterSensitiveLog,
  UpdateAgentCollaboratorResponseFilterSensitiveLog,
  CreateAgentRequestFilterSensitiveLog,
  CreateAgentResponseFilterSensitiveLog,
  GetAgentResponseFilterSensitiveLog,
  UpdateAgentRequestFilterSensitiveLog,
  UpdateAgentResponseFilterSensitiveLog,
  AgentVersionFilterSensitiveLog,
  PatternObjectFilterFilterSensitiveLog,
  PatternObjectFilterConfigurationFilterSensitiveLog,
  CrawlFilterConfigurationFilterSensitiveLog,
  ConfluenceCrawlerConfigurationFilterSensitiveLog,
  ConfluenceDataSourceConfigurationFilterSensitiveLog,
  S3DataSourceConfigurationFilterSensitiveLog,
  SalesforceCrawlerConfigurationFilterSensitiveLog,
  SalesforceDataSourceConfigurationFilterSensitiveLog,
  SharePointCrawlerConfigurationFilterSensitiveLog,
  SharePointDataSourceConfigurationFilterSensitiveLog,
  WebCrawlerConfigurationFilterSensitiveLog,
  WebDataSourceConfigurationFilterSensitiveLog,
  DataSourceConfigurationFilterSensitiveLog,
  CreateDataSourceRequestFilterSensitiveLog,
  DataSourceFilterSensitiveLog,
  CreateDataSourceResponseFilterSensitiveLog,
  GetDataSourceResponseFilterSensitiveLog,
  UpdateDataSourceRequestFilterSensitiveLog,
  UpdateDataSourceResponseFilterSensitiveLog,
  FlowConditionFilterSensitiveLog,
  ConditionFlowNodeConfigurationFilterSensitiveLog,
  InlineCodeFlowNodeConfigurationFilterSensitiveLog,
  KnowledgeBasePromptTemplateFilterSensitiveLog,
  KnowledgeBaseOrchestrationConfigurationFilterSensitiveLog,
  RerankingMetadataSelectiveModeConfigurationFilterSensitiveLog,
  MetadataConfigurationForRerankingFilterSensitiveLog,
  VectorSearchBedrockRerankingConfigurationFilterSensitiveLog,
  VectorSearchRerankingConfigurationFilterSensitiveLog,
  KnowledgeBaseFlowNodeConfigurationFilterSensitiveLog,
  LoopControllerFlowNodeConfigurationFilterSensitiveLog,
  ContentBlockFilterSensitiveLog,
  MessageFilterSensitiveLog,
  SystemContentBlockFilterSensitiveLog,
  ToolChoiceFilterSensitiveLog,
  ToolConfigurationFilterSensitiveLog,
  ChatPromptTemplateConfigurationFilterSensitiveLog,
  TextPromptTemplateConfigurationFilterSensitiveLog,
  PromptTemplateConfigurationFilterSensitiveLog,
  PromptFlowNodeInlineConfigurationFilterSensitiveLog,
  PromptFlowNodeSourceConfigurationFilterSensitiveLog,
  PromptFlowNodeConfigurationFilterSensitiveLog,
  FlowNodeInputFilterSensitiveLog,
  DuplicateConditionExpressionFlowValidationDetailsFilterSensitiveLog,
  FlowValidationDetailsFilterSensitiveLog,
  FlowValidationFilterSensitiveLog,
  IngestionJobStatus,
  IngestionJobFilterAttribute,
  IngestionJobFilterOperator,
  IngestionJobSortByAttribute,
  SortOrder,
  ContentDataSourceType,
  DocumentStatus,
  InlineContentType,
  CustomSourceType,
  MetadataValueType,
  MetadataSourceType,
  RedshiftProvisionedAuthType,
  RedshiftServerlessAuthType,
  RedshiftQueryEngineType,
  IncludeExclude,
  RedshiftQueryEngineStorageType,
  QueryEngineType,
  KnowledgeBaseType,
  EmbeddingDataType,
  SupplementalDataStorageLocationType,
  KnowledgeBaseStorageType,
  KnowledgeBaseStatus,
  PromptGenAiResource,
  FlowNodeConfiguration,
  ByteContentDocFilterSensitiveLog,
  TextContentDocFilterSensitiveLog,
  InlineContentFilterSensitiveLog,
  CustomContentFilterSensitiveLog,
  DocumentContentFilterSensitiveLog,
  MetadataAttributeValueFilterSensitiveLog,
  MetadataAttributeFilterSensitiveLog,
  DocumentMetadataFilterSensitiveLog,
  KnowledgeBaseDocumentFilterSensitiveLog,
  IngestKnowledgeBaseDocumentsRequestFilterSensitiveLog,
  QueryGenerationContextFilterSensitiveLog,
  QueryGenerationConfigurationFilterSensitiveLog,
  RedshiftConfigurationFilterSensitiveLog,
  SqlKnowledgeBaseConfigurationFilterSensitiveLog,
  KnowledgeBaseConfigurationFilterSensitiveLog,
  NeptuneAnalyticsConfigurationFilterSensitiveLog,
  OpenSearchManagedClusterConfigurationFilterSensitiveLog,
  S3VectorsConfigurationFilterSensitiveLog,
  StorageConfigurationFilterSensitiveLog,
  CreateKnowledgeBaseRequestFilterSensitiveLog,
  KnowledgeBaseFilterSensitiveLog,
  CreateKnowledgeBaseResponseFilterSensitiveLog,
  GetKnowledgeBaseResponseFilterSensitiveLog,
  UpdateKnowledgeBaseRequestFilterSensitiveLog,
  UpdateKnowledgeBaseResponseFilterSensitiveLog,
  PromptAgentResourceFilterSensitiveLog,
  PromptGenAiResourceFilterSensitiveLog,
  PromptMetadataEntryFilterSensitiveLog,
  PromptVariantFilterSensitiveLog,
  CreatePromptRequestFilterSensitiveLog,
  CreatePromptResponseFilterSensitiveLog,
  CreatePromptVersionResponseFilterSensitiveLog,
  GetPromptResponseFilterSensitiveLog,
  UpdatePromptRequestFilterSensitiveLog,
  UpdatePromptResponseFilterSensitiveLog,
  ValidateFlowDefinitionResponseFilterSensitiveLog,
  GetAgentVersionResponseFilterSensitiveLog,
  FlowDefinitionFilterSensitiveLog,
  FlowNodeFilterSensitiveLog,
  FlowNodeConfigurationFilterSensitiveLog,
  LoopFlowNodeConfigurationFilterSensitiveLog,
  CreateFlowRequestFilterSensitiveLog,
  CreateFlowResponseFilterSensitiveLog,
  CreateFlowVersionResponseFilterSensitiveLog,
  GetFlowResponseFilterSensitiveLog,
  GetFlowVersionResponseFilterSensitiveLog,
  UpdateFlowRequestFilterSensitiveLog,
  UpdateFlowResponseFilterSensitiveLog,
  ValidateFlowDefinitionRequestFilterSensitiveLog
});

