import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import { BedrockAgentClient } from "./BedrockAgentClient";
import {
  AssociateAgentCollaboratorCommandInput,
  AssociateAgentCollaboratorCommandOutput,
} from "./commands/AssociateAgentCollaboratorCommand";
import {
  AssociateAgentKnowledgeBaseCommandInput,
  AssociateAgentKnowledgeBaseCommandOutput,
} from "./commands/AssociateAgentKnowledgeBaseCommand";
import {
  CreateAgentActionGroupCommandInput,
  CreateAgentActionGroupCommandOutput,
} from "./commands/CreateAgentActionGroupCommand";
import {
  CreateAgentAliasCommandInput,
  CreateAgentAliasCommandOutput,
} from "./commands/CreateAgentAliasCommand";
import {
  CreateAgentCommandInput,
  CreateAgentCommandOutput,
} from "./commands/CreateAgentCommand";
import {
  CreateDataSourceCommandInput,
  CreateDataSourceCommandOutput,
} from "./commands/CreateDataSourceCommand";
import {
  CreateFlowAliasCommandInput,
  CreateFlowAliasCommandOutput,
} from "./commands/CreateFlowAliasCommand";
import {
  CreateFlowCommandInput,
  CreateFlowCommandOutput,
} from "./commands/CreateFlowCommand";
import {
  CreateFlowVersionCommandInput,
  CreateFlowVersionCommandOutput,
} from "./commands/CreateFlowVersionCommand";
import {
  CreateKnowledgeBaseCommandInput,
  CreateKnowledgeBaseCommandOutput,
} from "./commands/CreateKnowledgeBaseCommand";
import {
  CreatePromptCommandInput,
  CreatePromptCommandOutput,
} from "./commands/CreatePromptCommand";
import {
  CreatePromptVersionCommandInput,
  CreatePromptVersionCommandOutput,
} from "./commands/CreatePromptVersionCommand";
import {
  DeleteAgentActionGroupCommandInput,
  DeleteAgentActionGroupCommandOutput,
} from "./commands/DeleteAgentActionGroupCommand";
import {
  DeleteAgentAliasCommandInput,
  DeleteAgentAliasCommandOutput,
} from "./commands/DeleteAgentAliasCommand";
import {
  DeleteAgentCommandInput,
  DeleteAgentCommandOutput,
} from "./commands/DeleteAgentCommand";
import {
  DeleteAgentVersionCommandInput,
  DeleteAgentVersionCommandOutput,
} from "./commands/DeleteAgentVersionCommand";
import {
  DeleteDataSourceCommandInput,
  DeleteDataSourceCommandOutput,
} from "./commands/DeleteDataSourceCommand";
import {
  DeleteFlowAliasCommandInput,
  DeleteFlowAliasCommandOutput,
} from "./commands/DeleteFlowAliasCommand";
import {
  DeleteFlowCommandInput,
  DeleteFlowCommandOutput,
} from "./commands/DeleteFlowCommand";
import {
  DeleteFlowVersionCommandInput,
  DeleteFlowVersionCommandOutput,
} from "./commands/DeleteFlowVersionCommand";
import {
  DeleteKnowledgeBaseCommandInput,
  DeleteKnowledgeBaseCommandOutput,
} from "./commands/DeleteKnowledgeBaseCommand";
import {
  DeleteKnowledgeBaseDocumentsCommandInput,
  DeleteKnowledgeBaseDocumentsCommandOutput,
} from "./commands/DeleteKnowledgeBaseDocumentsCommand";
import {
  DeletePromptCommandInput,
  DeletePromptCommandOutput,
} from "./commands/DeletePromptCommand";
import {
  DisassociateAgentCollaboratorCommandInput,
  DisassociateAgentCollaboratorCommandOutput,
} from "./commands/DisassociateAgentCollaboratorCommand";
import {
  DisassociateAgentKnowledgeBaseCommandInput,
  DisassociateAgentKnowledgeBaseCommandOutput,
} from "./commands/DisassociateAgentKnowledgeBaseCommand";
import {
  GetAgentActionGroupCommandInput,
  GetAgentActionGroupCommandOutput,
} from "./commands/GetAgentActionGroupCommand";
import {
  GetAgentAliasCommandInput,
  GetAgentAliasCommandOutput,
} from "./commands/GetAgentAliasCommand";
import {
  GetAgentCollaboratorCommandInput,
  GetAgentCollaboratorCommandOutput,
} from "./commands/GetAgentCollaboratorCommand";
import {
  GetAgentCommandInput,
  GetAgentCommandOutput,
} from "./commands/GetAgentCommand";
import {
  GetAgentKnowledgeBaseCommandInput,
  GetAgentKnowledgeBaseCommandOutput,
} from "./commands/GetAgentKnowledgeBaseCommand";
import {
  GetAgentVersionCommandInput,
  GetAgentVersionCommandOutput,
} from "./commands/GetAgentVersionCommand";
import {
  GetDataSourceCommandInput,
  GetDataSourceCommandOutput,
} from "./commands/GetDataSourceCommand";
import {
  GetFlowAliasCommandInput,
  GetFlowAliasCommandOutput,
} from "./commands/GetFlowAliasCommand";
import {
  GetFlowCommandInput,
  GetFlowCommandOutput,
} from "./commands/GetFlowCommand";
import {
  GetFlowVersionCommandInput,
  GetFlowVersionCommandOutput,
} from "./commands/GetFlowVersionCommand";
import {
  GetIngestionJobCommandInput,
  GetIngestionJobCommandOutput,
} from "./commands/GetIngestionJobCommand";
import {
  GetKnowledgeBaseCommandInput,
  GetKnowledgeBaseCommandOutput,
} from "./commands/GetKnowledgeBaseCommand";
import {
  GetKnowledgeBaseDocumentsCommandInput,
  GetKnowledgeBaseDocumentsCommandOutput,
} from "./commands/GetKnowledgeBaseDocumentsCommand";
import {
  GetPromptCommandInput,
  GetPromptCommandOutput,
} from "./commands/GetPromptCommand";
import {
  IngestKnowledgeBaseDocumentsCommandInput,
  IngestKnowledgeBaseDocumentsCommandOutput,
} from "./commands/IngestKnowledgeBaseDocumentsCommand";
import {
  ListAgentActionGroupsCommandInput,
  ListAgentActionGroupsCommandOutput,
} from "./commands/ListAgentActionGroupsCommand";
import {
  ListAgentAliasesCommandInput,
  ListAgentAliasesCommandOutput,
} from "./commands/ListAgentAliasesCommand";
import {
  ListAgentCollaboratorsCommandInput,
  ListAgentCollaboratorsCommandOutput,
} from "./commands/ListAgentCollaboratorsCommand";
import {
  ListAgentKnowledgeBasesCommandInput,
  ListAgentKnowledgeBasesCommandOutput,
} from "./commands/ListAgentKnowledgeBasesCommand";
import {
  ListAgentsCommandInput,
  ListAgentsCommandOutput,
} from "./commands/ListAgentsCommand";
import {
  ListAgentVersionsCommandInput,
  ListAgentVersionsCommandOutput,
} from "./commands/ListAgentVersionsCommand";
import {
  ListDataSourcesCommandInput,
  ListDataSourcesCommandOutput,
} from "./commands/ListDataSourcesCommand";
import {
  ListFlowAliasesCommandInput,
  ListFlowAliasesCommandOutput,
} from "./commands/ListFlowAliasesCommand";
import {
  ListFlowsCommandInput,
  ListFlowsCommandOutput,
} from "./commands/ListFlowsCommand";
import {
  ListFlowVersionsCommandInput,
  ListFlowVersionsCommandOutput,
} from "./commands/ListFlowVersionsCommand";
import {
  ListIngestionJobsCommandInput,
  ListIngestionJobsCommandOutput,
} from "./commands/ListIngestionJobsCommand";
import {
  ListKnowledgeBaseDocumentsCommandInput,
  ListKnowledgeBaseDocumentsCommandOutput,
} from "./commands/ListKnowledgeBaseDocumentsCommand";
import {
  ListKnowledgeBasesCommandInput,
  ListKnowledgeBasesCommandOutput,
} from "./commands/ListKnowledgeBasesCommand";
import {
  ListPromptsCommandInput,
  ListPromptsCommandOutput,
} from "./commands/ListPromptsCommand";
import {
  ListTagsForResourceCommandInput,
  ListTagsForResourceCommandOutput,
} from "./commands/ListTagsForResourceCommand";
import {
  PrepareAgentCommandInput,
  PrepareAgentCommandOutput,
} from "./commands/PrepareAgentCommand";
import {
  PrepareFlowCommandInput,
  PrepareFlowCommandOutput,
} from "./commands/PrepareFlowCommand";
import {
  StartIngestionJobCommandInput,
  StartIngestionJobCommandOutput,
} from "./commands/StartIngestionJobCommand";
import {
  StopIngestionJobCommandInput,
  StopIngestionJobCommandOutput,
} from "./commands/StopIngestionJobCommand";
import {
  TagResourceCommandInput,
  TagResourceCommandOutput,
} from "./commands/TagResourceCommand";
import {
  UntagResourceCommandInput,
  UntagResourceCommandOutput,
} from "./commands/UntagResourceCommand";
import {
  UpdateAgentActionGroupCommandInput,
  UpdateAgentActionGroupCommandOutput,
} from "./commands/UpdateAgentActionGroupCommand";
import {
  UpdateAgentAliasCommandInput,
  UpdateAgentAliasCommandOutput,
} from "./commands/UpdateAgentAliasCommand";
import {
  UpdateAgentCollaboratorCommandInput,
  UpdateAgentCollaboratorCommandOutput,
} from "./commands/UpdateAgentCollaboratorCommand";
import {
  UpdateAgentCommandInput,
  UpdateAgentCommandOutput,
} from "./commands/UpdateAgentCommand";
import {
  UpdateAgentKnowledgeBaseCommandInput,
  UpdateAgentKnowledgeBaseCommandOutput,
} from "./commands/UpdateAgentKnowledgeBaseCommand";
import {
  UpdateDataSourceCommandInput,
  UpdateDataSourceCommandOutput,
} from "./commands/UpdateDataSourceCommand";
import {
  UpdateFlowAliasCommandInput,
  UpdateFlowAliasCommandOutput,
} from "./commands/UpdateFlowAliasCommand";
import {
  UpdateFlowCommandInput,
  UpdateFlowCommandOutput,
} from "./commands/UpdateFlowCommand";
import {
  UpdateKnowledgeBaseCommandInput,
  UpdateKnowledgeBaseCommandOutput,
} from "./commands/UpdateKnowledgeBaseCommand";
import {
  UpdatePromptCommandInput,
  UpdatePromptCommandOutput,
} from "./commands/UpdatePromptCommand";
import {
  ValidateFlowDefinitionCommandInput,
  ValidateFlowDefinitionCommandOutput,
} from "./commands/ValidateFlowDefinitionCommand";
export interface BedrockAgent {
  associateAgentCollaborator(
    args: AssociateAgentCollaboratorCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AssociateAgentCollaboratorCommandOutput>;
  associateAgentCollaborator(
    args: AssociateAgentCollaboratorCommandInput,
    cb: (err: any, data?: AssociateAgentCollaboratorCommandOutput) => void
  ): void;
  associateAgentCollaborator(
    args: AssociateAgentCollaboratorCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AssociateAgentCollaboratorCommandOutput) => void
  ): void;
  associateAgentKnowledgeBase(
    args: AssociateAgentKnowledgeBaseCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AssociateAgentKnowledgeBaseCommandOutput>;
  associateAgentKnowledgeBase(
    args: AssociateAgentKnowledgeBaseCommandInput,
    cb: (err: any, data?: AssociateAgentKnowledgeBaseCommandOutput) => void
  ): void;
  associateAgentKnowledgeBase(
    args: AssociateAgentKnowledgeBaseCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AssociateAgentKnowledgeBaseCommandOutput) => void
  ): void;
  createAgent(
    args: CreateAgentCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateAgentCommandOutput>;
  createAgent(
    args: CreateAgentCommandInput,
    cb: (err: any, data?: CreateAgentCommandOutput) => void
  ): void;
  createAgent(
    args: CreateAgentCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateAgentCommandOutput) => void
  ): void;
  createAgentActionGroup(
    args: CreateAgentActionGroupCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateAgentActionGroupCommandOutput>;
  createAgentActionGroup(
    args: CreateAgentActionGroupCommandInput,
    cb: (err: any, data?: CreateAgentActionGroupCommandOutput) => void
  ): void;
  createAgentActionGroup(
    args: CreateAgentActionGroupCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateAgentActionGroupCommandOutput) => void
  ): void;
  createAgentAlias(
    args: CreateAgentAliasCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateAgentAliasCommandOutput>;
  createAgentAlias(
    args: CreateAgentAliasCommandInput,
    cb: (err: any, data?: CreateAgentAliasCommandOutput) => void
  ): void;
  createAgentAlias(
    args: CreateAgentAliasCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateAgentAliasCommandOutput) => void
  ): void;
  createDataSource(
    args: CreateDataSourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateDataSourceCommandOutput>;
  createDataSource(
    args: CreateDataSourceCommandInput,
    cb: (err: any, data?: CreateDataSourceCommandOutput) => void
  ): void;
  createDataSource(
    args: CreateDataSourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateDataSourceCommandOutput) => void
  ): void;
  createFlow(
    args: CreateFlowCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateFlowCommandOutput>;
  createFlow(
    args: CreateFlowCommandInput,
    cb: (err: any, data?: CreateFlowCommandOutput) => void
  ): void;
  createFlow(
    args: CreateFlowCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateFlowCommandOutput) => void
  ): void;
  createFlowAlias(
    args: CreateFlowAliasCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateFlowAliasCommandOutput>;
  createFlowAlias(
    args: CreateFlowAliasCommandInput,
    cb: (err: any, data?: CreateFlowAliasCommandOutput) => void
  ): void;
  createFlowAlias(
    args: CreateFlowAliasCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateFlowAliasCommandOutput) => void
  ): void;
  createFlowVersion(
    args: CreateFlowVersionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateFlowVersionCommandOutput>;
  createFlowVersion(
    args: CreateFlowVersionCommandInput,
    cb: (err: any, data?: CreateFlowVersionCommandOutput) => void
  ): void;
  createFlowVersion(
    args: CreateFlowVersionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateFlowVersionCommandOutput) => void
  ): void;
  createKnowledgeBase(
    args: CreateKnowledgeBaseCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateKnowledgeBaseCommandOutput>;
  createKnowledgeBase(
    args: CreateKnowledgeBaseCommandInput,
    cb: (err: any, data?: CreateKnowledgeBaseCommandOutput) => void
  ): void;
  createKnowledgeBase(
    args: CreateKnowledgeBaseCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateKnowledgeBaseCommandOutput) => void
  ): void;
  createPrompt(
    args: CreatePromptCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreatePromptCommandOutput>;
  createPrompt(
    args: CreatePromptCommandInput,
    cb: (err: any, data?: CreatePromptCommandOutput) => void
  ): void;
  createPrompt(
    args: CreatePromptCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreatePromptCommandOutput) => void
  ): void;
  createPromptVersion(
    args: CreatePromptVersionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreatePromptVersionCommandOutput>;
  createPromptVersion(
    args: CreatePromptVersionCommandInput,
    cb: (err: any, data?: CreatePromptVersionCommandOutput) => void
  ): void;
  createPromptVersion(
    args: CreatePromptVersionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreatePromptVersionCommandOutput) => void
  ): void;
  deleteAgent(
    args: DeleteAgentCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteAgentCommandOutput>;
  deleteAgent(
    args: DeleteAgentCommandInput,
    cb: (err: any, data?: DeleteAgentCommandOutput) => void
  ): void;
  deleteAgent(
    args: DeleteAgentCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteAgentCommandOutput) => void
  ): void;
  deleteAgentActionGroup(
    args: DeleteAgentActionGroupCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteAgentActionGroupCommandOutput>;
  deleteAgentActionGroup(
    args: DeleteAgentActionGroupCommandInput,
    cb: (err: any, data?: DeleteAgentActionGroupCommandOutput) => void
  ): void;
  deleteAgentActionGroup(
    args: DeleteAgentActionGroupCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteAgentActionGroupCommandOutput) => void
  ): void;
  deleteAgentAlias(
    args: DeleteAgentAliasCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteAgentAliasCommandOutput>;
  deleteAgentAlias(
    args: DeleteAgentAliasCommandInput,
    cb: (err: any, data?: DeleteAgentAliasCommandOutput) => void
  ): void;
  deleteAgentAlias(
    args: DeleteAgentAliasCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteAgentAliasCommandOutput) => void
  ): void;
  deleteAgentVersion(
    args: DeleteAgentVersionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteAgentVersionCommandOutput>;
  deleteAgentVersion(
    args: DeleteAgentVersionCommandInput,
    cb: (err: any, data?: DeleteAgentVersionCommandOutput) => void
  ): void;
  deleteAgentVersion(
    args: DeleteAgentVersionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteAgentVersionCommandOutput) => void
  ): void;
  deleteDataSource(
    args: DeleteDataSourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteDataSourceCommandOutput>;
  deleteDataSource(
    args: DeleteDataSourceCommandInput,
    cb: (err: any, data?: DeleteDataSourceCommandOutput) => void
  ): void;
  deleteDataSource(
    args: DeleteDataSourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteDataSourceCommandOutput) => void
  ): void;
  deleteFlow(
    args: DeleteFlowCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteFlowCommandOutput>;
  deleteFlow(
    args: DeleteFlowCommandInput,
    cb: (err: any, data?: DeleteFlowCommandOutput) => void
  ): void;
  deleteFlow(
    args: DeleteFlowCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteFlowCommandOutput) => void
  ): void;
  deleteFlowAlias(
    args: DeleteFlowAliasCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteFlowAliasCommandOutput>;
  deleteFlowAlias(
    args: DeleteFlowAliasCommandInput,
    cb: (err: any, data?: DeleteFlowAliasCommandOutput) => void
  ): void;
  deleteFlowAlias(
    args: DeleteFlowAliasCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteFlowAliasCommandOutput) => void
  ): void;
  deleteFlowVersion(
    args: DeleteFlowVersionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteFlowVersionCommandOutput>;
  deleteFlowVersion(
    args: DeleteFlowVersionCommandInput,
    cb: (err: any, data?: DeleteFlowVersionCommandOutput) => void
  ): void;
  deleteFlowVersion(
    args: DeleteFlowVersionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteFlowVersionCommandOutput) => void
  ): void;
  deleteKnowledgeBase(
    args: DeleteKnowledgeBaseCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteKnowledgeBaseCommandOutput>;
  deleteKnowledgeBase(
    args: DeleteKnowledgeBaseCommandInput,
    cb: (err: any, data?: DeleteKnowledgeBaseCommandOutput) => void
  ): void;
  deleteKnowledgeBase(
    args: DeleteKnowledgeBaseCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteKnowledgeBaseCommandOutput) => void
  ): void;
  deleteKnowledgeBaseDocuments(
    args: DeleteKnowledgeBaseDocumentsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteKnowledgeBaseDocumentsCommandOutput>;
  deleteKnowledgeBaseDocuments(
    args: DeleteKnowledgeBaseDocumentsCommandInput,
    cb: (err: any, data?: DeleteKnowledgeBaseDocumentsCommandOutput) => void
  ): void;
  deleteKnowledgeBaseDocuments(
    args: DeleteKnowledgeBaseDocumentsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteKnowledgeBaseDocumentsCommandOutput) => void
  ): void;
  deletePrompt(
    args: DeletePromptCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeletePromptCommandOutput>;
  deletePrompt(
    args: DeletePromptCommandInput,
    cb: (err: any, data?: DeletePromptCommandOutput) => void
  ): void;
  deletePrompt(
    args: DeletePromptCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeletePromptCommandOutput) => void
  ): void;
  disassociateAgentCollaborator(
    args: DisassociateAgentCollaboratorCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DisassociateAgentCollaboratorCommandOutput>;
  disassociateAgentCollaborator(
    args: DisassociateAgentCollaboratorCommandInput,
    cb: (err: any, data?: DisassociateAgentCollaboratorCommandOutput) => void
  ): void;
  disassociateAgentCollaborator(
    args: DisassociateAgentCollaboratorCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DisassociateAgentCollaboratorCommandOutput) => void
  ): void;
  disassociateAgentKnowledgeBase(
    args: DisassociateAgentKnowledgeBaseCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DisassociateAgentKnowledgeBaseCommandOutput>;
  disassociateAgentKnowledgeBase(
    args: DisassociateAgentKnowledgeBaseCommandInput,
    cb: (err: any, data?: DisassociateAgentKnowledgeBaseCommandOutput) => void
  ): void;
  disassociateAgentKnowledgeBase(
    args: DisassociateAgentKnowledgeBaseCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DisassociateAgentKnowledgeBaseCommandOutput) => void
  ): void;
  getAgent(
    args: GetAgentCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetAgentCommandOutput>;
  getAgent(
    args: GetAgentCommandInput,
    cb: (err: any, data?: GetAgentCommandOutput) => void
  ): void;
  getAgent(
    args: GetAgentCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetAgentCommandOutput) => void
  ): void;
  getAgentActionGroup(
    args: GetAgentActionGroupCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetAgentActionGroupCommandOutput>;
  getAgentActionGroup(
    args: GetAgentActionGroupCommandInput,
    cb: (err: any, data?: GetAgentActionGroupCommandOutput) => void
  ): void;
  getAgentActionGroup(
    args: GetAgentActionGroupCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetAgentActionGroupCommandOutput) => void
  ): void;
  getAgentAlias(
    args: GetAgentAliasCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetAgentAliasCommandOutput>;
  getAgentAlias(
    args: GetAgentAliasCommandInput,
    cb: (err: any, data?: GetAgentAliasCommandOutput) => void
  ): void;
  getAgentAlias(
    args: GetAgentAliasCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetAgentAliasCommandOutput) => void
  ): void;
  getAgentCollaborator(
    args: GetAgentCollaboratorCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetAgentCollaboratorCommandOutput>;
  getAgentCollaborator(
    args: GetAgentCollaboratorCommandInput,
    cb: (err: any, data?: GetAgentCollaboratorCommandOutput) => void
  ): void;
  getAgentCollaborator(
    args: GetAgentCollaboratorCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetAgentCollaboratorCommandOutput) => void
  ): void;
  getAgentKnowledgeBase(
    args: GetAgentKnowledgeBaseCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetAgentKnowledgeBaseCommandOutput>;
  getAgentKnowledgeBase(
    args: GetAgentKnowledgeBaseCommandInput,
    cb: (err: any, data?: GetAgentKnowledgeBaseCommandOutput) => void
  ): void;
  getAgentKnowledgeBase(
    args: GetAgentKnowledgeBaseCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetAgentKnowledgeBaseCommandOutput) => void
  ): void;
  getAgentVersion(
    args: GetAgentVersionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetAgentVersionCommandOutput>;
  getAgentVersion(
    args: GetAgentVersionCommandInput,
    cb: (err: any, data?: GetAgentVersionCommandOutput) => void
  ): void;
  getAgentVersion(
    args: GetAgentVersionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetAgentVersionCommandOutput) => void
  ): void;
  getDataSource(
    args: GetDataSourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetDataSourceCommandOutput>;
  getDataSource(
    args: GetDataSourceCommandInput,
    cb: (err: any, data?: GetDataSourceCommandOutput) => void
  ): void;
  getDataSource(
    args: GetDataSourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetDataSourceCommandOutput) => void
  ): void;
  getFlow(
    args: GetFlowCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetFlowCommandOutput>;
  getFlow(
    args: GetFlowCommandInput,
    cb: (err: any, data?: GetFlowCommandOutput) => void
  ): void;
  getFlow(
    args: GetFlowCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetFlowCommandOutput) => void
  ): void;
  getFlowAlias(
    args: GetFlowAliasCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetFlowAliasCommandOutput>;
  getFlowAlias(
    args: GetFlowAliasCommandInput,
    cb: (err: any, data?: GetFlowAliasCommandOutput) => void
  ): void;
  getFlowAlias(
    args: GetFlowAliasCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetFlowAliasCommandOutput) => void
  ): void;
  getFlowVersion(
    args: GetFlowVersionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetFlowVersionCommandOutput>;
  getFlowVersion(
    args: GetFlowVersionCommandInput,
    cb: (err: any, data?: GetFlowVersionCommandOutput) => void
  ): void;
  getFlowVersion(
    args: GetFlowVersionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetFlowVersionCommandOutput) => void
  ): void;
  getIngestionJob(
    args: GetIngestionJobCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetIngestionJobCommandOutput>;
  getIngestionJob(
    args: GetIngestionJobCommandInput,
    cb: (err: any, data?: GetIngestionJobCommandOutput) => void
  ): void;
  getIngestionJob(
    args: GetIngestionJobCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetIngestionJobCommandOutput) => void
  ): void;
  getKnowledgeBase(
    args: GetKnowledgeBaseCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetKnowledgeBaseCommandOutput>;
  getKnowledgeBase(
    args: GetKnowledgeBaseCommandInput,
    cb: (err: any, data?: GetKnowledgeBaseCommandOutput) => void
  ): void;
  getKnowledgeBase(
    args: GetKnowledgeBaseCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetKnowledgeBaseCommandOutput) => void
  ): void;
  getKnowledgeBaseDocuments(
    args: GetKnowledgeBaseDocumentsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetKnowledgeBaseDocumentsCommandOutput>;
  getKnowledgeBaseDocuments(
    args: GetKnowledgeBaseDocumentsCommandInput,
    cb: (err: any, data?: GetKnowledgeBaseDocumentsCommandOutput) => void
  ): void;
  getKnowledgeBaseDocuments(
    args: GetKnowledgeBaseDocumentsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetKnowledgeBaseDocumentsCommandOutput) => void
  ): void;
  getPrompt(
    args: GetPromptCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetPromptCommandOutput>;
  getPrompt(
    args: GetPromptCommandInput,
    cb: (err: any, data?: GetPromptCommandOutput) => void
  ): void;
  getPrompt(
    args: GetPromptCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetPromptCommandOutput) => void
  ): void;
  ingestKnowledgeBaseDocuments(
    args: IngestKnowledgeBaseDocumentsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<IngestKnowledgeBaseDocumentsCommandOutput>;
  ingestKnowledgeBaseDocuments(
    args: IngestKnowledgeBaseDocumentsCommandInput,
    cb: (err: any, data?: IngestKnowledgeBaseDocumentsCommandOutput) => void
  ): void;
  ingestKnowledgeBaseDocuments(
    args: IngestKnowledgeBaseDocumentsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: IngestKnowledgeBaseDocumentsCommandOutput) => void
  ): void;
  listAgentActionGroups(
    args: ListAgentActionGroupsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListAgentActionGroupsCommandOutput>;
  listAgentActionGroups(
    args: ListAgentActionGroupsCommandInput,
    cb: (err: any, data?: ListAgentActionGroupsCommandOutput) => void
  ): void;
  listAgentActionGroups(
    args: ListAgentActionGroupsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListAgentActionGroupsCommandOutput) => void
  ): void;
  listAgentAliases(
    args: ListAgentAliasesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListAgentAliasesCommandOutput>;
  listAgentAliases(
    args: ListAgentAliasesCommandInput,
    cb: (err: any, data?: ListAgentAliasesCommandOutput) => void
  ): void;
  listAgentAliases(
    args: ListAgentAliasesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListAgentAliasesCommandOutput) => void
  ): void;
  listAgentCollaborators(
    args: ListAgentCollaboratorsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListAgentCollaboratorsCommandOutput>;
  listAgentCollaborators(
    args: ListAgentCollaboratorsCommandInput,
    cb: (err: any, data?: ListAgentCollaboratorsCommandOutput) => void
  ): void;
  listAgentCollaborators(
    args: ListAgentCollaboratorsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListAgentCollaboratorsCommandOutput) => void
  ): void;
  listAgentKnowledgeBases(
    args: ListAgentKnowledgeBasesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListAgentKnowledgeBasesCommandOutput>;
  listAgentKnowledgeBases(
    args: ListAgentKnowledgeBasesCommandInput,
    cb: (err: any, data?: ListAgentKnowledgeBasesCommandOutput) => void
  ): void;
  listAgentKnowledgeBases(
    args: ListAgentKnowledgeBasesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListAgentKnowledgeBasesCommandOutput) => void
  ): void;
  listAgents(): Promise<ListAgentsCommandOutput>;
  listAgents(
    args: ListAgentsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListAgentsCommandOutput>;
  listAgents(
    args: ListAgentsCommandInput,
    cb: (err: any, data?: ListAgentsCommandOutput) => void
  ): void;
  listAgents(
    args: ListAgentsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListAgentsCommandOutput) => void
  ): void;
  listAgentVersions(
    args: ListAgentVersionsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListAgentVersionsCommandOutput>;
  listAgentVersions(
    args: ListAgentVersionsCommandInput,
    cb: (err: any, data?: ListAgentVersionsCommandOutput) => void
  ): void;
  listAgentVersions(
    args: ListAgentVersionsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListAgentVersionsCommandOutput) => void
  ): void;
  listDataSources(
    args: ListDataSourcesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListDataSourcesCommandOutput>;
  listDataSources(
    args: ListDataSourcesCommandInput,
    cb: (err: any, data?: ListDataSourcesCommandOutput) => void
  ): void;
  listDataSources(
    args: ListDataSourcesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListDataSourcesCommandOutput) => void
  ): void;
  listFlowAliases(
    args: ListFlowAliasesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListFlowAliasesCommandOutput>;
  listFlowAliases(
    args: ListFlowAliasesCommandInput,
    cb: (err: any, data?: ListFlowAliasesCommandOutput) => void
  ): void;
  listFlowAliases(
    args: ListFlowAliasesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListFlowAliasesCommandOutput) => void
  ): void;
  listFlows(): Promise<ListFlowsCommandOutput>;
  listFlows(
    args: ListFlowsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListFlowsCommandOutput>;
  listFlows(
    args: ListFlowsCommandInput,
    cb: (err: any, data?: ListFlowsCommandOutput) => void
  ): void;
  listFlows(
    args: ListFlowsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListFlowsCommandOutput) => void
  ): void;
  listFlowVersions(
    args: ListFlowVersionsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListFlowVersionsCommandOutput>;
  listFlowVersions(
    args: ListFlowVersionsCommandInput,
    cb: (err: any, data?: ListFlowVersionsCommandOutput) => void
  ): void;
  listFlowVersions(
    args: ListFlowVersionsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListFlowVersionsCommandOutput) => void
  ): void;
  listIngestionJobs(
    args: ListIngestionJobsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListIngestionJobsCommandOutput>;
  listIngestionJobs(
    args: ListIngestionJobsCommandInput,
    cb: (err: any, data?: ListIngestionJobsCommandOutput) => void
  ): void;
  listIngestionJobs(
    args: ListIngestionJobsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListIngestionJobsCommandOutput) => void
  ): void;
  listKnowledgeBaseDocuments(
    args: ListKnowledgeBaseDocumentsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListKnowledgeBaseDocumentsCommandOutput>;
  listKnowledgeBaseDocuments(
    args: ListKnowledgeBaseDocumentsCommandInput,
    cb: (err: any, data?: ListKnowledgeBaseDocumentsCommandOutput) => void
  ): void;
  listKnowledgeBaseDocuments(
    args: ListKnowledgeBaseDocumentsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListKnowledgeBaseDocumentsCommandOutput) => void
  ): void;
  listKnowledgeBases(): Promise<ListKnowledgeBasesCommandOutput>;
  listKnowledgeBases(
    args: ListKnowledgeBasesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListKnowledgeBasesCommandOutput>;
  listKnowledgeBases(
    args: ListKnowledgeBasesCommandInput,
    cb: (err: any, data?: ListKnowledgeBasesCommandOutput) => void
  ): void;
  listKnowledgeBases(
    args: ListKnowledgeBasesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListKnowledgeBasesCommandOutput) => void
  ): void;
  listPrompts(): Promise<ListPromptsCommandOutput>;
  listPrompts(
    args: ListPromptsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListPromptsCommandOutput>;
  listPrompts(
    args: ListPromptsCommandInput,
    cb: (err: any, data?: ListPromptsCommandOutput) => void
  ): void;
  listPrompts(
    args: ListPromptsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListPromptsCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListTagsForResourceCommandOutput>;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  prepareAgent(
    args: PrepareAgentCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PrepareAgentCommandOutput>;
  prepareAgent(
    args: PrepareAgentCommandInput,
    cb: (err: any, data?: PrepareAgentCommandOutput) => void
  ): void;
  prepareAgent(
    args: PrepareAgentCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: PrepareAgentCommandOutput) => void
  ): void;
  prepareFlow(
    args: PrepareFlowCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PrepareFlowCommandOutput>;
  prepareFlow(
    args: PrepareFlowCommandInput,
    cb: (err: any, data?: PrepareFlowCommandOutput) => void
  ): void;
  prepareFlow(
    args: PrepareFlowCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: PrepareFlowCommandOutput) => void
  ): void;
  startIngestionJob(
    args: StartIngestionJobCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<StartIngestionJobCommandOutput>;
  startIngestionJob(
    args: StartIngestionJobCommandInput,
    cb: (err: any, data?: StartIngestionJobCommandOutput) => void
  ): void;
  startIngestionJob(
    args: StartIngestionJobCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: StartIngestionJobCommandOutput) => void
  ): void;
  stopIngestionJob(
    args: StopIngestionJobCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<StopIngestionJobCommandOutput>;
  stopIngestionJob(
    args: StopIngestionJobCommandInput,
    cb: (err: any, data?: StopIngestionJobCommandOutput) => void
  ): void;
  stopIngestionJob(
    args: StopIngestionJobCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: StopIngestionJobCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<TagResourceCommandOutput>;
  tagResource(
    args: TagResourceCommandInput,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UntagResourceCommandOutput>;
  untagResource(
    args: UntagResourceCommandInput,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  updateAgent(
    args: UpdateAgentCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateAgentCommandOutput>;
  updateAgent(
    args: UpdateAgentCommandInput,
    cb: (err: any, data?: UpdateAgentCommandOutput) => void
  ): void;
  updateAgent(
    args: UpdateAgentCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateAgentCommandOutput) => void
  ): void;
  updateAgentActionGroup(
    args: UpdateAgentActionGroupCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateAgentActionGroupCommandOutput>;
  updateAgentActionGroup(
    args: UpdateAgentActionGroupCommandInput,
    cb: (err: any, data?: UpdateAgentActionGroupCommandOutput) => void
  ): void;
  updateAgentActionGroup(
    args: UpdateAgentActionGroupCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateAgentActionGroupCommandOutput) => void
  ): void;
  updateAgentAlias(
    args: UpdateAgentAliasCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateAgentAliasCommandOutput>;
  updateAgentAlias(
    args: UpdateAgentAliasCommandInput,
    cb: (err: any, data?: UpdateAgentAliasCommandOutput) => void
  ): void;
  updateAgentAlias(
    args: UpdateAgentAliasCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateAgentAliasCommandOutput) => void
  ): void;
  updateAgentCollaborator(
    args: UpdateAgentCollaboratorCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateAgentCollaboratorCommandOutput>;
  updateAgentCollaborator(
    args: UpdateAgentCollaboratorCommandInput,
    cb: (err: any, data?: UpdateAgentCollaboratorCommandOutput) => void
  ): void;
  updateAgentCollaborator(
    args: UpdateAgentCollaboratorCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateAgentCollaboratorCommandOutput) => void
  ): void;
  updateAgentKnowledgeBase(
    args: UpdateAgentKnowledgeBaseCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateAgentKnowledgeBaseCommandOutput>;
  updateAgentKnowledgeBase(
    args: UpdateAgentKnowledgeBaseCommandInput,
    cb: (err: any, data?: UpdateAgentKnowledgeBaseCommandOutput) => void
  ): void;
  updateAgentKnowledgeBase(
    args: UpdateAgentKnowledgeBaseCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateAgentKnowledgeBaseCommandOutput) => void
  ): void;
  updateDataSource(
    args: UpdateDataSourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateDataSourceCommandOutput>;
  updateDataSource(
    args: UpdateDataSourceCommandInput,
    cb: (err: any, data?: UpdateDataSourceCommandOutput) => void
  ): void;
  updateDataSource(
    args: UpdateDataSourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateDataSourceCommandOutput) => void
  ): void;
  updateFlow(
    args: UpdateFlowCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateFlowCommandOutput>;
  updateFlow(
    args: UpdateFlowCommandInput,
    cb: (err: any, data?: UpdateFlowCommandOutput) => void
  ): void;
  updateFlow(
    args: UpdateFlowCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateFlowCommandOutput) => void
  ): void;
  updateFlowAlias(
    args: UpdateFlowAliasCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateFlowAliasCommandOutput>;
  updateFlowAlias(
    args: UpdateFlowAliasCommandInput,
    cb: (err: any, data?: UpdateFlowAliasCommandOutput) => void
  ): void;
  updateFlowAlias(
    args: UpdateFlowAliasCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateFlowAliasCommandOutput) => void
  ): void;
  updateKnowledgeBase(
    args: UpdateKnowledgeBaseCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateKnowledgeBaseCommandOutput>;
  updateKnowledgeBase(
    args: UpdateKnowledgeBaseCommandInput,
    cb: (err: any, data?: UpdateKnowledgeBaseCommandOutput) => void
  ): void;
  updateKnowledgeBase(
    args: UpdateKnowledgeBaseCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateKnowledgeBaseCommandOutput) => void
  ): void;
  updatePrompt(
    args: UpdatePromptCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdatePromptCommandOutput>;
  updatePrompt(
    args: UpdatePromptCommandInput,
    cb: (err: any, data?: UpdatePromptCommandOutput) => void
  ): void;
  updatePrompt(
    args: UpdatePromptCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdatePromptCommandOutput) => void
  ): void;
  validateFlowDefinition(
    args: ValidateFlowDefinitionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ValidateFlowDefinitionCommandOutput>;
  validateFlowDefinition(
    args: ValidateFlowDefinitionCommandInput,
    cb: (err: any, data?: ValidateFlowDefinitionCommandOutput) => void
  ): void;
  validateFlowDefinition(
    args: ValidateFlowDefinitionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ValidateFlowDefinitionCommandOutput) => void
  ): void;
}
export declare class BedrockAgent
  extends BedrockAgentClient
  implements BedrockAgent {}
